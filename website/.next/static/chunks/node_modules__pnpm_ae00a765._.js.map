{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/next%4015.3.3_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = require(\"next/dist/compiled/react\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      \"react-stack-bottom-frame\": function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React[\"react-stack-bottom-frame\"].bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/next%4015.3.3_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/next/dist/compiled/react/jsx-dev-runtime.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-dev-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-dev-runtime.development.js');\n}\n"],"names":[],"mappings":"AAEI;AAFJ;AAEA,uCAA2C;;AAE3C,OAAO;IACL,OAAO,OAAO;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40radix-ui%2Breact-compose-refs%401.1.2_%40types%2Breact%4019.1.6_react%4019.1.0/node_modules/%40radix-ui/react-compose-refs/src/compose-refs.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    return ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    ref.current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]): React.RefCallback<T> {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == 'function') {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n\n    // React <19 will log an error to the console if a callback ref returns a\n    // value. We don't use ref cleanups internally so this will only happen if a\n    // user's ref callback returns a value, which we only expect if they are\n    // using the cleanup functionality added in React 19.\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == 'function') {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]): React.RefCallback<T> {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;;AAQvB,SAAS,OAAU,GAAA,EAAqB,KAAA,EAAU;IAChD,IAAI,OAAO,QAAQ,YAAY;QAC7B,OAAO,IAAI,KAAK;IAClB,OAAA,IAAW,QAAQ,QAAQ,QAAQ,KAAA,GAAW;QAC5C,IAAI,OAAA,GAAU;IAChB;AACF;AAMA,SAAS,YAAA,GAAkB,IAAA,EAA8C;IACvE,OAAO,CAAC,SAAS;QACf,IAAI,aAAa;QACjB,MAAM,WAAW,KAAK,GAAA,CAAI,CAAC,QAAQ;YACjC,MAAM,UAAU,OAAO,KAAK,IAAI;YAChC,IAAI,CAAC,cAAc,OAAO,WAAW,YAAY;gBAC/C,aAAa;YACf;YACA,OAAO;QACT,CAAC;QAMD,IAAI,YAAY;YACd,OAAO,MAAM;gBACX,IAAA,IAAS,IAAI,GAAG,IAAI,SAAS,MAAA,EAAQ,IAAK;oBACxC,MAAM,UAAU,QAAA,CAAS,CAAC,CAAA;oBAC1B,IAAI,OAAO,WAAW,YAAY;wBAChC,QAAQ;oBACV,OAAO;wBACL,OAAO,IAAA,CAAK,CAAC,CAAA,EAAG,IAAI;oBACtB;gBACF;YACF;QACF;IACF;AACF;AAMA,SAAS,gBAAA,GAAsB,IAAA,EAA8C;IAE3E,wSAAa,cAAA,EAAY,YAAY,GAAG,IAAI,GAAG,IAAI;AACrD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40radix-ui%2Breact-slot%401.2.3_%40types%2Breact%4019.1.6_react%4019.1.0/node_modules/%40radix-ui/react-slot/src/slot.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\n/* @__NO_SIDE_EFFECTS__ */ export function createSlot(ownerName: string) {\n  const SlotClone = createSlotClone(ownerName);\n  const Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n\n    if (slottable) {\n      // the new element to render is the one passed as a child of `Slottable`\n      const newElement = slottable.props.children;\n\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          // because the new element will be the one rendered, we are only interested\n          // in grabbing its children (`newElement.props.children`)\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement)\n            ? (newElement.props as { children: React.ReactNode }).children\n            : null;\n        } else {\n          return child;\n        }\n      });\n\n      return (\n        <SlotClone {...slotProps} ref={forwardedRef}>\n          {React.isValidElement(newElement)\n            ? React.cloneElement(newElement, undefined, newChildren)\n            : null}\n        </SlotClone>\n      );\n    }\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {children}\n      </SlotClone>\n    );\n  });\n\n  Slot.displayName = `${ownerName}.Slot`;\n  return Slot;\n}\n\nconst Slot = createSlot('Slot');\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\n/* @__NO_SIDE_EFFECTS__ */ function createSlotClone(ownerName: string) {\n  const SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props = mergeProps(slotProps, children.props as AnyProps);\n      // do not pass ref to React.Fragment for React 19 compatibility\n      if (children.type !== React.Fragment) {\n        props.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props);\n    }\n\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst SLOTTABLE_IDENTIFIER = Symbol('radix.slottable');\n\ninterface SlottableProps {\n  children: React.ReactNode;\n}\n\ninterface SlottableComponent extends React.FC<SlottableProps> {\n  __radixId: symbol;\n}\n\n/* @__NO_SIDE_EFFECTS__ */ export function createSlottable(ownerName: string) {\n  const Slottable: SlottableComponent = ({ children }) => {\n    return <>{children}</>;\n  };\n  Slottable.displayName = `${ownerName}.Slottable`;\n  Slottable.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable;\n}\n\nconst Slottable = createSlottable('Slottable');\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(\n  child: React.ReactNode\n): child is React.ReactElement<SlottableProps, typeof Slottable> {\n  return (\n    React.isValidElement(child) &&\n    typeof child.type === 'function' &&\n    '__radixId' in child.type &&\n    child.type.__radixId === SLOTTABLE_IDENTIFIER\n  );\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element.props as { ref?: React.Ref<unknown> }).ref;\n  }\n\n  // Not DEV\n  return (element.props as { ref?: React.Ref<unknown> }).ref || (element as any).ref;\n}\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Slot as Root,\n};\nexport type { SlotProps };\n"],"names":["Fragment","Slot","props","Slottable"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/clsx%402.1.1/node_modules/clsx/dist/clsx.mjs"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":[],"mappings":";;;;AAAA,SAAS,EAAE,CAAC;IAAE,IAAI,GAAE,GAAE,IAAE;IAAG,IAAG,YAAU,OAAO,KAAG,YAAU,OAAO,GAAE,KAAG;SAAO,IAAG,YAAU,OAAO,GAAE,IAAG,MAAM,OAAO,CAAC,IAAG;QAAC,IAAI,IAAE,EAAE,MAAM;QAAC,IAAI,IAAE,GAAE,IAAE,GAAE,IAAI,CAAC,CAAC,EAAE,IAAE,CAAC,IAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAC,OAAM,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,IAAE,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;AAAQ,SAAS;IAAO,IAAI,IAAI,GAAE,GAAE,IAAE,GAAE,IAAE,IAAG,IAAE,UAAU,MAAM,EAAC,IAAE,GAAE,IAAI,CAAC,IAAE,SAAS,CAAC,EAAE,KAAG,CAAC,IAAE,EAAE,EAAE,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;uCAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/class-variance-authority%400.7.1/node_modules/class-variance-authority/dist/index.mjs"],"sourcesContent":["/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;CAcC;;;;AAAG;;AACJ,MAAM,gBAAgB,CAAC,QAAQ,OAAO,UAAU,YAAY,GAAG,OAAO,GAAG,UAAU,IAAI,MAAM;AACtF,MAAM,KAAK,yLAAA,CAAA,OAAI;AACf,MAAM,MAAM,CAAC,MAAM,SAAS,CAAC;QAC5B,IAAI;QACJ,IAAI,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,QAAQ,KAAK,MAAM,OAAO,GAAG,MAAM,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,KAAK,EAAE,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,SAAS;QACvN,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG;QACtC,MAAM,uBAAuB,OAAO,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpD,MAAM,cAAc,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ;YAChF,MAAM,qBAAqB,oBAAoB,QAAQ,oBAAoB,KAAK,IAAI,KAAK,IAAI,eAAe,CAAC,QAAQ;YACrH,IAAI,gBAAgB,MAAM,OAAO;YACjC,MAAM,aAAa,cAAc,gBAAgB,cAAc;YAC/D,OAAO,QAAQ,CAAC,QAAQ,CAAC,WAAW;QACxC;QACA,MAAM,wBAAwB,SAAS,OAAO,OAAO,CAAC,OAAO,MAAM,CAAC,CAAC,KAAK;YACtE,IAAI,CAAC,KAAK,MAAM,GAAG;YACnB,IAAI,UAAU,WAAW;gBACrB,OAAO;YACX;YACA,GAAG,CAAC,IAAI,GAAG;YACX,OAAO;QACX,GAAG,CAAC;QACJ,MAAM,+BAA+B,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,CAAC,2BAA2B,OAAO,gBAAgB,MAAM,QAAQ,6BAA6B,KAAK,IAAI,KAAK,IAAI,yBAAyB,MAAM,CAAC,CAAC,KAAK;YACvO,IAAI,EAAE,OAAO,OAAO,EAAE,WAAW,WAAW,EAAE,GAAG,wBAAwB,GAAG;YAC5E,OAAO,OAAO,OAAO,CAAC,wBAAwB,KAAK,CAAC,CAAC;gBACjD,IAAI,CAAC,KAAK,MAAM,GAAG;gBACnB,OAAO,MAAM,OAAO,CAAC,SAAS,MAAM,QAAQ,CAAC;oBACzC,GAAG,eAAe;oBAClB,GAAG,qBAAqB;gBAC5B,CAAC,CAAC,IAAI,IAAI,CAAC;oBACP,GAAG,eAAe;oBAClB,GAAG,qBAAqB;gBAC5B,CAAC,CAAC,CAAC,IAAI,KAAK;YAChB,KAAK;mBACE;gBACH;gBACA;aACH,GAAG;QACR,GAAG,EAAE;QACL,OAAO,GAAG,MAAM,sBAAsB,8BAA8B,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,KAAK,EAAE,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,SAAS;IAChM","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40radix-ui%2Breact-primitive%402.1.3_%40types%2Breact-dom%4019.1.5_%40types%2Breact%4019.1.6__%40types%2Brea_6d39c510391971883d7c43bc1c4afb7d/node_modules/%40radix-ui/react-primitive/src/primitive.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { createSlot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'select',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\ntype Primitives = { [E in (typeof NODES)[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Slot = createSlot(`Primitive.${node}`);\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    if (typeof window !== 'undefined') {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not necessary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { PrimitivePropsWithRef };\n"],"names":[],"mappings":";;;;;;AAAA,YAAY,WAAW;AACvB,YAAY,cAAc;AAC1B,SAAS,kBAAkB;AA4ChB;;;;;AA1CX,IAAM,QAAQ;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACF;AAcA,IAAM,YAAY,MAAM,MAAA,CAAO,CAAC,WAAW,SAAS;IAClD,MAAM,mTAAO,aAAA,EAAW,CAAA,UAAA,EAAa,IAAI,EAAE;IAC3C,MAAM,wSAAa,aAAA,EAAW,CAAC,OAA2C,iBAAsB;QAC9F,MAAM,EAAE,OAAA,EAAS,GAAG,eAAe,CAAA,GAAI;QACvC,MAAM,OAAY,UAAU,OAAO;QAEnC,IAAI,OAAO,WAAW,aAAa;YAChC,MAAA,CAAe,OAAO,GAAA,CAAI,UAAU,CAAC,CAAA,GAAI;QAC5C;QAEA,OAAO,aAAA,GAAA,CAAA,GAAA,qSAAA,CAAA,MAAA,EAAC,MAAA;YAAM,GAAG,cAAA;YAAgB,KAAK;QAAA,CAAc;IACtD,CAAC;IAED,KAAK,WAAA,GAAc,CAAA,UAAA,EAAa,IAAI,EAAA;IAEpC,OAAO;QAAE,GAAG,SAAA;QAAW,CAAC,IAAI,CAAA,EAAG;IAAK;AACtC,GAAG,CAAC,CAAe;AA2CnB,SAAS,4BAAmD,MAAA,EAAqB,KAAA,EAAU;IACzF,IAAI,OAAQ,ySAAS,YAAA,EAAU,IAAM,OAAO,aAAA,CAAc,KAAK,CAAC;AAClE;AAIA,IAAM,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 566, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40radix-ui%2Breact-label%402.1.7_%40types%2Breact-dom%4019.1.5_%40types%2Breact%4019.1.6__%40types%2Breact%401_a6d6800ce84dfc85dc7d9d03a7b240fb/node_modules/%40radix-ui/react-label/src/label.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ComponentRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;AACvB,SAAS,iBAAiB;AActB;;;;;AARJ,IAAM,OAAO;AAMb,IAAM,ySAAc,aAAA,EAAqC,CAAC,OAAO,iBAAiB;IAChF,OACE,aAAA,GAAA,CAAA,GAAA,qSAAA,CAAA,MAAA,4XAAC,YAAA,CAAU,KAAA,EAAV;QACE,GAAG,KAAA;QACJ,KAAK;QACL,aAAa,CAAC,UAAU;YAEtB,MAAM,SAAS,MAAM,MAAA;YACrB,IAAI,OAAO,OAAA,CAAQ,iCAAiC,EAAG,CAAA;YAEvD,MAAM,WAAA,GAAc,KAAK;YAEzB,IAAI,CAAC,MAAM,gBAAA,IAAoB,MAAM,MAAA,GAAS,EAAG,CAAA,MAAM,cAAA,CAAe;QACxE;IAAA;AAGN,CAAC;AAED,MAAM,WAAA,GAAc;AAIpB,IAAM,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"file":"types.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Bstore%400.7.1/node_modules/%40tanstack/store/src/types.ts"],"sourcesContent":["/**\n * @private\n */\nexport type AnyUpdater = (prev: any) => any\n\n/**\n * Type-safe updater that can be either a function or direct value\n */\nexport type Updater<T> = ((prev: T) => T) | T\n\n/**\n * @private\n */\nexport interface ListenerValue<T> {\n  prevVal: T\n  currentVal: T\n}\n\n/**\n * @private\n */\nexport type Listener<T> = (value: ListenerValue<T>) => void\n\n/**\n * Type guard to check if updater is a function\n */\nexport function isUpdaterFunction<T>(\n  updater: Updater<T>,\n): updater is (prev: T) => T {\n  return typeof updater === 'function'\n}\n"],"names":[],"mappings":";;;AA0BO,SAAS,kBACd,OAAA,EAC2B;IAC3B,OAAO,OAAO,YAAY;AAC5B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"file":"store.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Bstore%400.7.1/node_modules/%40tanstack/store/src/store.ts"],"sourcesContent":["import { __flush } from './scheduler'\nimport { isUpdaterFunction } from './types'\nimport type { AnyUpdater, Listener, Updater } from './types'\n\nexport interface StoreOptions<\n  TState,\n  TUpdater extends AnyUpdater = (cb: TState) => TState,\n> {\n  /**\n   * Replace the default update function with a custom one.\n   */\n  updateFn?: (previous: TState) => (updater: TUpdater) => TState\n  /**\n   * Called when a listener subscribes to the store.\n   *\n   * @return a function to unsubscribe the listener\n   */\n  onSubscribe?: (\n    listener: Listener<TState>,\n    store: Store<TState, TUpdater>,\n  ) => () => void\n  /**\n   * Called after the state has been updated, used to derive other state.\n   */\n  onUpdate?: () => void\n}\n\nexport class Store<\n  TState,\n  TUpdater extends AnyUpdater = (cb: TState) => TState,\n> {\n  listeners = new Set<Listener<TState>>()\n  state: TState\n  prevState: TState\n  options?: StoreOptions<TState, TUpdater>\n\n  constructor(initialState: TState, options?: StoreOptions<TState, TUpdater>) {\n    this.prevState = initialState\n    this.state = initialState\n    this.options = options\n  }\n\n  subscribe = (listener: Listener<TState>) => {\n    this.listeners.add(listener)\n    const unsub = this.options?.onSubscribe?.(listener, this)\n    return () => {\n      this.listeners.delete(listener)\n      unsub?.()\n    }\n  }\n\n  /**\n   * Update the store state safely with improved type checking\n   */\n  setState(updater: (prevState: TState) => TState): void\n  setState(updater: TState): void\n  setState(updater: TUpdater): void\n  setState(updater: Updater<TState> | TUpdater): void {\n    this.prevState = this.state\n\n    if (this.options?.updateFn) {\n      this.state = this.options.updateFn(this.prevState)(updater as TUpdater)\n    } else {\n      if (isUpdaterFunction(updater)) {\n        this.state = updater(this.prevState)\n      } else {\n        this.state = updater as TState\n      }\n    }\n\n    // Always run onUpdate, regardless of batching\n    this.options?.onUpdate?.()\n\n    // Attempt to flush\n    __flush(this as never)\n  }\n}\n"],"names":[],"mappings":";;;;;;;AA2BO,MAAM,MAGX;IAMA,YAAY,YAAA,EAAsB,OAAA,CAA0C;QAL5E,IAAA,CAAA,SAAA,GAAA,aAAA,GAAA,IAAgB,IAAsB;QAWtC,IAAA,CAAA,SAAA,GAAY,CAAC,aAA+B;;YACrC,IAAA,CAAA,SAAA,CAAU,GAAA,CAAI,QAAQ;YAC3B,MAAM,QAAA,CAAQ,KAAA,CAAA,KAAA,IAAA,CAAK,OAAA,KAAL,OAAA,KAAA,IAAA,GAAc,WAAA,KAAd,OAAA,KAAA,IAAA,GAAA,IAAA,CAAA,IAA4B,UAAU,IAAA;YACpD,OAAO,MAAM;gBACN,IAAA,CAAA,SAAA,CAAU,MAAA,CAAO,QAAQ;gBACtB,SAAA,OAAA,KAAA,IAAA;YACV;QACF;QAZE,IAAA,CAAK,SAAA,GAAY;QACjB,IAAA,CAAK,KAAA,GAAQ;QACb,IAAA,CAAK,OAAA,GAAU;IAAA;IAkBjB,SAAS,OAAA,EAA2C;;QAClD,IAAA,CAAK,SAAA,GAAY,IAAA,CAAK,KAAA;QAElB,IAAA,CAAA,KAAA,IAAA,CAAK,OAAA,KAAL,OAAA,KAAA,IAAA,GAAc,QAAA,EAAU;YAC1B,IAAA,CAAK,KAAA,GAAQ,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS,IAAA,CAAK,SAAS,EAAE,OAAmB;QAAA,OACjE;YACD,uOAAA,oBAAA,EAAkB,OAAO,GAAG;gBACzB,IAAA,CAAA,KAAA,GAAQ,QAAQ,IAAA,CAAK,SAAS;YAAA,OAC9B;gBACL,IAAA,CAAK,KAAA,GAAQ;YAAA;QACf;QAIF,CAAA,KAAA,CAAA,KAAA,IAAA,CAAK,OAAA,KAAL,OAAA,KAAA,IAAA,GAAc,QAAA,KAAd,OAAA,KAAA,IAAA,GAAA,IAAA,CAAA;QAGA,CAAA,GAAA,kOAAA,CAAA,UAAA,EAAQ,IAAa;IAAA;AAEzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 662, "column": 0}, "map": {"version":3,"file":"derived.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Bstore%400.7.1/node_modules/%40tanstack/store/src/derived.ts"],"sourcesContent":["import { Store } from './store'\nimport { __derivedToStore, __storeToDerived } from './scheduler'\nimport type { Listener } from './types'\n\nexport type UnwrapDerivedOrStore<T> =\n  T extends Derived<infer InnerD>\n    ? InnerD\n    : T extends Store<infer InnerS>\n      ? InnerS\n      : never\n\ntype UnwrapReadonlyDerivedOrStoreArray<\n  TArr extends ReadonlyArray<Derived<any> | Store<any>>,\n> = TArr extends readonly [infer Head, ...infer Tail]\n  ? Head extends Derived<any> | Store<any>\n    ? Tail extends ReadonlyArray<Derived<any> | Store<any>>\n      ? [UnwrapDerivedOrStore<Head>, ...UnwrapReadonlyDerivedOrStoreArray<Tail>]\n      : []\n    : []\n  : []\n\n// Can't have currVal, as it's being evaluated from the current derived fn\nexport interface DerivedFnProps<\n  TArr extends ReadonlyArray<Derived<any> | Store<any>> = ReadonlyArray<any>,\n  TUnwrappedArr extends\n    UnwrapReadonlyDerivedOrStoreArray<TArr> = UnwrapReadonlyDerivedOrStoreArray<TArr>,\n> {\n  // `undefined` if it's the first run\n  /**\n   * `undefined` if it's the first run\n   * @privateRemarks this also cannot be typed as TState, as it breaks the inferencing of the function's return type when an argument is used - even with `NoInfer` usage\n   */\n  prevVal: unknown | undefined\n  prevDepVals: TUnwrappedArr | undefined\n  currDepVals: TUnwrappedArr\n}\n\nexport interface DerivedOptions<\n  TState,\n  TArr extends ReadonlyArray<Derived<any> | Store<any>> = ReadonlyArray<any>,\n> {\n  onSubscribe?: (\n    listener: Listener<TState>,\n    derived: Derived<TState>,\n  ) => () => void\n  onUpdate?: () => void\n  deps: TArr\n  /**\n   * Values of the `deps` from before and after the current invocation of `fn`\n   */\n  fn: (props: DerivedFnProps<TArr>) => TState\n}\n\nexport class Derived<\n  TState,\n  const TArr extends ReadonlyArray<\n    Derived<any> | Store<any>\n  > = ReadonlyArray<any>,\n> {\n  listeners = new Set<Listener<TState>>()\n  state: TState\n  prevState: TState | undefined\n  options: DerivedOptions<TState, TArr>\n\n  /**\n   * Functions representing the subscriptions. Call a function to cleanup\n   * @private\n   */\n  _subscriptions: Array<() => void> = []\n\n  lastSeenDepValues: Array<unknown> = []\n  getDepVals = () => {\n    const prevDepVals = [] as Array<unknown>\n    const currDepVals = [] as Array<unknown>\n    for (const dep of this.options.deps) {\n      prevDepVals.push(dep.prevState)\n      currDepVals.push(dep.state)\n    }\n    this.lastSeenDepValues = currDepVals\n    return {\n      prevDepVals,\n      currDepVals,\n      prevVal: this.prevState ?? undefined,\n    }\n  }\n\n  constructor(options: DerivedOptions<TState, TArr>) {\n    this.options = options\n    this.state = options.fn({\n      prevDepVals: undefined,\n      prevVal: undefined,\n      currDepVals: this.getDepVals().currDepVals as never,\n    })\n  }\n\n  registerOnGraph(\n    deps: ReadonlyArray<Derived<any> | Store<any>> = this.options.deps,\n  ) {\n    for (const dep of deps) {\n      if (dep instanceof Derived) {\n        // First register the intermediate derived value if it's not already registered\n        dep.registerOnGraph()\n        // Then register this derived with the dep's underlying stores\n        this.registerOnGraph(dep.options.deps)\n      } else if (dep instanceof Store) {\n        // Register the derived as related derived to the store\n        let relatedLinkedDerivedVals = __storeToDerived.get(dep)\n        if (!relatedLinkedDerivedVals) {\n          relatedLinkedDerivedVals = new Set()\n          __storeToDerived.set(dep, relatedLinkedDerivedVals)\n        }\n        relatedLinkedDerivedVals.add(this as never)\n\n        // Register the store as a related store to this derived\n        let relatedStores = __derivedToStore.get(this as never)\n        if (!relatedStores) {\n          relatedStores = new Set()\n          __derivedToStore.set(this as never, relatedStores)\n        }\n        relatedStores.add(dep)\n      }\n    }\n  }\n\n  unregisterFromGraph(\n    deps: ReadonlyArray<Derived<any> | Store<any>> = this.options.deps,\n  ) {\n    for (const dep of deps) {\n      if (dep instanceof Derived) {\n        this.unregisterFromGraph(dep.options.deps)\n      } else if (dep instanceof Store) {\n        const relatedLinkedDerivedVals = __storeToDerived.get(dep)\n        if (relatedLinkedDerivedVals) {\n          relatedLinkedDerivedVals.delete(this as never)\n        }\n\n        const relatedStores = __derivedToStore.get(this as never)\n        if (relatedStores) {\n          relatedStores.delete(dep)\n        }\n      }\n    }\n  }\n\n  recompute = () => {\n    this.prevState = this.state\n    const { prevDepVals, currDepVals, prevVal } = this.getDepVals()\n    this.state = this.options.fn({\n      prevDepVals: prevDepVals as never,\n      currDepVals: currDepVals as never,\n      prevVal,\n    })\n\n    this.options.onUpdate?.()\n  }\n\n  checkIfRecalculationNeededDeeply = () => {\n    for (const dep of this.options.deps) {\n      if (dep instanceof Derived) {\n        dep.checkIfRecalculationNeededDeeply()\n      }\n    }\n    let shouldRecompute = false\n    const lastSeenDepValues = this.lastSeenDepValues\n    const { currDepVals } = this.getDepVals()\n    for (let i = 0; i < currDepVals.length; i++) {\n      if (currDepVals[i] !== lastSeenDepValues[i]) {\n        shouldRecompute = true\n        break\n      }\n    }\n\n    if (shouldRecompute) {\n      this.recompute()\n    }\n  }\n\n  mount = () => {\n    this.registerOnGraph()\n    this.checkIfRecalculationNeededDeeply()\n\n    return () => {\n      this.unregisterFromGraph()\n      for (const cleanup of this._subscriptions) {\n        cleanup()\n      }\n    }\n  }\n\n  subscribe = (listener: Listener<TState>) => {\n    this.listeners.add(listener)\n    const unsub = this.options.onSubscribe?.(listener, this)\n    return () => {\n      this.listeners.delete(listener)\n      unsub?.()\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 790, "column": 0}, "map": {"version":3,"file":"scheduler.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Bstore%400.7.1/node_modules/%40tanstack/store/src/scheduler.ts"],"sourcesContent":["import { Derived } from './derived'\nimport type { Store } from './store'\n\n/**\n * This is here to solve the pyramid dependency problem where:\n *       A\n *      / \\\n *     B   C\n *      \\ /\n *       D\n *\n * Where we deeply traverse this tree, how do we avoid D being recomputed twice; once when B is updated, once when C is.\n *\n * To solve this, we create linkedDeps that allows us to sync avoid writes to the state until all of the deps have been\n * resolved.\n *\n * This is a record of stores, because derived stores are not able to write values to, but stores are\n */\nexport const __storeToDerived = new WeakMap<\n  Store<unknown>,\n  Set<Derived<unknown>>\n>()\nexport const __derivedToStore = new WeakMap<\n  Derived<unknown>,\n  Set<Store<unknown>>\n>()\n\nexport const __depsThatHaveWrittenThisTick = {\n  current: [] as Array<Derived<unknown> | Store<unknown>>,\n}\n\nlet __isFlushing = false\nlet __batchDepth = 0\nconst __pendingUpdates = new Set<Store<unknown>>()\n// Add a map to store initial values before batch\nconst __initialBatchValues = new Map<Store<unknown>, unknown>()\n\nfunction __flush_internals(relatedVals: Set<Derived<unknown>>) {\n  // First sort deriveds by dependency order\n  const sorted = Array.from(relatedVals).sort((a, b) => {\n    // If a depends on b, b should go first\n    if (a instanceof Derived && a.options.deps.includes(b)) return 1\n    // If b depends on a, a should go first\n    if (b instanceof Derived && b.options.deps.includes(a)) return -1\n    return 0\n  })\n\n  for (const derived of sorted) {\n    if (__depsThatHaveWrittenThisTick.current.includes(derived)) {\n      continue\n    }\n\n    __depsThatHaveWrittenThisTick.current.push(derived)\n    derived.recompute()\n\n    const stores = __derivedToStore.get(derived)\n    if (stores) {\n      for (const store of stores) {\n        const relatedLinkedDerivedVals = __storeToDerived.get(store)\n        if (!relatedLinkedDerivedVals) continue\n        __flush_internals(relatedLinkedDerivedVals)\n      }\n    }\n  }\n}\n\nfunction __notifyListeners(store: Store<unknown>) {\n  store.listeners.forEach((listener) =>\n    listener({\n      prevVal: store.prevState as never,\n      currentVal: store.state as never,\n    }),\n  )\n}\n\nfunction __notifyDerivedListeners(derived: Derived<unknown>) {\n  derived.listeners.forEach((listener) =>\n    listener({\n      prevVal: derived.prevState as never,\n      currentVal: derived.state as never,\n    }),\n  )\n}\n\n/**\n * @private only to be called from `Store` on write\n */\nexport function __flush(store: Store<unknown>) {\n  // If we're starting a batch, store the initial values\n  if (__batchDepth > 0 && !__initialBatchValues.has(store)) {\n    __initialBatchValues.set(store, store.prevState)\n  }\n\n  __pendingUpdates.add(store)\n\n  if (__batchDepth > 0) return\n  if (__isFlushing) return\n\n  try {\n    __isFlushing = true\n\n    while (__pendingUpdates.size > 0) {\n      const stores = Array.from(__pendingUpdates)\n      __pendingUpdates.clear()\n\n      // First notify listeners with updated values\n      for (const store of stores) {\n        // Use initial batch values for prevState if we have them\n        const prevState = __initialBatchValues.get(store) ?? store.prevState\n        store.prevState = prevState\n        __notifyListeners(store)\n      }\n\n      // Then update all derived values\n      for (const store of stores) {\n        const derivedVals = __storeToDerived.get(store)\n        if (!derivedVals) continue\n\n        __depsThatHaveWrittenThisTick.current.push(store)\n        __flush_internals(derivedVals)\n      }\n\n      // Notify derived listeners after recomputing\n      for (const store of stores) {\n        const derivedVals = __storeToDerived.get(store)\n        if (!derivedVals) continue\n\n        for (const derived of derivedVals) {\n          __notifyDerivedListeners(derived)\n        }\n      }\n    }\n  } finally {\n    __isFlushing = false\n    __depsThatHaveWrittenThisTick.current = []\n    __initialBatchValues.clear()\n  }\n}\n\nexport function batch(fn: () => void) {\n  __batchDepth++\n  try {\n    fn()\n  } finally {\n    __batchDepth--\n    if (__batchDepth === 0) {\n      const pendingUpdateToFlush = Array.from(__pendingUpdates)[0] as\n        | Store<unknown>\n        | undefined\n      if (pendingUpdateToFlush) {\n        __flush(pendingUpdateToFlush) // Trigger flush of all pending updates\n      }\n    }\n  }\n}\n"],"names":["store"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 901, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Bform-core%401.12.0/node_modules/%40tanstack/form-core/src/utils.ts"],"sourcesContent":["import type { FieldValidators } from './FieldApi'\nimport type { FormValidators } from './FormApi'\nimport type {\n  GlobalFormValidationError,\n  ValidationCause,\n  ValidationError,\n  ValidationSource,\n} from './types'\n\nexport type UpdaterFn<TInput, TOutput = TInput> = (input: TInput) => TOutput\n\nexport type Updater<TInput, TOutput = TInput> =\n  | TOutput\n  | UpdaterFn<TInput, TOutput>\n\n/**\n * @private\n */\nexport function functionalUpdate<TInput, TOutput = TInput>(\n  updater: Updater<TInput, TOutput>,\n  input: TInput,\n): TOutput {\n  return typeof updater === 'function'\n    ? (updater as UpdaterFn<TInput, TOutput>)(input)\n    : updater\n}\n\n/**\n * Get a value from an object using a path, including dot notation.\n * @private\n */\nexport function getBy(obj: any, path: any) {\n  const pathObj = makePathArray(path)\n  return pathObj.reduce((current: any, pathPart: any) => {\n    if (current === null) return null\n    if (typeof current !== 'undefined') {\n      return current[pathPart]\n    }\n    return undefined\n  }, obj)\n}\n\n/**\n * Set a value on an object using a path, including dot notation.\n * @private\n */\nexport function setBy(obj: any, _path: any, updater: Updater<any>) {\n  const path = makePathArray(_path)\n\n  function doSet(parent?: any): any {\n    if (!path.length) {\n      return functionalUpdate(updater, parent)\n    }\n\n    const key = path.shift()\n\n    if (\n      typeof key === 'string' ||\n      (typeof key === 'number' && !Array.isArray(parent))\n    ) {\n      if (typeof parent === 'object') {\n        if (parent === null) {\n          parent = {}\n        }\n        return {\n          ...parent,\n          [key]: doSet(parent[key]),\n        }\n      }\n      return {\n        [key]: doSet(),\n      }\n    }\n\n    if (Array.isArray(parent) && typeof key === 'number') {\n      const prefix = parent.slice(0, key)\n      return [\n        ...(prefix.length ? prefix : new Array(key)),\n        doSet(parent[key]),\n        ...parent.slice(key + 1),\n      ]\n    }\n    return [...new Array(key), doSet()]\n  }\n\n  return doSet(obj)\n}\n\n/**\n * Delete a field on an object using a path, including dot notation.\n * @private\n */\nexport function deleteBy(obj: any, _path: any) {\n  const path = makePathArray(_path)\n\n  function doDelete(parent: any): any {\n    if (!parent) return\n    if (path.length === 1) {\n      const finalPath = path[0]!\n      if (Array.isArray(parent) && typeof finalPath === 'number') {\n        return parent.filter((_, i) => i !== finalPath)\n      }\n      const { [finalPath]: remove, ...rest } = parent\n      return rest\n    }\n\n    const key = path.shift()\n\n    if (typeof key === 'string') {\n      if (typeof parent === 'object') {\n        return {\n          ...parent,\n          [key]: doDelete(parent[key]),\n        }\n      }\n    }\n\n    if (typeof key === 'number') {\n      if (Array.isArray(parent)) {\n        if (key >= parent.length) {\n          return parent\n        }\n        const prefix = parent.slice(0, key)\n        return [\n          ...(prefix.length ? prefix : new Array(key)),\n          doDelete(parent[key]),\n          ...parent.slice(key + 1),\n        ]\n      }\n    }\n\n    throw new Error('It seems we have created an infinite loop in deleteBy. ')\n  }\n\n  return doDelete(obj)\n}\n\nconst reLineOfOnlyDigits = /^(\\d+)$/gm\n// the second dot must be in a lookahead or the engine\n// will skip subsequent numbers (like foo.0.1.)\nconst reDigitsBetweenDots = /\\.(\\d+)(?=\\.)/gm\nconst reStartWithDigitThenDot = /^(\\d+)\\./gm\nconst reDotWithDigitsToEnd = /\\.(\\d+$)/gm\nconst reMultipleDots = /\\.{2,}/gm\n\nconst intPrefix = '__int__'\nconst intReplace = `${intPrefix}$1`\n\n/**\n * @private\n */\nexport function makePathArray(str: string | Array<string | number>) {\n  if (Array.isArray(str)) {\n    return [...str]\n  }\n\n  if (typeof str !== 'string') {\n    throw new Error('Path must be a string.')\n  }\n\n  return (\n    str\n      // Leading `[` may lead to wrong parsing down the line\n      // (Example: '[0][1]' should be '0.1', not '.0.1')\n      .replace(/(^\\[)|]/gm, '')\n      .replace(/\\[/g, '.')\n      .replace(reLineOfOnlyDigits, intReplace)\n      .replace(reDigitsBetweenDots, `.${intReplace}.`)\n      .replace(reStartWithDigitThenDot, `${intReplace}.`)\n      .replace(reDotWithDigitsToEnd, `.${intReplace}`)\n      .replace(reMultipleDots, '.')\n      .split('.')\n      .map((d) => {\n        if (d.indexOf(intPrefix) === 0) {\n          return parseInt(d.substring(intPrefix.length), 10)\n        }\n        return d\n      })\n  )\n}\n\n/**\n * @private\n */\nexport function isNonEmptyArray(obj: any) {\n  return !(Array.isArray(obj) && obj.length === 0)\n}\n\ninterface AsyncValidatorArrayPartialOptions<T> {\n  validators?: T\n  asyncDebounceMs?: number\n}\n\n/**\n * @private\n */\nexport interface AsyncValidator<T> {\n  cause: ValidationCause\n  validate: T\n  debounceMs: number\n}\n\n/**\n * @private\n */\nexport function getAsyncValidatorArray<T>(\n  cause: ValidationCause,\n  options: AsyncValidatorArrayPartialOptions<T>,\n): T extends FieldValidators<any, any, any, any, any, any, any, any, any, any>\n  ? Array<\n      AsyncValidator<T['onChangeAsync'] | T['onBlurAsync'] | T['onSubmitAsync']>\n    >\n  : T extends FormValidators<any, any, any, any, any, any, any, any>\n    ? Array<\n        AsyncValidator<\n          T['onChangeAsync'] | T['onBlurAsync'] | T['onSubmitAsync']\n        >\n      >\n    : never {\n  const { asyncDebounceMs } = options\n  const {\n    onChangeAsync,\n    onBlurAsync,\n    onSubmitAsync,\n    onBlurAsyncDebounceMs,\n    onChangeAsyncDebounceMs,\n  } = (options.validators || {}) as\n    | FieldValidators<any, any, any, any, any, any, any, any, any, any>\n    | FormValidators<any, any, any, any, any, any, any, any>\n\n  const defaultDebounceMs = asyncDebounceMs ?? 0\n\n  const changeValidator = {\n    cause: 'change',\n    validate: onChangeAsync,\n    debounceMs: onChangeAsyncDebounceMs ?? defaultDebounceMs,\n  } as const\n\n  const blurValidator = {\n    cause: 'blur',\n    validate: onBlurAsync,\n    debounceMs: onBlurAsyncDebounceMs ?? defaultDebounceMs,\n  } as const\n\n  const submitValidator = {\n    cause: 'submit',\n    validate: onSubmitAsync,\n    debounceMs: 0,\n  } as const\n\n  const noopValidator = (\n    validator:\n      | typeof changeValidator\n      | typeof blurValidator\n      | typeof submitValidator,\n  ) => ({ ...validator, debounceMs: 0 }) as const\n\n  switch (cause) {\n    case 'submit':\n      return [\n        noopValidator(changeValidator),\n        noopValidator(blurValidator),\n        submitValidator,\n      ] as never\n    case 'blur':\n      return [blurValidator] as never\n    case 'change':\n      return [changeValidator] as never\n    case 'server':\n    default:\n      return [] as never\n  }\n}\n\ninterface SyncValidatorArrayPartialOptions<T> {\n  validators?: T\n}\n\n/**\n * @private\n */\nexport interface SyncValidator<T> {\n  cause: ValidationCause\n  validate: T\n}\n\n/**\n * @private\n */\nexport function getSyncValidatorArray<T>(\n  cause: ValidationCause,\n  options: SyncValidatorArrayPartialOptions<T>,\n): T extends FieldValidators<any, any, any, any, any, any, any, any, any, any>\n  ? Array<\n      SyncValidator<T['onChange'] | T['onBlur'] | T['onSubmit'] | T['onMount']>\n    >\n  : T extends FormValidators<any, any, any, any, any, any, any, any>\n    ? Array<\n        SyncValidator<\n          T['onChange'] | T['onBlur'] | T['onSubmit'] | T['onMount']\n        >\n      >\n    : never {\n  const { onChange, onBlur, onSubmit, onMount } = (options.validators || {}) as\n    | FieldValidators<any, any, any, any, any, any, any, any, any, any>\n    | FormValidators<any, any, any, any, any, any, any, any>\n\n  const changeValidator = { cause: 'change', validate: onChange } as const\n  const blurValidator = { cause: 'blur', validate: onBlur } as const\n  const submitValidator = { cause: 'submit', validate: onSubmit } as const\n  const mountValidator = { cause: 'mount', validate: onMount } as const\n\n  // Allows us to clear onServer errors\n  const serverValidator = {\n    cause: 'server',\n    validate: () => undefined,\n  } as const\n\n  switch (cause) {\n    case 'mount':\n      return [mountValidator] as never\n    case 'submit':\n      return [\n        changeValidator,\n        blurValidator,\n        submitValidator,\n        serverValidator,\n      ] as never\n    case 'server':\n      return [serverValidator] as never\n    case 'blur':\n      return [blurValidator, serverValidator] as never\n    case 'change':\n    default:\n      return [changeValidator, serverValidator] as never\n  }\n}\n\nexport const isGlobalFormValidationError = (\n  error: unknown,\n): error is GlobalFormValidationError<unknown> => {\n  return !!error && typeof error === 'object' && 'fields' in error\n}\n\nexport function evaluate<T>(objA: T, objB: T) {\n  if (Object.is(objA, objB)) {\n    return true\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false\n  }\n\n  if (objA instanceof Map && objB instanceof Map) {\n    if (objA.size !== objB.size) return false\n    for (const [k, v] of objA) {\n      if (!objB.has(k) || !Object.is(v, objB.get(k))) return false\n    }\n    return true\n  }\n\n  if (objA instanceof Set && objB instanceof Set) {\n    if (objA.size !== objB.size) return false\n    for (const v of objA) {\n      if (!objB.has(v)) return false\n    }\n    return true\n  }\n\n  const keysA = Object.keys(objA)\n  const keysB = Object.keys(objB)\n\n  if (keysA.length !== keysB.length) {\n    return false\n  }\n\n  for (const key of keysA) {\n    // performs recursive search down the object tree\n\n    if (\n      !keysB.includes(key) ||\n      !evaluate(objA[key as keyof T], objB[key as keyof T])\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Determines the logic for determining the error source and value to set on the field meta within the form level sync/async validation.\n * @private\n */\nexport const determineFormLevelErrorSourceAndValue = ({\n  newFormValidatorError,\n  isPreviousErrorFromFormValidator,\n  previousErrorValue,\n}: {\n  newFormValidatorError: ValidationError\n  isPreviousErrorFromFormValidator: boolean\n  previousErrorValue: ValidationError\n}): {\n  newErrorValue: ValidationError\n  newSource: ValidationSource | undefined\n} => {\n  // All falsy values are not considered errors\n  if (newFormValidatorError) {\n    return { newErrorValue: newFormValidatorError, newSource: 'form' }\n  }\n\n  // Clears form level error since it's now stale\n  if (isPreviousErrorFromFormValidator) {\n    return { newErrorValue: undefined, newSource: undefined }\n  }\n\n  // At this point, we have a preivous error which must have been set by the field validator, keep as is\n  if (previousErrorValue) {\n    return { newErrorValue: previousErrorValue, newSource: 'field' }\n  }\n\n  // No new or previous error, clear the error\n  return { newErrorValue: undefined, newSource: undefined }\n}\n\n/**\n * Determines the logic for determining the error source and value to set on the field meta within the field level sync/async validation.\n * @private\n */\nexport const determineFieldLevelErrorSourceAndValue = ({\n  formLevelError,\n  fieldLevelError,\n}: {\n  formLevelError: ValidationError\n  fieldLevelError: ValidationError\n}): {\n  newErrorValue: ValidationError\n  newSource: ValidationSource | undefined\n} => {\n  // At field level, we prioritize the field level error\n  if (fieldLevelError) {\n    return { newErrorValue: fieldLevelError, newSource: 'field' }\n  }\n\n  // If there is no field level error, and there is a form level error, we set the form level error\n  if (formLevelError) {\n    return { newErrorValue: formLevelError, newSource: 'form' }\n  }\n\n  return { newErrorValue: undefined, newSource: undefined }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1208, "column": 0}, "map": {"version":3,"file":"standardSchemaValidator.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Bform-core%401.12.0/node_modules/%40tanstack/form-core/src/standardSchemaValidator.ts"],"sourcesContent":["import type { ValidationSource } from './types'\n\nexport type TStandardSchemaValidatorValue<\n  TData,\n  TSource extends ValidationSource = ValidationSource,\n> = {\n  value: TData\n  validationSource: TSource\n}\n\nexport type TStandardSchemaValidatorIssue<\n  TSource extends ValidationSource = ValidationSource,\n> = TSource extends 'form'\n  ? {\n      form: Record<string, StandardSchemaV1Issue[]>\n      fields: Record<string, StandardSchemaV1Issue[]>\n    }\n  : TSource extends 'field'\n    ? StandardSchemaV1Issue[]\n    : never\n\nfunction prefixSchemaToErrors(issues: readonly StandardSchemaV1Issue[]) {\n  const schema = new Map<string, StandardSchemaV1Issue[]>()\n\n  for (const issue of issues) {\n    const path = [...(issue.path ?? [])]\n      .map((segment) => {\n        const normalizedSegment =\n          typeof segment === 'object' ? segment.key : segment\n        return typeof normalizedSegment === 'number'\n          ? `[${normalizedSegment}]`\n          : normalizedSegment\n      })\n      .join('.')\n      .replace(/\\.\\[/g, '[')\n\n    schema.set(path, (schema.get(path) ?? []).concat(issue))\n  }\n\n  return Object.fromEntries(schema)\n}\n\nconst transformFormIssues = <TSource extends ValidationSource>(\n  issues: readonly StandardSchemaV1Issue[],\n): TStandardSchemaValidatorIssue<TSource> => {\n  const schemaErrors = prefixSchemaToErrors(issues)\n  return {\n    form: schemaErrors,\n    fields: schemaErrors,\n  } as TStandardSchemaValidatorIssue<TSource>\n}\n\nexport const standardSchemaValidators = {\n  validate<TSource extends ValidationSource = ValidationSource>(\n    {\n      value,\n      validationSource,\n    }: TStandardSchemaValidatorValue<unknown, TSource>,\n    schema: StandardSchemaV1,\n  ): TStandardSchemaValidatorIssue<TSource> | undefined {\n    const result = schema['~standard'].validate(value)\n\n    if (result instanceof Promise) {\n      throw new Error('async function passed to sync validator')\n    }\n\n    if (!result.issues) return\n\n    if (validationSource === 'field')\n      return result.issues as TStandardSchemaValidatorIssue<TSource>\n    return transformFormIssues<TSource>(result.issues)\n  },\n  async validateAsync<TSource extends ValidationSource>(\n    {\n      value,\n      validationSource,\n    }: TStandardSchemaValidatorValue<unknown, TSource>,\n    schema: StandardSchemaV1,\n  ): Promise<TStandardSchemaValidatorIssue<TSource> | undefined> {\n    const result = await schema['~standard'].validate(value)\n\n    if (!result.issues) return\n\n    if (validationSource === 'field')\n      return result.issues as TStandardSchemaValidatorIssue<TSource>\n    return transformFormIssues<TSource>(result.issues)\n  },\n}\n\nexport const isStandardSchemaValidator = (\n  validator: unknown,\n): validator is StandardSchemaV1 =>\n  !!validator && '~standard' in (validator as object)\n\n/**\n * The Standard Schema interface.\n */\nexport type StandardSchemaV1<Input = unknown, Output = Input> = {\n  /**\n   * The Standard Schema properties.\n   */\n  readonly '~standard': StandardSchemaV1Props<Input, Output>\n}\n\n/**\n * The Standard Schema properties interface.\n */\ninterface StandardSchemaV1Props<Input = unknown, Output = Input> {\n  /**\n   * The version number of the standard.\n   */\n  readonly version: 1\n  /**\n   * The vendor name of the schema library.\n   */\n  readonly vendor: string\n  /**\n   * Validates unknown input values.\n   */\n  readonly validate: (\n    value: unknown,\n  ) => StandardSchemaV1Result<Output> | Promise<StandardSchemaV1Result<Output>>\n  /**\n   * Inferred types associated with the schema.\n   */\n  readonly types?: StandardSchemaV1Types<Input, Output> | undefined\n}\n/**\n * The result interface of the validate function.\n */\ntype StandardSchemaV1Result<Output> =\n  | StandardSchemaV1SuccessResult<Output>\n  | StandardSchemaV1FailureResult\n/**\n * The result interface if validation succeeds.\n */\ninterface StandardSchemaV1SuccessResult<Output> {\n  /**\n   * The typed output value.\n   */\n  readonly value: Output\n  /**\n   * The non-existent issues.\n   */\n  readonly issues?: undefined\n}\n/**\n * The result interface if validation fails.\n */\ninterface StandardSchemaV1FailureResult {\n  /**\n   * The issues of failed validation.\n   */\n  readonly issues: ReadonlyArray<StandardSchemaV1Issue>\n}\n/**\n * The issue interface of the failure output.\n */\nexport interface StandardSchemaV1Issue {\n  /**\n   * The error message of the issue.\n   */\n  readonly message: string\n  /**\n   * The path of the issue, if any.\n   */\n  readonly path?:\n    | ReadonlyArray<PropertyKey | StandardSchemaV1PathSegment>\n    | undefined\n}\n/**\n * The path segment interface of the issue.\n */\ninterface StandardSchemaV1PathSegment {\n  /**\n   * The key representing a path segment.\n   */\n  readonly key: PropertyKey\n}\n/**\n * The Standard Schema types interface.\n */\ninterface StandardSchemaV1Types<Input = unknown, Output = Input> {\n  /**\n   * The input type of the schema.\n   */\n  readonly input: Input\n  /**\n   * The output type of the schema.\n   */\n  readonly output: Output\n}\n"],"names":[],"mappings":";;;;AAqBA,SAAS,qBAAqB,MAAA,EAA0C;IAChE,MAAA,SAAA,aAAA,GAAA,IAAa,IAAqC;IAExD,KAAA,MAAW,SAAS,OAAQ;QACpB,MAAA,OAAO,CAAC;eAAI,MAAM,IAAA,IAAQ,CAAA,CAAG;SAAA,CAChC,GAAA,CAAI,CAAC,YAAY;YAChB,MAAM,oBACJ,OAAO,YAAY,WAAW,QAAQ,GAAA,GAAM;YAC9C,OAAO,OAAO,sBAAsB,WAChC,CAAA,CAAA,EAAI,iBAAiB,CAAA,CAAA,CAAA,GACrB;QAAA,CACL,EACA,IAAA,CAAK,GAAG,EACR,OAAA,CAAQ,SAAS,GAAG;QAEhB,OAAA,GAAA,CAAI,MAAA,CAAO,OAAO,GAAA,CAAI,IAAI,KAAK,CAAC,CAAA,EAAG,MAAA,CAAO,KAAK,CAAC;IAAA;IAGlD,OAAA,OAAO,WAAA,CAAY,MAAM;AAClC;AAEA,MAAM,sBAAsB,CAC1B,WAC2C;IACrC,MAAA,eAAe,qBAAqB,MAAM;IACzC,OAAA;QACL,MAAM;QACN,QAAQ;IACV;AACF;AAEO,MAAM,2BAA2B;IACtC,UACE,EACE,KAAA,EACA,gBAAA,EAAA,EAEF,MAAA,EACoD;QACpD,MAAM,SAAS,MAAA,CAAO,WAAW,CAAA,CAAE,QAAA,CAAS,KAAK;QAEjD,IAAI,kBAAkB,SAAS;YACvB,MAAA,IAAI,MAAM,yCAAyC;QAAA;QAGvD,IAAA,CAAC,OAAO,MAAA,CAAQ,CAAA;QAEpB,IAAI,qBAAqB,SACvB,OAAO,OAAO,MAAA;QACT,OAAA,oBAA6B,OAAO,MAAM;IACnD;IACA,MAAM,eACJ,EACE,KAAA,EACA,gBAAA,EAAA,EAEF,MAAA,EAC6D;QAC7D,MAAM,SAAS,MAAM,MAAA,CAAO,WAAW,CAAA,CAAE,QAAA,CAAS,KAAK;QAEnD,IAAA,CAAC,OAAO,MAAA,CAAQ,CAAA;QAEpB,IAAI,qBAAqB,SACvB,OAAO,OAAO,MAAA;QACT,OAAA,oBAA6B,OAAO,MAAM;IAAA;AAErD;AAEO,MAAM,4BAA4B,CACvC,YAEA,CAAC,CAAC,aAAa,eAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1258, "column": 0}, "map": {"version":3,"file":"metaHelper.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Bform-core%401.12.0/node_modules/%40tanstack/form-core/src/metaHelper.ts"],"sourcesContent":["import type {\n  FormApi,\n  FormAsyncValidateOrFn,\n  FormValidateOrFn,\n} from './FormApi'\nimport type { AnyFieldMeta } from './FieldApi'\nimport type { DeepKeys } from './util-types'\n\ntype ArrayFieldMode = 'insert' | 'remove' | 'swap' | 'move'\n\nexport const defaultFieldMeta: AnyFieldMeta = {\n  isValidating: false,\n  isTouched: false,\n  isBlurred: false,\n  isDirty: false,\n  isPristine: true,\n  isValid: true,\n  isDefaultValue: true,\n  errors: [],\n  errorMap: {},\n  errorSourceMap: {},\n}\n\nexport function metaHelper<\n  TFormData,\n  TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnServer extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TSubmitMeta,\n>(\n  formApi: FormApi<\n    TFormData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TOnServer,\n    TSubmitMeta\n  >,\n) {\n  function handleArrayFieldMetaShift(\n    field: DeepKeys<TFormData>,\n    index: number,\n    mode: ArrayFieldMode,\n    secondIndex?: number,\n  ) {\n    const affectedFields = getAffectedFields(field, index, mode, secondIndex)\n\n    const handlers = {\n      insert: () => handleInsertMode(affectedFields, field, index),\n      remove: () => handleRemoveMode(affectedFields),\n      swap: () =>\n        secondIndex !== undefined &&\n        handleSwapMode(affectedFields, field, index, secondIndex),\n      move: () =>\n        secondIndex !== undefined &&\n        handleMoveMode(affectedFields, field, index, secondIndex),\n    }\n\n    handlers[mode]()\n  }\n\n  function getFieldPath(field: DeepKeys<TFormData>, index: number): string {\n    return `${field}[${index}]`\n  }\n\n  function getAffectedFields(\n    field: DeepKeys<TFormData>,\n    index: number,\n    mode: ArrayFieldMode,\n    secondIndex?: number,\n  ): DeepKeys<TFormData>[] {\n    const affectedFieldKeys = [getFieldPath(field, index)]\n\n    if (mode === 'swap') {\n      affectedFieldKeys.push(getFieldPath(field, secondIndex!))\n    } else if (mode === 'move') {\n      const [startIndex, endIndex] = [\n        Math.min(index, secondIndex!),\n        Math.max(index, secondIndex!),\n      ]\n      for (let i = startIndex; i <= endIndex; i++) {\n        affectedFieldKeys.push(getFieldPath(field, i))\n      }\n    } else {\n      const currentValue = formApi.getFieldValue(field)\n      const fieldItems = Array.isArray(currentValue)\n        ? (currentValue as Array<unknown>).length\n        : 0\n      for (let i = index + 1; i < fieldItems; i++) {\n        affectedFieldKeys.push(getFieldPath(field, i))\n      }\n    }\n\n    return Object.keys(formApi.fieldInfo).filter((fieldKey) =>\n      affectedFieldKeys.some((key) => fieldKey.startsWith(key)),\n    ) as DeepKeys<TFormData>[]\n  }\n\n  function updateIndex(\n    fieldKey: string,\n    direction: 'up' | 'down',\n  ): DeepKeys<TFormData> {\n    return fieldKey.replace(/\\[(\\d+)\\]/, (_, num) => {\n      const currIndex = parseInt(num, 10)\n      const newIndex =\n        direction === 'up' ? currIndex + 1 : Math.max(0, currIndex - 1)\n      return `[${newIndex}]`\n    }) as DeepKeys<TFormData>\n  }\n\n  function shiftMeta(fields: DeepKeys<TFormData>[], direction: 'up' | 'down') {\n    const sortedFields = direction === 'up' ? fields : [...fields].reverse()\n\n    sortedFields.forEach((fieldKey) => {\n      const nextFieldKey = updateIndex(fieldKey.toString(), direction)\n      const nextFieldMeta = formApi.getFieldMeta(nextFieldKey)\n      if (nextFieldMeta) {\n        formApi.setFieldMeta(fieldKey, nextFieldMeta)\n      } else {\n        formApi.setFieldMeta(fieldKey, getEmptyFieldMeta())\n      }\n    })\n  }\n\n  const getEmptyFieldMeta = (): AnyFieldMeta => defaultFieldMeta\n\n  const handleInsertMode = (\n    fields: DeepKeys<TFormData>[],\n    field: DeepKeys<TFormData>,\n    insertIndex: number,\n  ) => {\n    shiftMeta(fields, 'down')\n\n    fields.forEach((fieldKey) => {\n      if (fieldKey.toString().startsWith(getFieldPath(field, insertIndex))) {\n        formApi.setFieldMeta(fieldKey, getEmptyFieldMeta())\n      }\n    })\n  }\n\n  const handleRemoveMode = (fields: DeepKeys<TFormData>[]) => {\n    shiftMeta(fields, 'up')\n  }\n\n  const handleMoveMode = (\n    fields: DeepKeys<TFormData>[],\n    field: DeepKeys<TFormData>,\n    fromIndex: number,\n    toIndex: number,\n  ) => {\n    // Store the original field meta that will be reapplied at the destination index\n    const fromFields = new Map(\n      Object.keys(formApi.fieldInfo)\n        .filter((fieldKey) =>\n          fieldKey.startsWith(getFieldPath(field, fromIndex)),\n        )\n        .map((fieldKey) => [\n          fieldKey as DeepKeys<TFormData>,\n          formApi.getFieldMeta(fieldKey as DeepKeys<TFormData>),\n        ]),\n    )\n\n    shiftMeta(fields, fromIndex < toIndex ? 'up' : 'down')\n\n    // Reapply the stored field meta at the destination index\n    Object.keys(formApi.fieldInfo)\n      .filter((fieldKey) => fieldKey.startsWith(getFieldPath(field, toIndex)))\n      .forEach((fieldKey) => {\n        const fromKey = fieldKey.replace(\n          getFieldPath(field, toIndex),\n          getFieldPath(field, fromIndex),\n        ) as DeepKeys<TFormData>\n\n        const fromMeta = fromFields.get(fromKey)\n        if (fromMeta) {\n          formApi.setFieldMeta(fieldKey as DeepKeys<TFormData>, fromMeta)\n        }\n      })\n  }\n\n  const handleSwapMode = (\n    fields: DeepKeys<TFormData>[],\n    field: DeepKeys<TFormData>,\n    index: number,\n    secondIndex: number,\n  ) => {\n    fields.forEach((fieldKey) => {\n      if (!fieldKey.toString().startsWith(getFieldPath(field, index))) return\n\n      const swappedKey = fieldKey\n        .toString()\n        .replace(\n          getFieldPath(field, index),\n          getFieldPath(field, secondIndex),\n        ) as DeepKeys<TFormData>\n\n      const [meta1, meta2] = [\n        formApi.getFieldMeta(fieldKey),\n        formApi.getFieldMeta(swappedKey),\n      ]\n\n      if (meta1) formApi.setFieldMeta(swappedKey, meta1)\n      if (meta2) formApi.setFieldMeta(fieldKey, meta2)\n    })\n  }\n\n  return { handleArrayFieldMetaShift }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1382, "column": 0}, "map": {"version":3,"file":"FormApi.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Bform-core%401.12.0/node_modules/%40tanstack/form-core/src/FormApi.ts"],"sourcesContent":["import { Derived, Store, batch } from '@tanstack/store'\nimport {\n  deleteBy,\n  determineFormLevelErrorSourceAndValue,\n  evaluate,\n  functionalUpdate,\n  getAsyncValidatorArray,\n  getBy,\n  getSyncValidatorArray,\n  isGlobalFormValidationError,\n  isNonEmptyArray,\n  setBy,\n} from './utils'\n\nimport {\n  isStandardSchemaValidator,\n  standardSchemaValidators,\n} from './standardSchemaValidator'\nimport { defaultFieldMeta, metaHelper } from './metaHelper'\nimport type {\n  StandardSchemaV1,\n  StandardSchemaV1Issue,\n  TStandardSchemaValidatorValue,\n} from './standardSchemaValidator'\nimport type {\n  AnyFieldApi,\n  AnyFieldMeta,\n  AnyFieldMetaBase,\n  FieldApi,\n} from './FieldApi'\nimport type {\n  FormValidationError,\n  FormValidationErrorMap,\n  UpdateMetaOptions,\n  ValidationCause,\n  ValidationError,\n  ValidationErrorMap,\n  ValidationErrorMapKeys,\n} from './types'\nimport type { DeepKeys, DeepKeysOfType, DeepValue } from './util-types'\nimport type { Updater } from './utils'\n\n/**\n * @private\n */\n// TODO: Add the `Unwrap` type to the errors\ntype FormErrorMapFromValidator<\n  TFormData,\n  TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n> = Partial<\n  Record<\n    DeepKeys<TFormData>,\n    ValidationErrorMap<\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync\n    >\n  >\n>\n\nexport type FormValidateFn<TFormData> = (props: {\n  value: TFormData\n  formApi: FormApi<\n    TFormData,\n    // This is technically an edge-type; which we try to keep non-`any`, but in this case\n    // It's referring to an inaccessible type from the field validate function inner types, so it's not a big deal\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any\n  >\n}) => unknown\n\n/**\n * @private\n */\nexport type FormValidateOrFn<TFormData> =\n  | FormValidateFn<TFormData>\n  | StandardSchemaV1<TFormData, unknown>\n\nexport type UnwrapFormValidateOrFn<\n  TValidateOrFn extends undefined | FormValidateOrFn<any>,\n> = [TValidateOrFn] extends [FormValidateFn<any>]\n  ? ReturnType<TValidateOrFn>\n  : [TValidateOrFn] extends [StandardSchemaV1<any, any>]\n    ? Record<string, StandardSchemaV1Issue[]>\n    : undefined\n\n/**\n * @private\n */\nexport type FormValidateAsyncFn<TFormData> = (props: {\n  value: TFormData\n  formApi: FormApi<\n    TFormData,\n    // This is technically an edge-type; which we try to keep non-`any`, but in this case\n    // It's referring to an inaccessible type from the field validate function inner types, so it's not a big deal\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any\n  >\n  signal: AbortSignal\n}) => unknown | Promise<unknown>\n\nexport type FormValidator<TFormData, TType, TFn = unknown> = {\n  validate(options: { value: TType }, fn: TFn): ValidationError\n  validateAsync(\n    options: { value: TType },\n    fn: TFn,\n  ): Promise<FormValidationError<TFormData>>\n}\n\ntype ValidationPromiseResult<TFormData> =\n  | {\n      fieldErrors: Partial<Record<DeepKeys<TFormData>, ValidationError>>\n      errorMapKey: ValidationErrorMapKeys\n    }\n  | undefined\n\n/**\n * @private\n */\nexport type FormAsyncValidateOrFn<TFormData> =\n  | FormValidateAsyncFn<TFormData>\n  | StandardSchemaV1<TFormData, unknown>\n\nexport type UnwrapFormAsyncValidateOrFn<\n  TValidateOrFn extends undefined | FormAsyncValidateOrFn<any>,\n> = [TValidateOrFn] extends [FormValidateAsyncFn<any>]\n  ? Awaited<ReturnType<TValidateOrFn>>\n  : [TValidateOrFn] extends [StandardSchemaV1<any, any>]\n    ? Record<string, StandardSchemaV1Issue[]>\n    : undefined\n\nexport interface FormValidators<\n  TFormData,\n  TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n> {\n  /**\n   * Optional function that fires as soon as the component mounts.\n   */\n  onMount?: TOnMount\n  /**\n   * Optional function that checks the validity of your data whenever a value changes\n   */\n  onChange?: TOnChange\n  /**\n   * Optional onChange asynchronous counterpart to onChange. Useful for more complex validation logic that might involve server requests.\n   */\n  onChangeAsync?: TOnChangeAsync\n  /**\n   * The default time in milliseconds that if set to a number larger than 0, will debounce the async validation event by this length of time in milliseconds.\n   */\n  onChangeAsyncDebounceMs?: number\n  /**\n   * Optional function that validates the form data when a field loses focus, returns a `FormValidationError`\n   */\n  onBlur?: TOnBlur\n  /**\n   * Optional onBlur asynchronous validation method for when a field loses focus returns a ` FormValidationError` or a promise of `Promise<FormValidationError>`\n   */\n  onBlurAsync?: TOnBlurAsync\n  /**\n   * The default time in milliseconds that if set to a number larger than 0, will debounce the async validation event by this length of time in milliseconds.\n   */\n  onBlurAsyncDebounceMs?: number\n  onSubmit?: TOnSubmit\n  onSubmitAsync?: TOnSubmitAsync\n}\n\n/**\n * @private\n */\nexport interface FormTransform<\n  TFormData,\n  TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnServer extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TSubmitMeta = never,\n> {\n  fn: (\n    formBase: FormApi<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer,\n      TSubmitMeta\n    >,\n  ) => FormApi<\n    TFormData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TOnServer,\n    TSubmitMeta\n  >\n  deps: unknown[]\n}\n\nexport interface FormListeners<\n  TFormData,\n  TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnServer extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TSubmitMeta = never,\n> {\n  onChange?: (props: {\n    formApi: FormApi<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer,\n      TSubmitMeta\n    >\n    fieldApi: AnyFieldApi\n  }) => void\n  onChangeDebounceMs?: number\n\n  onBlur?: (props: {\n    formApi: FormApi<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer,\n      TSubmitMeta\n    >\n    fieldApi: AnyFieldApi\n  }) => void\n  onBlurDebounceMs?: number\n\n  onMount?: (props: {\n    formApi: FormApi<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer,\n      TSubmitMeta\n    >\n  }) => void\n\n  onSubmit?: (props: {\n    formApi: FormApi<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer,\n      TSubmitMeta\n    >\n  }) => void\n}\n\n/**\n * An object representing the options for a form.\n */\nexport interface FormOptions<\n  in out TFormData,\n  in out TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnServer extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TSubmitMeta = never,\n> {\n  /**\n   * Set initial values for your form.\n   */\n  defaultValues?: TFormData\n  /**\n   * The default state for the form.\n   */\n  defaultState?: Partial<\n    FormState<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer\n    >\n  >\n  /**\n   * If true, always run async validation, even when sync validation has produced an error. Defaults to undefined.\n   */\n  asyncAlways?: boolean\n  /**\n   * Optional time in milliseconds if you want to introduce a delay before firing off an async action.\n   */\n  asyncDebounceMs?: number\n  /**\n   * If true, allows the form to be submitted in an invalid state i.e. canSubmit will remain true regardless of validation errors. Defaults to undefined.\n   */\n  canSubmitWhenInvalid?: boolean\n  /**\n   * A list of validators to pass to the form\n   */\n  validators?: FormValidators<\n    TFormData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync\n  >\n\n  /**\n   * onSubmitMeta, the data passed from the handleSubmit handler, to the onSubmit function props\n   */\n  onSubmitMeta?: TSubmitMeta\n\n  /**\n   * form level listeners\n   */\n  listeners?: FormListeners<\n    TFormData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TOnServer,\n    TSubmitMeta\n  >\n\n  /**\n   * A function to be called when the form is submitted, what should happen once the user submits a valid form returns `any` or a promise `Promise<any>`\n   */\n  onSubmit?: (props: {\n    value: TFormData\n    formApi: FormApi<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer,\n      TSubmitMeta\n    >\n    meta: TSubmitMeta\n  }) => any | Promise<any>\n  /**\n   * Specify an action for scenarios where the user tries to submit an invalid form.\n   */\n  onSubmitInvalid?: (props: {\n    value: TFormData\n    formApi: FormApi<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer,\n      TSubmitMeta\n    >\n  }) => void\n  transform?: FormTransform<\n    NoInfer<TFormData>,\n    NoInfer<TOnMount>,\n    NoInfer<TOnChange>,\n    NoInfer<TOnChangeAsync>,\n    NoInfer<TOnBlur>,\n    NoInfer<TOnBlurAsync>,\n    NoInfer<TOnSubmit>,\n    NoInfer<TOnSubmitAsync>,\n    NoInfer<TOnServer>,\n    NoInfer<TSubmitMeta>\n  >\n}\n\n/**\n * An object representing the validation metadata for a field. Not intended for public usage.\n */\nexport type ValidationMeta = {\n  /**\n   * An abort controller stored in memory to cancel previous async validation attempts.\n   */\n  lastAbortController: AbortController\n}\n\n/**\n * An object representing the field information for a specific field within the form.\n */\nexport type FieldInfo<TFormData> = {\n  /**\n   * An instance of the FieldAPI.\n   */\n  instance: FieldApi<\n    TFormData,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any\n  > | null\n  /**\n   * A record of field validation internal handling.\n   */\n  validationMetaMap: Record<ValidationErrorMapKeys, ValidationMeta | undefined>\n}\n\n/**\n * An object representing the current state of the form.\n */\nexport type BaseFormState<\n  in out TFormData,\n  in out TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnServer extends undefined | FormAsyncValidateOrFn<TFormData>,\n> = {\n  /**\n   * The current values of the form fields.\n   */\n  values: TFormData\n  /**\n   * The error map for the form itself.\n   */\n  errorMap: ValidationErrorMap<\n    UnwrapFormValidateOrFn<TOnMount>,\n    UnwrapFormValidateOrFn<TOnChange>,\n    UnwrapFormAsyncValidateOrFn<TOnChangeAsync>,\n    UnwrapFormValidateOrFn<TOnBlur>,\n    UnwrapFormAsyncValidateOrFn<TOnBlurAsync>,\n    UnwrapFormValidateOrFn<TOnSubmit>,\n    UnwrapFormAsyncValidateOrFn<TOnSubmitAsync>,\n    UnwrapFormAsyncValidateOrFn<TOnServer>\n  >\n  /**\n   * An internal mechanism used for keeping track of validation logic in a form.\n   */\n  validationMetaMap: Record<ValidationErrorMapKeys, ValidationMeta | undefined>\n  /**\n   * A record of field metadata for each field in the form, not including the derived properties, like `errors` and such\n   */\n  fieldMetaBase: Record<DeepKeys<TFormData>, AnyFieldMetaBase>\n  /**\n   * A boolean indicating if the form is currently in the process of being submitted after `handleSubmit` is called.\n   *\n   * Goes back to `false` when submission completes for one of the following reasons:\n   * - the validation step returned errors.\n   * - the `onSubmit` function has completed.\n   *\n   * Note: if you're running async operations in your `onSubmit` function make sure to await them to ensure `isSubmitting` is set to `false` only when the async operation completes.\n   *\n   * This is useful for displaying loading indicators or disabling form inputs during submission.\n   *\n   */\n  isSubmitting: boolean\n  /**\n   * A boolean indicating if the `onSubmit` function has completed successfully.\n   *\n   * Goes back to `false` at each new submission attempt.\n   *\n   * Note: you can use isSubmitting to check if the form is currently submitting.\n   */\n  isSubmitted: boolean\n  /**\n   * A boolean indicating if the form or any of its fields are currently validating.\n   */\n  isValidating: boolean\n  /**\n   * A counter for tracking the number of submission attempts.\n   */\n  submissionAttempts: number\n  /**\n   * A boolean indicating if the last submission was successful.\n   */\n  isSubmitSuccessful: boolean\n  /**\n   * @private, used to force a re-evaluation of the form state when options change\n   */\n  _force_re_eval?: boolean\n}\n\nexport type DerivedFormState<\n  in out TFormData,\n  in out TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnServer extends undefined | FormAsyncValidateOrFn<TFormData>,\n> = {\n  /**\n   * A boolean indicating if the form is currently validating.\n   */\n  isFormValidating: boolean\n  /**\n   * A boolean indicating if the form is valid.\n   */\n  isFormValid: boolean\n  /**\n   * The error array for the form itself.\n   */\n  errors: Array<\n    | UnwrapFormValidateOrFn<TOnMount>\n    | UnwrapFormValidateOrFn<TOnChange>\n    | UnwrapFormAsyncValidateOrFn<TOnChangeAsync>\n    | UnwrapFormValidateOrFn<TOnBlur>\n    | UnwrapFormAsyncValidateOrFn<TOnBlurAsync>\n    | UnwrapFormValidateOrFn<TOnSubmit>\n    | UnwrapFormAsyncValidateOrFn<TOnSubmitAsync>\n    | UnwrapFormAsyncValidateOrFn<TOnServer>\n  >\n  /**\n   * A boolean indicating if any of the form fields are currently validating.\n   */\n  isFieldsValidating: boolean\n  /**\n   * A boolean indicating if all the form fields are valid. Evaluates `true` if there are no field errors.\n   */\n  isFieldsValid: boolean\n  /**\n   * A boolean indicating if any of the form fields have been touched.\n   */\n  isTouched: boolean\n  /**\n   * A boolean indicating if any of the form fields have been blurred.\n   */\n  isBlurred: boolean\n  /**\n   * A boolean indicating if any of the form's fields' values have been modified by the user. Evaluates `true` if the user have modified at least one of the fields. Opposite of `isPristine`.\n   */\n  isDirty: boolean\n  /**\n   * A boolean indicating if none of the form's fields' values have been modified by the user. Evaluates `true` if the user have not modified any of the fields. Opposite of `isDirty`.\n   */\n  isPristine: boolean\n  /**\n   * A boolean indicating if all of the form's fields are the same as default values.\n   */\n  isDefaultValue: boolean\n  /**\n   * A boolean indicating if the form and all its fields are valid. Evaluates `true` if there are no errors.\n   */\n  isValid: boolean\n  /**\n   * A boolean indicating if the form can be submitted based on its current state.\n   */\n  canSubmit: boolean\n  /**\n   * A record of field metadata for each field in the form.\n   */\n  fieldMeta: Record<DeepKeys<TFormData>, AnyFieldMeta>\n}\n\nexport interface FormState<\n  in out TFormData,\n  in out TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnServer extends undefined | FormAsyncValidateOrFn<TFormData>,\n> extends BaseFormState<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer\n    >,\n    DerivedFormState<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer\n    > {}\n\nexport type AnyFormState = FormState<\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any\n>\n\nfunction getDefaultFormState<\n  TFormData,\n  TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnServer extends undefined | FormAsyncValidateOrFn<TFormData>,\n>(\n  defaultState: Partial<\n    FormState<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer\n    >\n  >,\n): BaseFormState<\n  TFormData,\n  TOnMount,\n  TOnChange,\n  TOnChangeAsync,\n  TOnBlur,\n  TOnBlurAsync,\n  TOnSubmit,\n  TOnSubmitAsync,\n  TOnServer\n> {\n  return {\n    values: defaultState.values ?? ({} as never),\n    errorMap: defaultState.errorMap ?? {},\n    fieldMetaBase: defaultState.fieldMetaBase ?? ({} as never),\n    isSubmitted: defaultState.isSubmitted ?? false,\n    isSubmitting: defaultState.isSubmitting ?? false,\n    isValidating: defaultState.isValidating ?? false,\n    submissionAttempts: defaultState.submissionAttempts ?? 0,\n    isSubmitSuccessful: defaultState.isSubmitSuccessful ?? false,\n    validationMetaMap: defaultState.validationMetaMap ?? {\n      onChange: undefined,\n      onBlur: undefined,\n      onSubmit: undefined,\n      onMount: undefined,\n      onServer: undefined,\n    },\n  }\n}\n\n/**\n * @public\n *\n * A type representing the Form API with all generics set to `any` for convenience.\n */\nexport type AnyFormApi = FormApi<\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any\n>\n\n/**\n * A class representing the Form API. It handles the logic and interactions with the form state.\n *\n * Normally, you will not need to create a new `FormApi` instance directly. Instead, you will use a framework\n * hook/function like `useForm` or `createForm` to create a new instance for you that uses your framework's reactivity model.\n * However, if you need to create a new instance manually, you can do so by calling the `new FormApi` constructor.\n */\nexport class FormApi<\n  in out TFormData,\n  in out TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnServer extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TSubmitMeta = never,\n> {\n  /**\n   * The options for the form.\n   */\n  options: FormOptions<\n    TFormData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TOnServer,\n    TSubmitMeta\n  > = {}\n  baseStore!: Store<\n    BaseFormState<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer\n    >\n  >\n  fieldMetaDerived!: Derived<Record<DeepKeys<TFormData>, AnyFieldMeta>>\n  store!: Derived<\n    FormState<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer\n    >\n  >\n  /**\n   * A record of field information for each field in the form.\n   */\n  fieldInfo: Record<DeepKeys<TFormData>, FieldInfo<TFormData>> = {} as any\n\n  get state() {\n    return this.store.state\n  }\n\n  /**\n   * @private\n   */\n  prevTransformArray: unknown[] = []\n\n  /**\n   * Constructs a new `FormApi` instance with the given form options.\n   */\n  constructor(\n    opts?: FormOptions<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer,\n      TSubmitMeta\n    >,\n  ) {\n    this.baseStore = new Store(\n      getDefaultFormState({\n        ...(opts?.defaultState as any),\n        values: opts?.defaultValues ?? opts?.defaultState?.values,\n        isFormValid: true,\n      }),\n    )\n\n    this.fieldMetaDerived = new Derived({\n      deps: [this.baseStore],\n      fn: ({ prevDepVals, currDepVals, prevVal: _prevVal }) => {\n        const prevVal = _prevVal as\n          | Record<DeepKeys<TFormData>, AnyFieldMeta>\n          | undefined\n        const prevBaseStore = prevDepVals?.[0]\n        const currBaseStore = currDepVals[0]\n\n        let originalMetaCount = 0\n\n        const fieldMeta = {} as FormState<\n          TFormData,\n          TOnMount,\n          TOnChange,\n          TOnChangeAsync,\n          TOnBlur,\n          TOnBlurAsync,\n          TOnSubmit,\n          TOnSubmitAsync,\n          TOnServer\n        >['fieldMeta']\n\n        for (const fieldName of Object.keys(\n          currBaseStore.fieldMetaBase,\n        ) as Array<keyof typeof currBaseStore.fieldMetaBase>) {\n          const currBaseMeta = currBaseStore.fieldMetaBase[\n            fieldName as never\n          ] as AnyFieldMetaBase\n\n          const prevBaseMeta = prevBaseStore?.fieldMetaBase[\n            fieldName as never\n          ] as AnyFieldMetaBase | undefined\n\n          const prevFieldInfo =\n            prevVal?.[fieldName as never as keyof typeof prevVal]\n\n          const curFieldVal = getBy(currBaseStore.values, fieldName)\n\n          let fieldErrors = prevFieldInfo?.errors\n          if (\n            !prevBaseMeta ||\n            currBaseMeta.errorMap !== prevBaseMeta.errorMap\n          ) {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n            fieldErrors = Object.values(currBaseMeta.errorMap ?? {}).filter(\n              (val) => val !== undefined,\n            ) as never\n\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n            const fieldInstance = this.getFieldInfo(fieldName)?.instance\n\n            if (fieldInstance && !fieldInstance.options.disableErrorFlat) {\n              fieldErrors = (fieldErrors as undefined | string[])?.flat(\n                1,\n              ) as never\n            }\n          }\n\n          // As primitives, we don't need to aggressively persist the same referential value for performance reasons\n          const isFieldValid = !isNonEmptyArray(fieldErrors ?? [])\n          const isFieldPristine = !currBaseMeta.isDirty\n          const isDefaultValue =\n            evaluate(\n              curFieldVal,\n              getBy(this.options.defaultValues, fieldName),\n            ) ||\n            evaluate(\n              curFieldVal,\n              // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n              this.getFieldInfo(fieldName)?.instance?.options.defaultValue,\n            )\n\n          if (\n            prevFieldInfo &&\n            prevFieldInfo.isPristine === isFieldPristine &&\n            prevFieldInfo.isValid === isFieldValid &&\n            prevFieldInfo.isDefaultValue === isDefaultValue &&\n            prevFieldInfo.errors === fieldErrors &&\n            currBaseMeta === prevBaseMeta\n          ) {\n            fieldMeta[fieldName] = prevFieldInfo\n            originalMetaCount++\n            continue\n          }\n\n          fieldMeta[fieldName] = {\n            ...currBaseMeta,\n            errors: fieldErrors,\n            isPristine: isFieldPristine,\n            isValid: isFieldValid,\n            isDefaultValue: isDefaultValue,\n          } as AnyFieldMeta\n        }\n\n        if (!Object.keys(currBaseStore.fieldMetaBase).length) return fieldMeta\n\n        if (\n          prevVal &&\n          originalMetaCount === Object.keys(currBaseStore.fieldMetaBase).length\n        ) {\n          return prevVal\n        }\n\n        return fieldMeta\n      },\n    })\n\n    this.store = new Derived({\n      deps: [this.baseStore, this.fieldMetaDerived],\n      fn: ({ prevDepVals, currDepVals, prevVal: _prevVal }) => {\n        const prevVal = _prevVal as\n          | FormState<\n              TFormData,\n              TOnMount,\n              TOnChange,\n              TOnChangeAsync,\n              TOnBlur,\n              TOnBlurAsync,\n              TOnSubmit,\n              TOnSubmitAsync,\n              TOnServer\n            >\n          | undefined\n        const prevBaseStore = prevDepVals?.[0]\n        const currBaseStore = currDepVals[0]\n        const currFieldMeta = currDepVals[1]\n\n        // Computed state\n        const fieldMetaValues = Object.values(currFieldMeta).filter(\n          Boolean,\n        ) as AnyFieldMeta[]\n\n        const isFieldsValidating = fieldMetaValues.some(\n          (field) => field.isValidating,\n        )\n\n        const isFieldsValid = fieldMetaValues.every((field) => field.isValid)\n\n        const isTouched = fieldMetaValues.some((field) => field.isTouched)\n        const isBlurred = fieldMetaValues.some((field) => field.isBlurred)\n        const isDefaultValue = fieldMetaValues.every(\n          (field) => field.isDefaultValue,\n        )\n\n        const shouldInvalidateOnMount =\n          // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n          isTouched && currBaseStore.errorMap?.onMount\n\n        const isDirty = fieldMetaValues.some((field) => field.isDirty)\n        const isPristine = !isDirty\n\n        const hasOnMountError = Boolean(\n          // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n          currBaseStore.errorMap?.onMount ||\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n            fieldMetaValues.some((f) => f?.errorMap?.onMount),\n        )\n\n        const isValidating = !!isFieldsValidating\n\n        // As `errors` is not a primitive, we need to aggressively persist the same referencial value for performance reasons\n        let errors = prevVal?.errors ?? []\n        if (\n          !prevBaseStore ||\n          currBaseStore.errorMap !== prevBaseStore.errorMap\n        ) {\n          errors = Object.values(currBaseStore.errorMap).reduce<\n            Array<\n              | UnwrapFormValidateOrFn<TOnMount>\n              | UnwrapFormValidateOrFn<TOnChange>\n              | UnwrapFormAsyncValidateOrFn<TOnChangeAsync>\n              | UnwrapFormValidateOrFn<TOnBlur>\n              | UnwrapFormAsyncValidateOrFn<TOnBlurAsync>\n              | UnwrapFormValidateOrFn<TOnSubmit>\n              | UnwrapFormAsyncValidateOrFn<TOnSubmitAsync>\n              | UnwrapFormAsyncValidateOrFn<TOnServer>\n            >\n          >((prev, curr) => {\n            if (curr === undefined) return prev\n\n            if (curr && isGlobalFormValidationError(curr)) {\n              prev.push(curr.form as never)\n              return prev\n            }\n            prev.push(curr as never)\n            return prev\n          }, [])\n        }\n\n        const isFormValid = errors.length === 0\n        const isValid = isFieldsValid && isFormValid\n        const submitInvalid = this.options.canSubmitWhenInvalid ?? false\n        const canSubmit =\n          (currBaseStore.submissionAttempts === 0 &&\n            !isTouched &&\n            !hasOnMountError) ||\n          (!isValidating && !currBaseStore.isSubmitting && isValid) ||\n          submitInvalid\n\n        let errorMap = currBaseStore.errorMap\n        if (shouldInvalidateOnMount) {\n          errors = errors.filter(\n            (err) => err !== currBaseStore.errorMap.onMount,\n          )\n          errorMap = Object.assign(errorMap, { onMount: undefined })\n        }\n\n        if (\n          prevVal &&\n          prevBaseStore &&\n          prevVal.errorMap === errorMap &&\n          prevVal.fieldMeta === this.fieldMetaDerived.state &&\n          prevVal.errors === errors &&\n          prevVal.isFieldsValidating === isFieldsValidating &&\n          prevVal.isFieldsValid === isFieldsValid &&\n          prevVal.isFormValid === isFormValid &&\n          prevVal.isValid === isValid &&\n          prevVal.canSubmit === canSubmit &&\n          prevVal.isTouched === isTouched &&\n          prevVal.isBlurred === isBlurred &&\n          prevVal.isPristine === isPristine &&\n          prevVal.isDefaultValue === isDefaultValue &&\n          prevVal.isDirty === isDirty &&\n          evaluate(prevBaseStore, currBaseStore)\n        ) {\n          return prevVal\n        }\n\n        let state = {\n          ...currBaseStore,\n          errorMap,\n          fieldMeta: this.fieldMetaDerived.state,\n          errors,\n          isFieldsValidating,\n          isFieldsValid,\n          isFormValid,\n          isValid,\n          canSubmit,\n          isTouched,\n          isBlurred,\n          isPristine,\n          isDefaultValue,\n          isDirty,\n        } as FormState<\n          TFormData,\n          TOnMount,\n          TOnChange,\n          TOnChangeAsync,\n          TOnBlur,\n          TOnBlurAsync,\n          TOnSubmit,\n          TOnSubmitAsync,\n          TOnServer\n        >\n\n        // Only run transform if state has shallowly changed - IE how React.useEffect works\n        const transformArray = this.options.transform?.deps ?? []\n        const shouldTransform =\n          transformArray.length !== this.prevTransformArray.length ||\n          transformArray.some((val, i) => val !== this.prevTransformArray[i])\n\n        if (shouldTransform) {\n          const newObj = Object.assign({}, this, { state })\n          // This mutates the state\n          this.options.transform?.fn(newObj)\n          state = newObj.state\n          this.prevTransformArray = transformArray\n        }\n\n        return state\n      },\n    })\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n\n    this.update(opts || {})\n  }\n\n  /**\n   * @private\n   */\n  runValidator<\n    TValue extends TStandardSchemaValidatorValue<TFormData> & {\n      formApi: AnyFormApi\n    },\n    TType extends 'validate' | 'validateAsync',\n  >(props: {\n    validate: TType extends 'validate'\n      ? FormValidateOrFn<TFormData>\n      : FormAsyncValidateOrFn<TFormData>\n    value: TValue\n    type: TType\n  }): unknown {\n    if (isStandardSchemaValidator(props.validate)) {\n      return standardSchemaValidators[props.type](\n        props.value,\n        props.validate,\n      ) as never\n    }\n\n    return (props.validate as FormValidateFn<any>)(props.value) as never\n  }\n\n  mount = () => {\n    const cleanupFieldMetaDerived = this.fieldMetaDerived.mount()\n    const cleanupStoreDerived = this.store.mount()\n    const cleanup = () => {\n      cleanupFieldMetaDerived()\n      cleanupStoreDerived()\n    }\n\n    this.options.listeners?.onMount?.({ formApi: this })\n\n    const { onMount } = this.options.validators || {}\n    if (!onMount) return cleanup\n    this.validateSync('mount')\n\n    return cleanup\n  }\n\n  /**\n   * Updates the form options and form state.\n   */\n  update = (\n    options?: FormOptions<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer,\n      TSubmitMeta\n    >,\n  ) => {\n    if (!options) return\n\n    const oldOptions = this.options\n\n    // Options need to be updated first so that when the store is updated, the state is correct for the derived state\n    this.options = options\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    const shouldUpdateReeval = !!options.transform?.deps?.some(\n      (val, i) => val !== this.prevTransformArray[i],\n    )\n\n    const shouldUpdateValues =\n      options.defaultValues &&\n      !evaluate(options.defaultValues, oldOptions.defaultValues) &&\n      !this.state.isTouched\n\n    const shouldUpdateState =\n      !evaluate(options.defaultState, oldOptions.defaultState) &&\n      !this.state.isTouched\n\n    if (!shouldUpdateValues && !shouldUpdateState && !shouldUpdateReeval) return\n\n    batch(() => {\n      this.baseStore.setState(() =>\n        getDefaultFormState(\n          Object.assign(\n            {},\n            this.state as any,\n\n            shouldUpdateState ? options.defaultState : {},\n\n            shouldUpdateValues\n              ? {\n                  values: options.defaultValues,\n                }\n              : {},\n\n            shouldUpdateReeval\n              ? { _force_re_eval: !this.state._force_re_eval }\n              : {},\n          ),\n        ),\n      )\n    })\n  }\n\n  /**\n   * Resets the form state to the default values.\n   * If values are provided, the form will be reset to those values instead and the default values will be updated.\n   *\n   * @param values - Optional values to reset the form to.\n   * @param opts - Optional options to control the reset behavior.\n   */\n  reset = (values?: TFormData, opts?: { keepDefaultValues?: boolean }) => {\n    const { fieldMeta: currentFieldMeta } = this.state\n    const fieldMetaBase = this.resetFieldMeta(currentFieldMeta)\n\n    if (values && !opts?.keepDefaultValues) {\n      this.options = {\n        ...this.options,\n        defaultValues: values,\n      }\n    }\n\n    this.baseStore.setState(() =>\n      getDefaultFormState({\n        ...(this.options.defaultState as any),\n        values:\n          values ??\n          this.options.defaultValues ??\n          this.options.defaultState?.values,\n        fieldMetaBase,\n      }),\n    )\n  }\n\n  /**\n   * Validates all fields using the correct handlers for a given validation cause.\n   */\n  validateAllFields = async (cause: ValidationCause) => {\n    const fieldValidationPromises: Promise<ValidationError[]>[] = [] as any\n    batch(() => {\n      void (Object.values(this.fieldInfo) as FieldInfo<any>[]).forEach(\n        (field) => {\n          if (!field.instance) return\n          const fieldInstance = field.instance\n          // Validate the field\n          fieldValidationPromises.push(\n            // Remember, `validate` is either a sync operation or a promise\n            Promise.resolve().then(() =>\n              fieldInstance.validate(cause, { skipFormValidation: true }),\n            ),\n          )\n          // If any fields are not touched\n          if (!field.instance.state.meta.isTouched) {\n            // Mark them as touched\n            field.instance.setMeta((prev) => ({ ...prev, isTouched: true }))\n          }\n        },\n      )\n    })\n\n    const fieldErrorMapMap = await Promise.all(fieldValidationPromises)\n    return fieldErrorMapMap.flat()\n  }\n\n  /**\n   * Validates the children of a specified array in the form starting from a given index until the end using the correct handlers for a given validation type.\n   */\n  validateArrayFieldsStartingFrom = async <\n    TField extends DeepKeysOfType<TFormData, any[]>,\n  >(\n    field: TField,\n    index: number,\n    cause: ValidationCause,\n  ) => {\n    const currentValue = this.getFieldValue(field)\n\n    const lastIndex = Array.isArray(currentValue)\n      ? Math.max((currentValue as Array<unknown>).length - 1, 0)\n      : null\n\n    // We have to validate all fields that have shifted (at least the current field)\n    const fieldKeysToValidate = [`${field}[${index}]`]\n    for (let i = index + 1; i <= (lastIndex ?? 0); i++) {\n      fieldKeysToValidate.push(`${field}[${i}]`)\n    }\n\n    // We also have to include all fields that are nested in the shifted fields\n    const fieldsToValidate = Object.keys(this.fieldInfo).filter((fieldKey) =>\n      fieldKeysToValidate.some((key) => fieldKey.startsWith(key)),\n    ) as DeepKeys<TFormData>[]\n\n    // Validate the fields\n    const fieldValidationPromises: Promise<ValidationError[]>[] = [] as any\n    batch(() => {\n      fieldsToValidate.forEach((nestedField) => {\n        fieldValidationPromises.push(\n          Promise.resolve().then(() => this.validateField(nestedField, cause)),\n        )\n      })\n    })\n\n    const fieldErrorMapMap = await Promise.all(fieldValidationPromises)\n    return fieldErrorMapMap.flat()\n  }\n\n  /**\n   * Validates a specified field in the form using the correct handlers for a given validation type.\n   */\n  validateField = <TField extends DeepKeys<TFormData>>(\n    field: TField,\n    cause: ValidationCause,\n  ) => {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    const fieldInstance = this.fieldInfo[field]?.instance\n    if (!fieldInstance) return []\n\n    // If the field is not touched (same logic as in validateAllFields)\n    if (!fieldInstance.state.meta.isTouched) {\n      // Mark it as touched\n      fieldInstance.setMeta((prev) => ({ ...prev, isTouched: true }))\n    }\n\n    return fieldInstance.validate(cause)\n  }\n\n  /**\n   * TODO: This code is copied from FieldApi, we should refactor to share\n   * @private\n   */\n  validateSync = (\n    cause: ValidationCause,\n  ): {\n    hasErrored: boolean\n    fieldsErrorMap: FormErrorMapFromValidator<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync\n    >\n  } => {\n    const validates = getSyncValidatorArray(cause, this.options)\n    let hasErrored = false as boolean\n\n    // This map will only include fields that have errors in the current validation cycle\n    const currentValidationErrorMap: FormErrorMapFromValidator<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync\n    > = {}\n\n    batch(() => {\n      for (const validateObj of validates) {\n        if (!validateObj.validate) continue\n\n        const rawError = this.runValidator({\n          validate: validateObj.validate,\n          value: {\n            value: this.state.values,\n            formApi: this,\n            validationSource: 'form',\n          },\n          type: 'validate',\n        })\n\n        const { formError, fieldErrors } = normalizeError<TFormData>(rawError)\n\n        const errorMapKey = getErrorMapKey(validateObj.cause)\n\n        for (const field of Object.keys(\n          this.state.fieldMeta,\n        ) as DeepKeys<TFormData>[]) {\n          const fieldMeta = this.getFieldMeta(field)\n          if (!fieldMeta) continue\n\n          const {\n            errorMap: currentErrorMap,\n            errorSourceMap: currentErrorMapSource,\n          } = fieldMeta\n\n          const newFormValidatorError = fieldErrors?.[field]\n\n          const { newErrorValue, newSource } =\n            determineFormLevelErrorSourceAndValue({\n              newFormValidatorError,\n              isPreviousErrorFromFormValidator:\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                currentErrorMapSource?.[errorMapKey] === 'form',\n              // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n              previousErrorValue: currentErrorMap?.[errorMapKey],\n            })\n\n          if (newSource === 'form') {\n            currentValidationErrorMap[field] = {\n              ...currentValidationErrorMap[field],\n              [errorMapKey]: newFormValidatorError,\n            }\n          }\n\n          if (\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n            currentErrorMap?.[errorMapKey] !== newErrorValue\n          ) {\n            this.setFieldMeta(field, (prev) => ({\n              ...prev,\n              errorMap: {\n                ...prev.errorMap,\n                [errorMapKey]: newErrorValue,\n              },\n              errorSourceMap: {\n                ...prev.errorSourceMap,\n                [errorMapKey]: newSource,\n              },\n            }))\n          }\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (this.state.errorMap?.[errorMapKey] !== formError) {\n          this.baseStore.setState((prev) => ({\n            ...prev,\n            errorMap: {\n              ...prev.errorMap,\n              [errorMapKey]: formError,\n            },\n          }))\n        }\n\n        if (formError || fieldErrors) {\n          hasErrored = true\n        }\n      }\n\n      /**\n       *  when we have an error for onSubmit in the state, we want\n       *  to clear the error as soon as the user enters a valid value in the field\n       */\n      const submitErrKey = getErrorMapKey('submit')\n      if (\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        this.state.errorMap?.[submitErrKey] &&\n        cause !== 'submit' &&\n        !hasErrored\n      ) {\n        this.baseStore.setState((prev) => ({\n          ...prev,\n          errorMap: {\n            ...prev.errorMap,\n            [submitErrKey]: undefined,\n          },\n        }))\n      }\n    })\n\n    return { hasErrored, fieldsErrorMap: currentValidationErrorMap }\n  }\n\n  /**\n   * @private\n   */\n  validateAsync = async (\n    cause: ValidationCause,\n  ): Promise<\n    FormErrorMapFromValidator<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync\n    >\n  > => {\n    const validates = getAsyncValidatorArray(cause, this.options)\n\n    if (!this.state.isFormValidating) {\n      this.baseStore.setState((prev) => ({ ...prev, isFormValidating: true }))\n    }\n\n    /**\n     * We have to use a for loop and generate our promises this way, otherwise it won't be sync\n     * when there are no validators needed to be run\n     */\n    const promises: Promise<ValidationPromiseResult<TFormData>>[] = []\n\n    let fieldErrorsFromFormValidators:\n      | Partial<Record<DeepKeys<TFormData>, ValidationError>>\n      | undefined\n\n    for (const validateObj of validates) {\n      if (!validateObj.validate) continue\n      const key = getErrorMapKey(validateObj.cause)\n      const fieldValidatorMeta = this.state.validationMetaMap[key]\n\n      fieldValidatorMeta?.lastAbortController.abort()\n      const controller = new AbortController()\n\n      this.state.validationMetaMap[key] = {\n        lastAbortController: controller,\n      }\n\n      promises.push(\n        new Promise<ValidationPromiseResult<TFormData>>(async (resolve) => {\n          let rawError!:\n            | ValidationError\n            | FormValidationError<unknown>\n            | undefined\n          try {\n            rawError = await new Promise((rawResolve, rawReject) => {\n              setTimeout(async () => {\n                if (controller.signal.aborted) return rawResolve(undefined)\n                try {\n                  rawResolve(\n                    await this.runValidator({\n                      validate: validateObj.validate!,\n                      value: {\n                        value: this.state.values,\n                        formApi: this,\n                        validationSource: 'form',\n                        signal: controller.signal,\n                      },\n                      type: 'validateAsync',\n                    }),\n                  )\n                } catch (e) {\n                  rawReject(e)\n                }\n              }, validateObj.debounceMs)\n            })\n          } catch (e: unknown) {\n            rawError = e as ValidationError\n          }\n          const { formError, fieldErrors: fieldErrorsFromNormalizeError } =\n            normalizeError<TFormData>(rawError)\n\n          if (fieldErrorsFromNormalizeError) {\n            fieldErrorsFromFormValidators = fieldErrorsFromFormValidators\n              ? {\n                  ...fieldErrorsFromFormValidators,\n                  ...fieldErrorsFromNormalizeError,\n                }\n              : fieldErrorsFromNormalizeError\n          }\n          const errorMapKey = getErrorMapKey(validateObj.cause)\n\n          for (const field of Object.keys(\n            this.state.fieldMeta,\n          ) as DeepKeys<TFormData>[]) {\n            const fieldMeta = this.getFieldMeta(field)\n            if (!fieldMeta) continue\n\n            const {\n              errorMap: currentErrorMap,\n              errorSourceMap: currentErrorMapSource,\n            } = fieldMeta\n\n            const newFormValidatorError = fieldErrorsFromFormValidators?.[field]\n\n            const { newErrorValue, newSource } =\n              determineFormLevelErrorSourceAndValue({\n                newFormValidatorError,\n                isPreviousErrorFromFormValidator:\n                  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                  currentErrorMapSource?.[errorMapKey] === 'form',\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                previousErrorValue: currentErrorMap?.[errorMapKey],\n              })\n\n            if (\n              // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n              currentErrorMap?.[errorMapKey] !== newErrorValue\n            ) {\n              this.setFieldMeta(field, (prev) => ({\n                ...prev,\n                errorMap: {\n                  ...prev.errorMap,\n                  [errorMapKey]: newErrorValue,\n                },\n                errorSourceMap: {\n                  ...prev.errorSourceMap,\n                  [errorMapKey]: newSource,\n                },\n              }))\n            }\n          }\n\n          this.baseStore.setState((prev) => ({\n            ...prev,\n            errorMap: {\n              ...prev.errorMap,\n              [errorMapKey]: formError,\n            },\n          }))\n\n          resolve(\n            fieldErrorsFromFormValidators\n              ? { fieldErrors: fieldErrorsFromFormValidators, errorMapKey }\n              : undefined,\n          )\n        }),\n      )\n    }\n\n    let results: ValidationPromiseResult<TFormData>[] = []\n\n    const fieldsErrorMap: FormErrorMapFromValidator<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync\n    > = {}\n    if (promises.length) {\n      results = await Promise.all(promises)\n      for (const fieldValidationResult of results) {\n        if (fieldValidationResult?.fieldErrors) {\n          const { errorMapKey } = fieldValidationResult\n\n          for (const [field, fieldError] of Object.entries(\n            fieldValidationResult.fieldErrors,\n          )) {\n            const oldErrorMap =\n              fieldsErrorMap[field as DeepKeys<TFormData>] || {}\n            const newErrorMap = {\n              ...oldErrorMap,\n              [errorMapKey]: fieldError,\n            }\n            fieldsErrorMap[field as DeepKeys<TFormData>] = newErrorMap\n          }\n        }\n      }\n    }\n\n    this.baseStore.setState((prev) => ({\n      ...prev,\n      isFormValidating: false,\n    }))\n\n    return fieldsErrorMap\n  }\n\n  /**\n   * @private\n   */\n  validate = (\n    cause: ValidationCause,\n  ):\n    | FormErrorMapFromValidator<\n        TFormData,\n        TOnMount,\n        TOnChange,\n        TOnChangeAsync,\n        TOnBlur,\n        TOnBlurAsync,\n        TOnSubmit,\n        TOnSubmitAsync\n      >\n    | Promise<\n        FormErrorMapFromValidator<\n          TFormData,\n          TOnMount,\n          TOnChange,\n          TOnChangeAsync,\n          TOnBlur,\n          TOnBlurAsync,\n          TOnSubmit,\n          TOnSubmitAsync\n        >\n      > => {\n    // Attempt to sync validate first\n    const { hasErrored, fieldsErrorMap } = this.validateSync(cause)\n\n    if (hasErrored && !this.options.asyncAlways) {\n      return fieldsErrorMap\n    }\n\n    // No error? Attempt async validation\n    return this.validateAsync(cause)\n  }\n\n  /**\n   * Handles the form submission, performs validation, and calls the appropriate onSubmit or onSubmitInvalid callbacks.\n   */\n  handleSubmit(): Promise<void>\n  handleSubmit(submitMeta: TSubmitMeta): Promise<void>\n  async handleSubmit(submitMeta?: TSubmitMeta): Promise<void> {\n    this.baseStore.setState((old) => ({\n      ...old,\n      // Submission attempts mark the form as not submitted\n      isSubmitted: false,\n      // Count submission attempts\n      submissionAttempts: old.submissionAttempts + 1,\n      isSubmitSuccessful: false, // Reset isSubmitSuccessful at the start of submission\n    }))\n\n    batch(() => {\n      void (Object.values(this.fieldInfo) as FieldInfo<any>[]).forEach(\n        (field) => {\n          if (!field.instance) return\n          // If any fields are not touched\n          if (!field.instance.state.meta.isTouched) {\n            // Mark them as touched\n            field.instance.setMeta((prev) => ({ ...prev, isTouched: true }))\n          }\n        },\n      )\n    })\n\n    if (!this.state.canSubmit) return\n\n    this.baseStore.setState((d) => ({ ...d, isSubmitting: true }))\n\n    const done = () => {\n      this.baseStore.setState((prev) => ({ ...prev, isSubmitting: false }))\n    }\n\n    await this.validateAllFields('submit')\n\n    if (!this.state.isFieldsValid) {\n      done()\n      this.options.onSubmitInvalid?.({\n        value: this.state.values,\n        formApi: this,\n      })\n      return\n    }\n\n    await this.validate('submit')\n\n    // Fields are invalid, do not submit\n    if (!this.state.isValid) {\n      done()\n      this.options.onSubmitInvalid?.({\n        value: this.state.values,\n        formApi: this,\n      })\n      return\n    }\n\n    batch(() => {\n      void (Object.values(this.fieldInfo) as FieldInfo<TFormData>[]).forEach(\n        (field) => {\n          field.instance?.options.listeners?.onSubmit?.({\n            value: field.instance.state.value,\n            fieldApi: field.instance,\n          })\n        },\n      )\n    })\n\n    this.options.listeners?.onSubmit?.({ formApi: this })\n\n    try {\n      // Run the submit code\n      await this.options.onSubmit?.({\n        value: this.state.values,\n        formApi: this,\n        meta: submitMeta ?? this.options.onSubmitMeta,\n      } as any)\n\n      batch(() => {\n        this.baseStore.setState((prev) => ({\n          ...prev,\n          isSubmitted: true,\n          isSubmitSuccessful: true, // Set isSubmitSuccessful to true on successful submission\n        }))\n        done()\n      })\n    } catch (err) {\n      this.baseStore.setState((prev) => ({\n        ...prev,\n        isSubmitSuccessful: false, // Ensure isSubmitSuccessful is false if an error occurs\n      }))\n      done()\n      throw err\n    }\n  }\n\n  /**\n   * Gets the value of the specified field.\n   */\n  getFieldValue = <TField extends DeepKeys<TFormData>>(\n    field: TField,\n  ): DeepValue<TFormData, TField> => getBy(this.state.values, field)\n\n  /**\n   * Gets the metadata of the specified field.\n   */\n  getFieldMeta = <TField extends DeepKeys<TFormData>>(\n    field: TField,\n  ): AnyFieldMeta | undefined => {\n    return this.state.fieldMeta[field]\n  }\n\n  /**\n   * Gets the field info of the specified field.\n   */\n  getFieldInfo = <TField extends DeepKeys<TFormData>>(\n    field: TField,\n  ): FieldInfo<TFormData> => {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return (this.fieldInfo[field] ||= {\n      instance: null,\n      validationMetaMap: {\n        onChange: undefined,\n        onBlur: undefined,\n        onSubmit: undefined,\n        onMount: undefined,\n        onServer: undefined,\n      },\n    })\n  }\n\n  /**\n   * Updates the metadata of the specified field.\n   */\n  setFieldMeta = <TField extends DeepKeys<TFormData>>(\n    field: TField,\n    updater: Updater<AnyFieldMetaBase>,\n  ) => {\n    this.baseStore.setState((prev) => {\n      return {\n        ...prev,\n        fieldMetaBase: {\n          ...prev.fieldMetaBase,\n          [field]: functionalUpdate(\n            updater,\n            prev.fieldMetaBase[field] as never,\n          ),\n        },\n      }\n    })\n  }\n\n  /**\n   * resets every field's meta\n   */\n  resetFieldMeta = <TField extends DeepKeys<TFormData>>(\n    fieldMeta: Record<TField, AnyFieldMeta>,\n  ): Record<TField, AnyFieldMeta> => {\n    return Object.keys(fieldMeta).reduce(\n      (acc: Record<TField, AnyFieldMeta>, key) => {\n        const fieldKey = key as TField\n        acc[fieldKey] = defaultFieldMeta\n        return acc\n      },\n      {} as Record<TField, AnyFieldMeta>,\n    )\n  }\n\n  /**\n   * Sets the value of the specified field and optionally updates the touched state.\n   */\n  setFieldValue = <TField extends DeepKeys<TFormData>>(\n    field: TField,\n    updater: Updater<DeepValue<TFormData, TField>>,\n    opts?: UpdateMetaOptions,\n  ) => {\n    const dontUpdateMeta = opts?.dontUpdateMeta ?? false\n\n    batch(() => {\n      if (!dontUpdateMeta) {\n        this.setFieldMeta(field, (prev) => ({\n          ...prev,\n          isTouched: true,\n          isDirty: true,\n          errorMap: {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n            ...prev?.errorMap,\n            onMount: undefined,\n          },\n        }))\n      }\n\n      this.baseStore.setState((prev) => {\n        return {\n          ...prev,\n          values: setBy(prev.values, field, updater),\n        }\n      })\n    })\n  }\n\n  deleteField = <TField extends DeepKeys<TFormData>>(field: TField) => {\n    const subFieldsToDelete = Object.keys(this.fieldInfo).filter((f) => {\n      const fieldStr = field.toString()\n      return f !== fieldStr && f.startsWith(fieldStr)\n    })\n\n    const fieldsToDelete = [...subFieldsToDelete, field]\n\n    // Cleanup the last fields\n    this.baseStore.setState((prev) => {\n      const newState = { ...prev }\n      fieldsToDelete.forEach((f) => {\n        newState.values = deleteBy(newState.values, f)\n        delete this.fieldInfo[f as never]\n        delete newState.fieldMetaBase[f as never]\n      })\n\n      return newState\n    })\n  }\n\n  /**\n   * Pushes a value into an array field.\n   */\n  pushFieldValue = <TField extends DeepKeysOfType<TFormData, any[]>>(\n    field: TField,\n    value: DeepValue<TFormData, TField> extends any[]\n      ? DeepValue<TFormData, TField>[number]\n      : never,\n    opts?: UpdateMetaOptions,\n  ) => {\n    this.setFieldValue(\n      field,\n      (prev) => [...(Array.isArray(prev) ? prev : []), value] as any,\n      opts,\n    )\n    this.validateField(field, 'change')\n  }\n\n  insertFieldValue = async <TField extends DeepKeysOfType<TFormData, any[]>>(\n    field: TField,\n    index: number,\n    value: DeepValue<TFormData, TField> extends any[]\n      ? DeepValue<TFormData, TField>[number]\n      : never,\n    opts?: UpdateMetaOptions,\n  ) => {\n    this.setFieldValue(\n      field,\n      (prev) => {\n        return [\n          ...(prev as DeepValue<TFormData, TField>[]).slice(0, index),\n          value,\n          ...(prev as DeepValue<TFormData, TField>[]).slice(index),\n        ] as any\n      },\n      opts,\n    )\n\n    // Validate the whole array + all fields that have shifted\n    await this.validateField(field, 'change')\n\n    // Shift down all meta after validating to make sure the new field has been mounted\n    metaHelper(this).handleArrayFieldMetaShift(field, index, 'insert')\n\n    await this.validateArrayFieldsStartingFrom(field, index, 'change')\n  }\n\n  /**\n   * Replaces a value into an array field at the specified index.\n   */\n  replaceFieldValue = async <TField extends DeepKeysOfType<TFormData, any[]>>(\n    field: TField,\n    index: number,\n    value: DeepValue<TFormData, TField> extends any[]\n      ? DeepValue<TFormData, TField>[number]\n      : never,\n    opts?: UpdateMetaOptions,\n  ) => {\n    this.setFieldValue(\n      field,\n      (prev) => {\n        return (prev as DeepValue<TFormData, TField>[]).map((d, i) =>\n          i === index ? value : d,\n        ) as any\n      },\n      opts,\n    )\n\n    // Validate the whole array + all fields that have shifted\n    await this.validateField(field, 'change')\n    await this.validateArrayFieldsStartingFrom(field, index, 'change')\n  }\n\n  /**\n   * Removes a value from an array field at the specified index.\n   */\n  removeFieldValue = async <TField extends DeepKeysOfType<TFormData, any[]>>(\n    field: TField,\n    index: number,\n    opts?: UpdateMetaOptions,\n  ) => {\n    const fieldValue = this.getFieldValue(field)\n\n    const lastIndex = Array.isArray(fieldValue)\n      ? Math.max((fieldValue as Array<unknown>).length - 1, 0)\n      : null\n\n    this.setFieldValue(\n      field,\n      (prev) => {\n        return (prev as DeepValue<TFormData, TField>[]).filter(\n          (_d, i) => i !== index,\n        ) as any\n      },\n      opts,\n    )\n\n    // Shift up all meta\n    metaHelper(this).handleArrayFieldMetaShift(field, index, 'remove')\n\n    if (lastIndex !== null) {\n      const start = `${field}[${lastIndex}]`\n      this.deleteField(start as never)\n    }\n\n    // Validate the whole array + all fields that have shifted\n    await this.validateField(field, 'change')\n    await this.validateArrayFieldsStartingFrom(field, index, 'change')\n  }\n\n  /**\n   * Swaps the values at the specified indices within an array field.\n   */\n  swapFieldValues = <TField extends DeepKeysOfType<TFormData, any[]>>(\n    field: TField,\n    index1: number,\n    index2: number,\n    opts?: UpdateMetaOptions,\n  ) => {\n    this.setFieldValue(\n      field,\n      (prev: any) => {\n        const prev1 = prev[index1]!\n        const prev2 = prev[index2]!\n        return setBy(setBy(prev, `${index1}`, prev2), `${index2}`, prev1)\n      },\n      opts,\n    )\n\n    // Swap meta\n    metaHelper(this).handleArrayFieldMetaShift(field, index1, 'swap', index2)\n\n    // Validate the whole array\n    this.validateField(field, 'change')\n    // Validate the swapped fields\n    this.validateField(`${field}[${index1}]` as DeepKeys<TFormData>, 'change')\n    this.validateField(`${field}[${index2}]` as DeepKeys<TFormData>, 'change')\n  }\n\n  /**\n   * Moves the value at the first specified index to the second specified index within an array field.\n   */\n  moveFieldValues = <TField extends DeepKeysOfType<TFormData, any[]>>(\n    field: TField,\n    index1: number,\n    index2: number,\n    opts?: UpdateMetaOptions,\n  ) => {\n    this.setFieldValue(\n      field,\n      (prev: any) => {\n        prev.splice(index2, 0, prev.splice(index1, 1)[0])\n        return prev\n      },\n      opts,\n    )\n\n    // Move meta between index1 and index2\n    metaHelper(this).handleArrayFieldMetaShift(field, index1, 'move', index2)\n\n    // Validate the whole array\n    this.validateField(field, 'change')\n    // Validate the moved fields\n    this.validateField(`${field}[${index1}]` as DeepKeys<TFormData>, 'change')\n    this.validateField(`${field}[${index2}]` as DeepKeys<TFormData>, 'change')\n  }\n\n  /**\n   * Clear all values within an array field.\n   */\n  clearFieldValues = <TField extends DeepKeysOfType<TFormData, any[]>>(\n    field: TField,\n    opts?: UpdateMetaOptions,\n  ) => {\n    const fieldValue = this.getFieldValue(field)\n\n    const lastIndex = Array.isArray(fieldValue)\n      ? Math.max((fieldValue as unknown[]).length - 1, 0)\n      : null\n\n    this.setFieldValue(field, [] as any, opts)\n\n    if (lastIndex !== null) {\n      for (let i = 0; i <= lastIndex; i++) {\n        const fieldKey = `${field}[${i}]`\n        this.deleteField(fieldKey as never)\n      }\n    }\n\n    // validate array change\n    this.validateField(field, 'change')\n  }\n\n  /**\n   * Resets the field value and meta to default state\n   */\n  resetField = <TField extends DeepKeys<TFormData>>(field: TField) => {\n    this.baseStore.setState((prev) => {\n      return {\n        ...prev,\n        fieldMetaBase: {\n          ...prev.fieldMetaBase,\n          [field]: defaultFieldMeta,\n        },\n        values: this.options.defaultValues\n          ? setBy(prev.values, field, getBy(this.options.defaultValues, field))\n          : prev.values,\n      }\n    })\n  }\n\n  /**\n   * Updates the form's errorMap\n   */\n  setErrorMap(\n    errorMap: FormValidationErrorMap<\n      TFormData,\n      UnwrapFormValidateOrFn<TOnMount>,\n      UnwrapFormValidateOrFn<TOnChange>,\n      UnwrapFormAsyncValidateOrFn<TOnChangeAsync>,\n      UnwrapFormValidateOrFn<TOnBlur>,\n      UnwrapFormAsyncValidateOrFn<TOnBlurAsync>,\n      UnwrapFormValidateOrFn<TOnSubmit>,\n      UnwrapFormAsyncValidateOrFn<TOnSubmitAsync>,\n      UnwrapFormAsyncValidateOrFn<TOnServer>\n    >,\n  ) {\n    batch(() => {\n      Object.entries(errorMap).forEach(([key, value]) => {\n        const errorMapKey = key as ValidationErrorMapKeys\n\n        if (isGlobalFormValidationError(value)) {\n          const { formError, fieldErrors } = normalizeError<TFormData>(value)\n\n          for (const fieldName of Object.keys(\n            this.fieldInfo,\n          ) as DeepKeys<TFormData>[]) {\n            const fieldMeta = this.getFieldMeta(fieldName)\n            if (!fieldMeta) continue\n\n            this.setFieldMeta(fieldName, (prev) => ({\n              ...prev,\n              errorMap: {\n                ...prev.errorMap,\n                [errorMapKey]: fieldErrors?.[fieldName],\n              },\n              errorSourceMap: {\n                ...prev.errorSourceMap,\n                [errorMapKey]: 'form',\n              },\n            }))\n          }\n\n          this.baseStore.setState((prev) => ({\n            ...prev,\n            errorMap: {\n              ...prev.errorMap,\n              [errorMapKey]: formError,\n            },\n          }))\n        } else {\n          this.baseStore.setState((prev) => ({\n            ...prev,\n            errorMap: {\n              ...prev.errorMap,\n              [errorMapKey]: value,\n            },\n          }))\n        }\n      })\n    })\n  }\n\n  /**\n   * Returns form and field level errors\n   */\n  getAllErrors = (): {\n    form: {\n      errors: Array<\n        | UnwrapFormValidateOrFn<TOnMount>\n        | UnwrapFormValidateOrFn<TOnChange>\n        | UnwrapFormAsyncValidateOrFn<TOnChangeAsync>\n        | UnwrapFormValidateOrFn<TOnBlur>\n        | UnwrapFormAsyncValidateOrFn<TOnBlurAsync>\n        | UnwrapFormValidateOrFn<TOnSubmit>\n        | UnwrapFormAsyncValidateOrFn<TOnSubmitAsync>\n        | UnwrapFormAsyncValidateOrFn<TOnServer>\n      >\n      errorMap: ValidationErrorMap<\n        UnwrapFormValidateOrFn<TOnMount>,\n        UnwrapFormValidateOrFn<TOnChange>,\n        UnwrapFormAsyncValidateOrFn<TOnChangeAsync>,\n        UnwrapFormValidateOrFn<TOnBlur>,\n        UnwrapFormAsyncValidateOrFn<TOnBlurAsync>,\n        UnwrapFormValidateOrFn<TOnSubmit>,\n        UnwrapFormAsyncValidateOrFn<TOnSubmitAsync>,\n        UnwrapFormAsyncValidateOrFn<TOnServer>\n      >\n    }\n    fields: Record<\n      DeepKeys<TFormData>,\n      { errors: ValidationError[]; errorMap: ValidationErrorMap }\n    >\n  } => {\n    return {\n      form: {\n        errors: this.state.errors,\n        errorMap: this.state.errorMap,\n      },\n      fields: Object.entries(this.state.fieldMeta).reduce(\n        (acc, [fieldName, fieldMeta]) => {\n          if (\n            Object.keys(fieldMeta as AnyFieldMeta).length &&\n            (fieldMeta as AnyFieldMeta).errors.length\n          ) {\n            acc[fieldName as DeepKeys<TFormData>] = {\n              errors: (fieldMeta as AnyFieldMeta).errors,\n              errorMap: (fieldMeta as AnyFieldMeta).errorMap,\n            }\n          }\n\n          return acc\n        },\n        {} as Record<\n          DeepKeys<TFormData>,\n          { errors: ValidationError[]; errorMap: ValidationErrorMap }\n        >,\n      ),\n    }\n  }\n\n  /**\n   * Parses the form's values with a given standard schema and returns\n   * issues (if any). This method does NOT set any internal errors.\n   * @param schema The standard schema to parse the form values with.\n   */\n  parseValuesWithSchema = (schema: StandardSchemaV1<TFormData, unknown>) => {\n    return standardSchemaValidators.validate(\n      { value: this.state.values, validationSource: 'form' },\n      schema,\n    )\n  }\n\n  /**\n   * Parses the form's values with a given standard schema and returns\n   * issues (if any). This method does NOT set any internal errors.\n   * @param schema The standard schema to parse the form values with.\n   */\n  parseValuesWithSchemaAsync = (\n    schema: StandardSchemaV1<TFormData, unknown>,\n  ) => {\n    return standardSchemaValidators.validateAsync(\n      { value: this.state.values, validationSource: 'form' },\n      schema,\n    )\n  }\n}\n\nfunction normalizeError<TFormData>(rawError?: FormValidationError<unknown>): {\n  formError: ValidationError\n  fieldErrors?: Partial<Record<DeepKeys<TFormData>, ValidationError>>\n} {\n  if (rawError) {\n    if (isGlobalFormValidationError(rawError)) {\n      const formError = normalizeError(rawError.form).formError\n      const fieldErrors = rawError.fields\n      return { formError, fieldErrors } as never\n    }\n\n    return { formError: rawError }\n  }\n\n  return { formError: undefined }\n}\n\nfunction getErrorMapKey(cause: ValidationCause) {\n  switch (cause) {\n    case 'submit':\n      return 'onSubmit'\n    case 'blur':\n      return 'onBlur'\n    case 'mount':\n      return 'onMount'\n    case 'server':\n      return 'onServer'\n    case 'change':\n    default:\n      return 'onChange'\n  }\n}\n"],"names":["_a","opts","_c","_b"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2241, "column": 0}, "map": {"version":3,"file":"FieldApi.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Bform-core%401.12.0/node_modules/%40tanstack/form-core/src/FieldApi.ts"],"sourcesContent":["import { Derived, batch } from '@tanstack/store'\nimport {\n  isStandardSchemaValidator,\n  standardSchemaValidators,\n} from './standardSchemaValidator'\nimport { defaultFieldMeta } from './metaHelper'\nimport {\n  determineFieldLevelErrorSourceAndValue,\n  getAsyncValidatorArray,\n  getBy,\n  getSyncValidatorArray,\n} from './utils'\nimport type { DeepKeys, DeepValue, UnwrapOneLevelOfArray } from './util-types'\nimport type {\n  StandardSchemaV1,\n  StandardSchemaV1Issue,\n  TStandardSchemaValidatorValue,\n} from './standardSchemaValidator'\nimport type {\n  FieldInfo,\n  FormApi,\n  FormAsyncValidateOrFn,\n  FormValidateAsyncFn,\n  FormValidateFn,\n  FormValidateOrFn,\n} from './FormApi'\nimport type {\n  ListenerCause,\n  UpdateMetaOptions,\n  ValidationCause,\n  ValidationError,\n  ValidationErrorMap,\n  ValidationErrorMapSource,\n} from './types'\nimport type { AsyncValidator, SyncValidator, Updater } from './utils'\n\n/**\n * @private\n */\n// TODO: Add the `Unwrap` type to the errors\ntype FieldErrorMapFromValidator<\n  TFormData,\n  TName extends DeepKeys<TFormData>,\n  TData extends DeepValue<TFormData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TFormData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TFormData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TFormData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TFormData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TFormData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TFormData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TFormData, TName, TData>,\n> = Partial<\n  Record<\n    DeepKeys<TFormData>,\n    ValidationErrorMap<\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync\n    >\n  >\n>\n\n/**\n * @private\n */\nexport type FieldValidateFn<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName> = DeepValue<TParentData, TName>,\n> = (props: {\n  value: TData\n  fieldApi: FieldApi<\n    TParentData,\n    TName,\n    TData,\n    // This is technically an edge-type; which we try to keep non-`any`, but in this case\n    // It's referring to an inaccessible type from the field validate function inner types, so it's not a big deal\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any\n  >\n}) => unknown\n\n/**\n * @private\n */\nexport type FieldValidateOrFn<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName> = DeepValue<TParentData, TName>,\n> =\n  | FieldValidateFn<TParentData, TName, TData>\n  | StandardSchemaV1<TData, unknown>\n\ntype StandardBrandedSchemaV1<T> = T & { __standardSchemaV1: true }\n\ntype UnwrapFormValidateOrFnForInner<\n  TValidateOrFn extends undefined | FormValidateOrFn<any>,\n> = [TValidateOrFn] extends [FormValidateFn<any>]\n  ? ReturnType<TValidateOrFn>\n  : [TValidateOrFn] extends [StandardSchemaV1<infer TOut, any>]\n    ? StandardBrandedSchemaV1<TOut>\n    : undefined\n\nexport type UnwrapFieldValidateOrFn<\n  TName extends string,\n  TValidateOrFn extends undefined | FieldValidateOrFn<any, any, any>,\n  TFormValidateOrFn extends undefined | FormValidateOrFn<any>,\n> =\n  | ([TFormValidateOrFn] extends [StandardSchemaV1<any, infer TStandardOut>]\n      ? TName extends keyof TStandardOut\n        ? StandardSchemaV1Issue[]\n        : undefined\n      : undefined)\n  | (UnwrapFormValidateOrFnForInner<TFormValidateOrFn> extends infer TFormValidateVal\n      ? TFormValidateVal extends { __standardSchemaV1: true }\n        ? [DeepValue<TFormValidateVal, TName>] extends [never]\n          ? undefined\n          : StandardSchemaV1Issue[]\n        : TFormValidateVal extends { fields: any }\n          ? TName extends keyof TFormValidateVal['fields']\n            ? TFormValidateVal['fields'][TName]\n            : undefined\n          : undefined\n      : never)\n  | ([TValidateOrFn] extends [FieldValidateFn<any, any, any>]\n      ? ReturnType<TValidateOrFn>\n      : [TValidateOrFn] extends [StandardSchemaV1<any, any>]\n        ? // TODO: Check if `disableErrorFlat` is enabled, if so, return StandardSchemaV1Issue[][]\n          StandardSchemaV1Issue[]\n        : undefined)\n\n/**\n * @private\n */\nexport type FieldValidateAsyncFn<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName> = DeepValue<TParentData, TName>,\n> = (options: {\n  value: TData\n  fieldApi: FieldApi<\n    TParentData,\n    TName,\n    TData,\n    // This is technically an edge-type; which we try to keep non-`any`, but in this case\n    // It's referring to an inaccessible type from the field validate function inner types, so it's not a big deal\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any\n  >\n  signal: AbortSignal\n}) => unknown | Promise<unknown>\n\n/**\n * @private\n */\nexport type FieldAsyncValidateOrFn<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName> = DeepValue<TParentData, TName>,\n> =\n  | FieldValidateAsyncFn<TParentData, TName, TData>\n  | StandardSchemaV1<TData, unknown>\n\ntype UnwrapFormAsyncValidateOrFnForInner<\n  TValidateOrFn extends undefined | FormAsyncValidateOrFn<any>,\n> = [TValidateOrFn] extends [FormValidateAsyncFn<any>]\n  ? Awaited<ReturnType<TValidateOrFn>>\n  : [TValidateOrFn] extends [StandardSchemaV1<infer TOut, any>]\n    ? StandardBrandedSchemaV1<TOut>\n    : undefined\n\nexport type UnwrapFieldAsyncValidateOrFn<\n  TName extends string,\n  TValidateOrFn extends undefined | FieldAsyncValidateOrFn<any, any, any>,\n  TFormValidateOrFn extends undefined | FormAsyncValidateOrFn<any>,\n> =\n  | ([TFormValidateOrFn] extends [StandardSchemaV1<any, infer TStandardOut>]\n      ? TName extends keyof TStandardOut\n        ? StandardSchemaV1Issue[]\n        : undefined\n      : undefined)\n  | (UnwrapFormAsyncValidateOrFnForInner<TFormValidateOrFn> extends infer TFormValidateVal\n      ? TFormValidateVal extends { __standardSchemaV1: true }\n        ? [DeepValue<TFormValidateVal, TName>] extends [never]\n          ? undefined\n          : StandardSchemaV1Issue[]\n        : TFormValidateVal extends { fields: any }\n          ? TName extends keyof TFormValidateVal['fields']\n            ? TFormValidateVal['fields'][TName]\n            : undefined\n          : undefined\n      : never)\n  | ([TValidateOrFn] extends [FieldValidateAsyncFn<any, any, any>]\n      ? Awaited<ReturnType<TValidateOrFn>>\n      : [TValidateOrFn] extends [StandardSchemaV1<any, any>]\n        ? // TODO: Check if `disableErrorFlat` is enabled, if so, return StandardSchemaV1Issue[][]\n          StandardSchemaV1Issue[]\n        : undefined)\n\n/**\n * @private\n */\nexport type FieldListenerFn<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName> = DeepValue<TParentData, TName>,\n> = (props: {\n  value: TData\n  fieldApi: FieldApi<\n    TParentData,\n    TName,\n    TData,\n    // This is technically an edge-type; which we try to keep non-`any`, but in this case\n    // It's referring to an inaccessible type from the field listener function inner types, so it's not a big deal\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any\n  >\n}) => void\n\nexport interface FieldValidators<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n> {\n  /**\n   * An optional function, that runs on the mount event of input.\n   */\n  onMount?: TOnMount\n  /**\n   * An optional function, that runs on the change event of input.\n   *\n   * @example z.string().min(1)\n   */\n  onChange?: TOnChange\n  /**\n   * An optional property similar to `onChange` but async validation\n   *\n   * @example z.string().refine(async (val) => val.length > 3, { message: 'Testing 123' })\n   */\n  onChangeAsync?: TOnChangeAsync\n  /**\n   * An optional number to represent how long the `onChangeAsync` should wait before running\n   *\n   * If set to a number larger than 0, will debounce the async validation event by this length of time in milliseconds\n   */\n  onChangeAsyncDebounceMs?: number\n  /**\n   * An optional list of field names that should trigger this field's `onChange` and `onChangeAsync` events when its value changes\n   */\n  onChangeListenTo?: DeepKeys<TParentData>[]\n  /**\n   * An optional function, that runs on the blur event of input.\n   *\n   * @example z.string().min(1)\n   */\n  onBlur?: TOnBlur\n  /**\n   * An optional property similar to `onBlur` but async validation.\n   *\n   * @example z.string().refine(async (val) => val.length > 3, { message: 'Testing 123' })\n   */\n  onBlurAsync?: TOnBlurAsync\n\n  /**\n   * An optional number to represent how long the `onBlurAsync` should wait before running\n   *\n   * If set to a number larger than 0, will debounce the async validation event by this length of time in milliseconds\n   */\n  onBlurAsyncDebounceMs?: number\n  /**\n   * An optional list of field names that should trigger this field's `onBlur` and `onBlurAsync` events when its value changes\n   */\n  onBlurListenTo?: DeepKeys<TParentData>[]\n  /**\n   * An optional function, that runs on the submit event of form.\n   *\n   * @example z.string().min(1)\n   */\n  onSubmit?: TOnSubmit\n  /**\n   * An optional property similar to `onSubmit` but async validation.\n   *\n   * @example z.string().refine(async (val) => val.length > 3, { message: 'Testing 123' })\n   */\n  onSubmitAsync?: TOnSubmitAsync\n}\n\nexport interface FieldListeners<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName> = DeepValue<TParentData, TName>,\n> {\n  onChange?: FieldListenerFn<TParentData, TName, TData>\n  onChangeDebounceMs?: number\n  onBlur?: FieldListenerFn<TParentData, TName, TData>\n  onBlurDebounceMs?: number\n  onMount?: FieldListenerFn<TParentData, TName, TData>\n  onSubmit?: FieldListenerFn<TParentData, TName, TData>\n}\n\n/**\n * An object type representing the options for a field in a form.\n */\nexport interface FieldOptions<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n> {\n  /**\n   * The field name. The type will be `DeepKeys<TParentData>` to ensure your name is a deep key of the parent dataset.\n   */\n  name: TName\n  /**\n   * An optional default value for the field.\n   */\n  defaultValue?: NoInfer<TData>\n  /**\n   * The default time to debounce async validation if there is not a more specific debounce time passed.\n   */\n  asyncDebounceMs?: number\n  /**\n   * If `true`, always run async validation, even if there are errors emitted during synchronous validation.\n   */\n  asyncAlways?: boolean\n  /**\n   * A list of validators to pass to the field\n   */\n  validators?: FieldValidators<\n    TParentData,\n    TName,\n    TData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync\n  >\n  /**\n   * An optional object with default metadata for the field.\n   */\n  defaultMeta?: Partial<\n    FieldMeta<\n      TParentData,\n      TName,\n      TData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      any,\n      any,\n      any,\n      any,\n      any,\n      any,\n      any\n    >\n  >\n  /**\n   * A list of listeners which attach to the corresponding events\n   */\n  listeners?: FieldListeners<TParentData, TName, TData>\n  /**\n   * Disable the `flat(1)` operation on `field.errors`. This is useful if you want to keep the error structure as is. Not suggested for most use-cases.\n   */\n  disableErrorFlat?: boolean\n}\n\n/**\n * An object type representing the required options for the FieldApi class.\n */\nexport interface FieldApiOptions<\n  in out TParentData,\n  in out TName extends DeepKeys<TParentData>,\n  in out TData extends DeepValue<TParentData, TName>,\n  in out TOnMount extends\n    | undefined\n    | FieldValidateOrFn<TParentData, TName, TData>,\n  in out TOnChange extends\n    | undefined\n    | FieldValidateOrFn<TParentData, TName, TData>,\n  in out TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  in out TOnBlur extends\n    | undefined\n    | FieldValidateOrFn<TParentData, TName, TData>,\n  in out TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  in out TOnSubmit extends\n    | undefined\n    | FieldValidateOrFn<TParentData, TName, TData>,\n  in out TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  in out TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  in out TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  in out TFormOnChangeAsync extends\n    | undefined\n    | FormAsyncValidateOrFn<TParentData>,\n  in out TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  in out TFormOnBlurAsync extends\n    | undefined\n    | FormAsyncValidateOrFn<TParentData>,\n  in out TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  in out TFormOnSubmitAsync extends\n    | undefined\n    | FormAsyncValidateOrFn<TParentData>,\n  in out TFormOnServer extends undefined | FormAsyncValidateOrFn<TParentData>,\n  in out TParentSubmitMeta,\n> extends FieldOptions<\n    TParentData,\n    TName,\n    TData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync\n  > {\n  form: FormApi<\n    TParentData,\n    TFormOnMount,\n    TFormOnChange,\n    TFormOnChangeAsync,\n    TFormOnBlur,\n    TFormOnBlurAsync,\n    TFormOnSubmit,\n    TFormOnSubmitAsync,\n    TFormOnServer,\n    TParentSubmitMeta\n  >\n}\n\nexport type FieldMetaBase<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChangeAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnBlurAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n> = {\n  /**\n   * A flag indicating whether the field has been touched.\n   */\n  isTouched: boolean\n  /**\n   * A flag indicating whether the field has been blurred.\n   */\n  isBlurred: boolean\n  /**\n   * A flag that is `true` if the field's value has been modified by the user. Opposite of `isPristine`.\n   */\n  isDirty: boolean\n  /**\n   * A map of errors related to the field value.\n   */\n  errorMap: ValidationErrorMap<\n    UnwrapFieldValidateOrFn<TName, TOnMount, TFormOnMount>,\n    UnwrapFieldValidateOrFn<TName, TOnChange, TFormOnChange>,\n    UnwrapFieldAsyncValidateOrFn<TName, TOnChangeAsync, TFormOnChangeAsync>,\n    UnwrapFieldValidateOrFn<TName, TOnBlur, TFormOnBlur>,\n    UnwrapFieldAsyncValidateOrFn<TName, TOnBlurAsync, TFormOnBlurAsync>,\n    UnwrapFieldValidateOrFn<TName, TOnSubmit, TFormOnSubmit>,\n    UnwrapFieldAsyncValidateOrFn<TName, TOnSubmitAsync, TFormOnSubmitAsync>\n  >\n  /**\n   * @private allows tracking the source of the errors in the error map\n   */\n  errorSourceMap: ValidationErrorMapSource\n  /**\n   * A flag indicating whether the field is currently being validated.\n   */\n  isValidating: boolean\n}\n\nexport type AnyFieldMetaBase = FieldMetaBase<\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any\n>\n\nexport type FieldMetaDerived<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChangeAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnBlurAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n> = {\n  /**\n   * An array of errors related to the field value.\n   */\n  errors: Array<\n    | UnwrapOneLevelOfArray<\n        UnwrapFieldValidateOrFn<TName, TOnMount, TFormOnMount>\n      >\n    | UnwrapOneLevelOfArray<\n        UnwrapFieldValidateOrFn<TName, TOnChange, TFormOnChange>\n      >\n    | UnwrapOneLevelOfArray<\n        UnwrapFieldAsyncValidateOrFn<TName, TOnChangeAsync, TFormOnChangeAsync>\n      >\n    | UnwrapOneLevelOfArray<\n        UnwrapFieldValidateOrFn<TName, TOnBlur, TFormOnBlur>\n      >\n    | UnwrapOneLevelOfArray<\n        UnwrapFieldAsyncValidateOrFn<TName, TOnBlurAsync, TFormOnBlurAsync>\n      >\n    | UnwrapOneLevelOfArray<\n        UnwrapFieldValidateOrFn<TName, TOnSubmit, TFormOnSubmit>\n      >\n    | UnwrapOneLevelOfArray<\n        UnwrapFieldAsyncValidateOrFn<TName, TOnSubmitAsync, TFormOnSubmitAsync>\n      >\n  >\n  /**\n   * A flag that is `true` if the field's value has not been modified by the user. Opposite of `isDirty`.\n   */\n  isPristine: boolean\n  /**\n   * A boolean indicating if the field is valid. Evaluates `true` if there are no field errors.\n   */\n  isValid: boolean\n  /**\n   * A flag indicating whether the field's current value is the default value\n   */\n  isDefaultValue: boolean\n}\n\nexport type AnyFieldMetaDerived = FieldMetaDerived<\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any\n>\n\n/**\n * An object type representing the metadata of a field in a form.\n */\nexport type FieldMeta<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChangeAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnBlurAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n> = FieldMetaBase<\n  TParentData,\n  TName,\n  TData,\n  TOnMount,\n  TOnChange,\n  TOnChangeAsync,\n  TOnBlur,\n  TOnBlurAsync,\n  TOnSubmit,\n  TOnSubmitAsync,\n  TFormOnMount,\n  TFormOnChange,\n  TFormOnChangeAsync,\n  TFormOnBlur,\n  TFormOnBlurAsync,\n  TFormOnSubmit,\n  TFormOnSubmitAsync\n> &\n  FieldMetaDerived<\n    TParentData,\n    TName,\n    TData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TFormOnMount,\n    TFormOnChange,\n    TFormOnChangeAsync,\n    TFormOnBlur,\n    TFormOnBlurAsync,\n    TFormOnSubmit,\n    TFormOnSubmitAsync\n  >\n\nexport type AnyFieldMeta = FieldMeta<\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any\n>\n\n/**\n * An object type representing the state of a field.\n */\nexport type FieldState<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChangeAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnBlurAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n> = {\n  /**\n   * The current value of the field.\n   */\n  value: TData\n  /**\n   * The current metadata of the field.\n   */\n  meta: FieldMeta<\n    TParentData,\n    TName,\n    TData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TFormOnMount,\n    TFormOnChange,\n    TFormOnChangeAsync,\n    TFormOnBlur,\n    TFormOnBlurAsync,\n    TFormOnSubmit,\n    TFormOnSubmitAsync\n  >\n}\n\n/**\n * @public\n *\n * A type representing the Field API with all generics set to `any` for convenience.\n */\nexport type AnyFieldApi = FieldApi<\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any\n>\n\n/**\n * A class representing the API for managing a form field.\n *\n * Normally, you will not need to create a new `FieldApi` instance directly.\n * Instead, you will use a framework hook/function like `useField` or `createField`\n * to create a new instance for you that uses your framework's reactivity model.\n * However, if you need to create a new instance manually, you can do so by calling\n * the `new FieldApi` constructor.\n */\nexport class FieldApi<\n  in out TParentData,\n  in out TName extends DeepKeys<TParentData>,\n  in out TData extends DeepValue<TParentData, TName>,\n  in out TOnMount extends\n    | undefined\n    | FieldValidateOrFn<TParentData, TName, TData>,\n  in out TOnChange extends\n    | undefined\n    | FieldValidateOrFn<TParentData, TName, TData>,\n  in out TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  in out TOnBlur extends\n    | undefined\n    | FieldValidateOrFn<TParentData, TName, TData>,\n  in out TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  in out TOnSubmit extends\n    | undefined\n    | FieldValidateOrFn<TParentData, TName, TData>,\n  in out TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  in out TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  in out TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  in out TFormOnChangeAsync extends\n    | undefined\n    | FormAsyncValidateOrFn<TParentData>,\n  in out TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  in out TFormOnBlurAsync extends\n    | undefined\n    | FormAsyncValidateOrFn<TParentData>,\n  in out TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  in out TFormOnSubmitAsync extends\n    | undefined\n    | FormAsyncValidateOrFn<TParentData>,\n  in out TFormOnServer extends undefined | FormAsyncValidateOrFn<TParentData>,\n  in out TParentSubmitMeta,\n> {\n  /**\n   * A reference to the form API instance.\n   */\n  form: FieldApiOptions<\n    TParentData,\n    TName,\n    TData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TFormOnMount,\n    TFormOnChange,\n    TFormOnChangeAsync,\n    TFormOnBlur,\n    TFormOnBlurAsync,\n    TFormOnSubmit,\n    TFormOnSubmitAsync,\n    TFormOnServer,\n    TParentSubmitMeta\n  >['form']\n  /**\n   * The field name.\n   */\n  name!: DeepKeys<TParentData>\n  /**\n   * The field options.\n   */\n  options: FieldApiOptions<\n    TParentData,\n    TName,\n    TData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TFormOnMount,\n    TFormOnChange,\n    TFormOnChangeAsync,\n    TFormOnBlur,\n    TFormOnBlurAsync,\n    TFormOnSubmit,\n    TFormOnSubmitAsync,\n    TFormOnServer,\n    TParentSubmitMeta\n  > = {} as any\n  /**\n   * The field state store.\n   */\n  store!: Derived<\n    FieldState<\n      TParentData,\n      TName,\n      TData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TFormOnMount,\n      TFormOnChange,\n      TFormOnChangeAsync,\n      TFormOnBlur,\n      TFormOnBlurAsync,\n      TFormOnSubmit,\n      TFormOnSubmitAsync\n    >\n  >\n  /**\n   * The current field state.\n   */\n  get state() {\n    return this.store.state\n  }\n  timeoutIds: {\n    validations: Record<ValidationCause, ReturnType<typeof setTimeout> | null>\n    listeners: Record<ListenerCause, ReturnType<typeof setTimeout> | null>\n    formListeners: Record<ListenerCause, ReturnType<typeof setTimeout> | null>\n  }\n\n  /**\n   * Initializes a new `FieldApi` instance.\n   */\n  constructor(\n    opts: FieldApiOptions<\n      TParentData,\n      TName,\n      TData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TFormOnMount,\n      TFormOnChange,\n      TFormOnChangeAsync,\n      TFormOnBlur,\n      TFormOnBlurAsync,\n      TFormOnSubmit,\n      TFormOnSubmitAsync,\n      TFormOnServer,\n      TParentSubmitMeta\n    >,\n  ) {\n    this.form = opts.form as never\n    this.name = opts.name as never\n    this.timeoutIds = {\n      validations: {} as Record<ValidationCause, never>,\n      listeners: {} as Record<ListenerCause, never>,\n      formListeners: {} as Record<ListenerCause, never>,\n    }\n\n    this.store = new Derived({\n      deps: [this.form.store],\n      fn: () => {\n        const value = this.form.getFieldValue(this.name)\n        const meta = this.form.getFieldMeta(this.name) ?? {\n          ...defaultFieldMeta,\n          ...opts.defaultMeta,\n        }\n\n        return {\n          value,\n          meta,\n        } as FieldState<\n          TParentData,\n          TName,\n          TData,\n          TOnMount,\n          TOnChange,\n          TOnChangeAsync,\n          TOnBlur,\n          TOnBlurAsync,\n          TOnSubmit,\n          TOnSubmitAsync,\n          TFormOnMount,\n          TFormOnChange,\n          TFormOnChangeAsync,\n          TFormOnBlur,\n          TFormOnBlurAsync,\n          TFormOnSubmit,\n          TFormOnSubmitAsync\n        >\n      },\n    })\n\n    this.options = opts as never\n  }\n\n  /**\n   * @private\n   */\n  runValidator<\n    TValue extends TStandardSchemaValidatorValue<TData> & {\n      fieldApi: AnyFieldApi\n    },\n    TType extends 'validate' | 'validateAsync',\n  >(props: {\n    validate: TType extends 'validate'\n      ? FieldValidateOrFn<any, any, any>\n      : FieldAsyncValidateOrFn<any, any, any>\n    value: TValue\n    type: TType\n    // When `api` is 'field', the return type cannot be `FormValidationError`\n  }): unknown {\n    if (isStandardSchemaValidator(props.validate)) {\n      return standardSchemaValidators[props.type](\n        props.value,\n        props.validate,\n      ) as never\n    }\n\n    return (props.validate as FieldValidateFn<any, any>)(props.value) as never\n  }\n\n  /**\n   * Mounts the field instance to the form.\n   */\n  mount = () => {\n    const cleanup = this.store.mount()\n\n    if ((this.options.defaultValue as unknown) !== undefined) {\n      this.form.setFieldValue(this.name, this.options.defaultValue as never, {\n        dontUpdateMeta: true,\n      })\n    }\n\n    const info = this.getInfo()\n    info.instance = this as never\n\n    this.update(this.options as never)\n    const { onMount } = this.options.validators || {}\n\n    if (onMount) {\n      const error = this.runValidator({\n        validate: onMount,\n        value: {\n          value: this.state.value,\n          fieldApi: this,\n          validationSource: 'field',\n        },\n        type: 'validate',\n      })\n      if (error) {\n        this.setMeta(\n          (prev) =>\n            ({\n              ...prev,\n              // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n              errorMap: { ...prev?.errorMap, onMount: error },\n              errorSourceMap: {\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                ...prev?.errorSourceMap,\n                onMount: 'field',\n              },\n            }) as never,\n        )\n      }\n    }\n\n    this.options.listeners?.onMount?.({\n      value: this.state.value,\n      fieldApi: this,\n    })\n\n    return cleanup\n  }\n\n  /**\n   * Updates the field instance with new options.\n   */\n  update = (\n    opts: FieldApiOptions<\n      TParentData,\n      TName,\n      TData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TFormOnMount,\n      TFormOnChange,\n      TFormOnChangeAsync,\n      TFormOnBlur,\n      TFormOnBlurAsync,\n      TFormOnSubmit,\n      TFormOnSubmitAsync,\n      TFormOnServer,\n      TParentSubmitMeta\n    >,\n  ) => {\n    this.options = opts as never\n\n    const nameHasChanged = this.name !== opts.name\n    this.name = opts.name\n\n    // Default Value\n    if ((this.state.value as unknown) === undefined) {\n      const formDefault = getBy(opts.form.options.defaultValues, opts.name)\n\n      const defaultValue = (opts.defaultValue as unknown) ?? formDefault\n\n      // The name is dynamic in array fields. It changes when the user performs operations like removing or reordering.\n      // In this case, we don't want to force a default value if the store managed to find an existing value.\n      if (nameHasChanged) {\n        this.setValue((val) => (val as unknown) || defaultValue, {\n          dontUpdateMeta: true,\n        })\n      } else if (defaultValue !== undefined) {\n        this.setValue(defaultValue as never, {\n          dontUpdateMeta: true,\n        })\n      }\n    }\n\n    // Default Meta\n    if (this.form.getFieldMeta(this.name) === undefined) {\n      this.setMeta(this.state.meta)\n    }\n  }\n\n  /**\n   * Gets the current field value.\n   * @deprecated Use `field.state.value` instead.\n   */\n  getValue = (): TData => {\n    return this.form.getFieldValue(this.name) as TData\n  }\n\n  /**\n   * Sets the field value and run the `change` validator.\n   */\n  setValue = (updater: Updater<TData>, options?: UpdateMetaOptions) => {\n    this.form.setFieldValue(this.name, updater as never, options)\n\n    this.triggerOnChangeListener()\n\n    this.validate('change')\n  }\n\n  getMeta = () => this.store.state.meta\n\n  /**\n   * Sets the field metadata.\n   */\n  setMeta = (\n    updater: Updater<\n      FieldMetaBase<\n        TParentData,\n        TName,\n        TData,\n        TOnMount,\n        TOnChange,\n        TOnChangeAsync,\n        TOnBlur,\n        TOnBlurAsync,\n        TOnSubmit,\n        TOnSubmitAsync,\n        TFormOnMount,\n        TFormOnChange,\n        TFormOnChangeAsync,\n        TFormOnBlur,\n        TFormOnBlurAsync,\n        TFormOnSubmit,\n        TFormOnSubmitAsync\n      >\n    >,\n  ) => this.form.setFieldMeta(this.name, updater)\n\n  /**\n   * Gets the field information object.\n   */\n  getInfo = () => this.form.getFieldInfo(this.name)\n\n  /**\n   * Pushes a new value to the field.\n   */\n  pushValue = (\n    value: TData extends any[] ? TData[number] : never,\n    opts?: UpdateMetaOptions,\n  ) => {\n    this.form.pushFieldValue(this.name, value as any, opts)\n\n    this.triggerOnChangeListener()\n  }\n\n  /**\n   * Inserts a value at the specified index, shifting the subsequent values to the right.\n   */\n  insertValue = (\n    index: number,\n    value: TData extends any[] ? TData[number] : never,\n    opts?: UpdateMetaOptions,\n  ) => {\n    this.form.insertFieldValue(this.name, index, value as any, opts)\n\n    this.triggerOnChangeListener()\n  }\n\n  /**\n   * Replaces a value at the specified index.\n   */\n  replaceValue = (\n    index: number,\n    value: TData extends any[] ? TData[number] : never,\n    opts?: UpdateMetaOptions,\n  ) => {\n    this.form.replaceFieldValue(this.name, index, value as any, opts)\n\n    this.triggerOnChangeListener()\n  }\n\n  /**\n   * Removes a value at the specified index.\n   */\n  removeValue = (index: number, opts?: UpdateMetaOptions) => {\n    this.form.removeFieldValue(this.name, index, opts)\n\n    this.triggerOnChangeListener()\n  }\n\n  /**\n   * Swaps the values at the specified indices.\n   */\n  swapValues = (aIndex: number, bIndex: number, opts?: UpdateMetaOptions) => {\n    this.form.swapFieldValues(this.name, aIndex, bIndex, opts)\n\n    this.triggerOnChangeListener()\n  }\n\n  /**\n   * Moves the value at the first specified index to the second specified index.\n   */\n  moveValue = (aIndex: number, bIndex: number, opts?: UpdateMetaOptions) => {\n    this.form.moveFieldValues(this.name, aIndex, bIndex, opts)\n\n    this.triggerOnChangeListener()\n  }\n\n  /**\n   * Clear all values from the array.\n   */\n  clearValues = (opts?: UpdateMetaOptions) => {\n    this.form.clearFieldValues(this.name, opts)\n\n    this.triggerOnChangeListener()\n  }\n\n  /**\n   * @private\n   */\n  getLinkedFields = (cause: ValidationCause) => {\n    const fields = Object.values(this.form.fieldInfo) as FieldInfo<any>[]\n\n    const linkedFields: AnyFieldApi[] = []\n    for (const field of fields) {\n      if (!field.instance) continue\n      const { onChangeListenTo, onBlurListenTo } =\n        field.instance.options.validators || {}\n      if (cause === 'change' && onChangeListenTo?.includes(this.name)) {\n        linkedFields.push(field.instance)\n      }\n      if (cause === 'blur' && onBlurListenTo?.includes(this.name as string)) {\n        linkedFields.push(field.instance)\n      }\n    }\n\n    return linkedFields\n  }\n\n  /**\n   * @private\n   */\n  validateSync = (\n    cause: ValidationCause,\n    errorFromForm: ValidationErrorMap,\n  ) => {\n    const validates = getSyncValidatorArray(cause, this.options)\n\n    const linkedFields = this.getLinkedFields(cause)\n    const linkedFieldValidates = linkedFields.reduce(\n      (acc, field) => {\n        const fieldValidates = getSyncValidatorArray(cause, field.options)\n        fieldValidates.forEach((validate) => {\n          ;(validate as any).field = field\n        })\n        return acc.concat(fieldValidates as never)\n      },\n      [] as Array<\n        SyncValidator<any> & {\n          field: AnyFieldApi\n        }\n      >,\n    )\n\n    // Needs type cast as eslint errantly believes this is always falsy\n    let hasErrored = false as boolean\n\n    batch(() => {\n      const validateFieldFn = (\n        field: AnyFieldApi,\n        validateObj: SyncValidator<any>,\n      ) => {\n        const errorMapKey = getErrorMapKey(validateObj.cause)\n\n        const fieldLevelError = validateObj.validate\n          ? normalizeError(\n              field.runValidator({\n                validate: validateObj.validate,\n                value: {\n                  value: field.store.state.value,\n                  validationSource: 'field',\n                  fieldApi: field,\n                },\n                type: 'validate',\n              }),\n            )\n          : undefined\n\n        const formLevelError = errorFromForm[errorMapKey]\n\n        const { newErrorValue, newSource } =\n          determineFieldLevelErrorSourceAndValue({\n            formLevelError,\n            fieldLevelError,\n          })\n\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (field.state.meta.errorMap?.[errorMapKey] !== newErrorValue) {\n          field.setMeta((prev) => ({\n            ...prev,\n            errorMap: {\n              ...prev.errorMap,\n              [errorMapKey]: newErrorValue,\n            },\n            errorSourceMap: {\n              ...prev.errorSourceMap,\n              [errorMapKey]: newSource,\n            },\n          }))\n        }\n        if (newErrorValue) {\n          hasErrored = true\n        }\n      }\n\n      for (const validateObj of validates) {\n        validateFieldFn(this, validateObj)\n      }\n      for (const fieldValitateObj of linkedFieldValidates) {\n        if (!fieldValitateObj.validate) continue\n        validateFieldFn(fieldValitateObj.field, fieldValitateObj)\n      }\n    })\n\n    /**\n     *  when we have an error for onSubmit in the state, we want\n     *  to clear the error as soon as the user enters a valid value in the field\n     */\n    const submitErrKey = getErrorMapKey('submit')\n\n    if (\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      this.state.meta.errorMap?.[submitErrKey] &&\n      cause !== 'submit' &&\n      !hasErrored\n    ) {\n      this.setMeta((prev) => ({\n        ...prev,\n        errorMap: {\n          ...prev.errorMap,\n          [submitErrKey]: undefined,\n        },\n        errorSourceMap: {\n          ...prev.errorSourceMap,\n          [submitErrKey]: undefined,\n        },\n      }))\n    }\n\n    return { hasErrored }\n  }\n\n  /**\n   * @private\n   */\n  validateAsync = async (\n    cause: ValidationCause,\n    formValidationResultPromise: Promise<\n      FieldErrorMapFromValidator<\n        TParentData,\n        TName,\n        TData,\n        TOnMount,\n        TOnChange,\n        TOnChangeAsync,\n        TOnBlur,\n        TOnBlurAsync,\n        TOnSubmit,\n        TOnSubmitAsync\n      >\n    >,\n  ) => {\n    const validates = getAsyncValidatorArray(cause, this.options)\n\n    // Get the field-specific error messages that are coming from the form's validator\n    const asyncFormValidationResults = await formValidationResultPromise\n\n    const linkedFields = this.getLinkedFields(cause)\n    const linkedFieldValidates = linkedFields.reduce(\n      (acc, field) => {\n        const fieldValidates = getAsyncValidatorArray(cause, field.options)\n        fieldValidates.forEach((validate) => {\n          ;(validate as any).field = field\n        })\n        return acc.concat(fieldValidates as never)\n      },\n      [] as Array<\n        AsyncValidator<any> & {\n          field: AnyFieldApi\n        }\n      >,\n    )\n\n    if (!this.state.meta.isValidating) {\n      this.setMeta((prev) => ({ ...prev, isValidating: true }))\n    }\n\n    for (const linkedField of linkedFields) {\n      linkedField.setMeta((prev) => ({ ...prev, isValidating: true }))\n    }\n\n    /**\n     * We have to use a for loop and generate our promises this way, otherwise it won't be sync\n     * when there are no validators needed to be run\n     */\n    const validatesPromises: Promise<ValidationError | undefined>[] = []\n    const linkedPromises: Promise<ValidationError | undefined>[] = []\n\n    const validateFieldAsyncFn = (\n      field: AnyFieldApi,\n      validateObj: AsyncValidator<any>,\n      promises: Promise<ValidationError | undefined>[],\n    ) => {\n      const errorMapKey = getErrorMapKey(validateObj.cause)\n      const fieldValidatorMeta = field.getInfo().validationMetaMap[errorMapKey]\n\n      fieldValidatorMeta?.lastAbortController.abort()\n      const controller = new AbortController()\n\n      this.getInfo().validationMetaMap[errorMapKey] = {\n        lastAbortController: controller,\n      }\n\n      promises.push(\n        new Promise<ValidationError | undefined>(async (resolve) => {\n          let rawError!: ValidationError | undefined\n          try {\n            rawError = await new Promise((rawResolve, rawReject) => {\n              if (this.timeoutIds.validations[validateObj.cause]) {\n                clearTimeout(this.timeoutIds.validations[validateObj.cause]!)\n              }\n\n              this.timeoutIds.validations[validateObj.cause] = setTimeout(\n                async () => {\n                  if (controller.signal.aborted) return rawResolve(undefined)\n                  try {\n                    rawResolve(\n                      await this.runValidator({\n                        validate: validateObj.validate,\n                        value: {\n                          value: field.store.state.value,\n                          fieldApi: field,\n                          signal: controller.signal,\n                          validationSource: 'field',\n                        },\n                        type: 'validateAsync',\n                      }),\n                    )\n                  } catch (e) {\n                    rawReject(e)\n                  }\n                },\n                validateObj.debounceMs,\n              )\n            })\n          } catch (e: unknown) {\n            rawError = e as ValidationError\n          }\n          if (controller.signal.aborted) return resolve(undefined)\n\n          const fieldLevelError = normalizeError(rawError)\n          const formLevelError =\n            asyncFormValidationResults[this.name]?.[errorMapKey]\n\n          const { newErrorValue, newSource } =\n            determineFieldLevelErrorSourceAndValue({\n              formLevelError,\n              fieldLevelError,\n            })\n\n          field.setMeta((prev) => {\n            return {\n              ...prev,\n              errorMap: {\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                ...prev?.errorMap,\n                [errorMapKey]: newErrorValue,\n              },\n              errorSourceMap: {\n                ...prev.errorSourceMap,\n                [errorMapKey]: newSource,\n              },\n            }\n          })\n\n          resolve(newErrorValue)\n        }),\n      )\n    }\n\n    // TODO: Dedupe this logic to reduce bundle size\n    for (const validateObj of validates) {\n      if (!validateObj.validate) continue\n      validateFieldAsyncFn(this, validateObj, validatesPromises)\n    }\n    for (const fieldValitateObj of linkedFieldValidates) {\n      if (!fieldValitateObj.validate) continue\n      validateFieldAsyncFn(\n        fieldValitateObj.field,\n        fieldValitateObj,\n        linkedPromises,\n      )\n    }\n\n    let results: ValidationError[] = []\n    if (validatesPromises.length || linkedPromises.length) {\n      results = await Promise.all(validatesPromises)\n      await Promise.all(linkedPromises)\n    }\n\n    this.setMeta((prev) => ({ ...prev, isValidating: false }))\n\n    for (const linkedField of linkedFields) {\n      linkedField.setMeta((prev) => ({ ...prev, isValidating: false }))\n    }\n\n    return results.filter(Boolean)\n  }\n\n  /**\n   * Validates the field value.\n   */\n  validate = (\n    cause: ValidationCause,\n    opts?: { skipFormValidation?: boolean },\n  ): ValidationError[] | Promise<ValidationError[]> => {\n    // If the field is pristine, do not validate\n    if (!this.state.meta.isTouched) return []\n\n    // Attempt to sync validate first\n    const { fieldsErrorMap } = opts?.skipFormValidation\n      ? { fieldsErrorMap: {} as never }\n      : this.form.validateSync(cause)\n    const { hasErrored } = this.validateSync(\n      cause,\n      fieldsErrorMap[this.name] ?? {},\n    )\n\n    if (hasErrored && !this.options.asyncAlways) {\n      this.getInfo().validationMetaMap[\n        getErrorMapKey(cause)\n      ]?.lastAbortController.abort()\n      return this.state.meta.errors\n    }\n\n    // No error? Attempt async validation\n    const formValidationResultPromise = opts?.skipFormValidation\n      ? Promise.resolve({})\n      : this.form.validateAsync(cause)\n    return this.validateAsync(cause, formValidationResultPromise)\n  }\n\n  /**\n   * Handles the change event.\n   */\n  handleChange = (updater: Updater<TData>) => {\n    this.setValue(updater)\n  }\n\n  /**\n   * Handles the blur event.\n   */\n  handleBlur = () => {\n    const prevTouched = this.state.meta.isTouched\n    if (!prevTouched) {\n      this.setMeta((prev) => ({ ...prev, isTouched: true }))\n      this.validate('change')\n    }\n    if (!this.state.meta.isBlurred) {\n      this.setMeta((prev) => ({ ...prev, isBlurred: true }))\n    }\n    this.validate('blur')\n\n    this.triggerOnBlurListener()\n  }\n\n  /**\n   * Updates the field's errorMap\n   */\n  setErrorMap(\n    errorMap: ValidationErrorMap<\n      UnwrapFieldValidateOrFn<TName, TOnMount, TFormOnMount>,\n      UnwrapFieldValidateOrFn<TName, TOnChange, TFormOnChange>,\n      UnwrapFieldAsyncValidateOrFn<TName, TOnChangeAsync, TFormOnChangeAsync>,\n      UnwrapFieldValidateOrFn<TName, TOnBlur, TFormOnBlur>,\n      UnwrapFieldAsyncValidateOrFn<TName, TOnBlurAsync, TFormOnBlurAsync>,\n      UnwrapFieldValidateOrFn<TName, TOnSubmit, TFormOnSubmit>,\n      UnwrapFieldAsyncValidateOrFn<TName, TOnSubmitAsync, TFormOnSubmitAsync>\n    >,\n  ) {\n    this.setMeta((prev) => ({\n      ...prev,\n      errorMap: {\n        ...prev.errorMap,\n        ...errorMap,\n      },\n    }))\n  }\n\n  /**\n   * Parses the field's value with the given schema and returns\n   * issues (if any). This method does NOT set any internal errors.\n   * @param schema The standard schema to parse this field's value with.\n   */\n  parseValueWithSchema = (schema: StandardSchemaV1<TData, unknown>) => {\n    return standardSchemaValidators.validate(\n      { value: this.state.value, validationSource: 'field' },\n      schema,\n    )\n  }\n\n  /**\n   * Parses the field's value with the given schema and returns\n   * issues (if any). This method does NOT set any internal errors.\n   * @param schema The standard schema to parse this field's value with.\n   */\n  parseValueWithSchemaAsync = (schema: StandardSchemaV1<TData, unknown>) => {\n    return standardSchemaValidators.validateAsync(\n      { value: this.state.value, validationSource: 'field' },\n      schema,\n    )\n  }\n\n  private triggerOnBlurListener() {\n    const formDebounceMs = this.form.options.listeners?.onBlurDebounceMs\n    if (formDebounceMs && formDebounceMs > 0) {\n      if (this.timeoutIds.formListeners.blur) {\n        clearTimeout(this.timeoutIds.formListeners.blur)\n      }\n\n      this.timeoutIds.formListeners.blur = setTimeout(() => {\n        this.form.options.listeners?.onBlur?.({\n          formApi: this.form,\n          fieldApi: this,\n        })\n      }, formDebounceMs)\n    } else {\n      this.form.options.listeners?.onBlur?.({\n        formApi: this.form,\n        fieldApi: this,\n      })\n    }\n\n    const fieldDebounceMs = this.options.listeners?.onBlurDebounceMs\n    if (fieldDebounceMs && fieldDebounceMs > 0) {\n      if (this.timeoutIds.listeners.blur) {\n        clearTimeout(this.timeoutIds.listeners.blur)\n      }\n\n      this.timeoutIds.listeners.blur = setTimeout(() => {\n        this.options.listeners?.onBlur?.({\n          value: this.state.value,\n          fieldApi: this,\n        })\n      }, fieldDebounceMs)\n    } else {\n      this.options.listeners?.onBlur?.({\n        value: this.state.value,\n        fieldApi: this,\n      })\n    }\n  }\n\n  private triggerOnChangeListener() {\n    const formDebounceMs = this.form.options.listeners?.onChangeDebounceMs\n    if (formDebounceMs && formDebounceMs > 0) {\n      if (this.timeoutIds.formListeners.blur) {\n        clearTimeout(this.timeoutIds.formListeners.blur)\n      }\n\n      this.timeoutIds.formListeners.blur = setTimeout(() => {\n        this.form.options.listeners?.onChange?.({\n          formApi: this.form,\n          fieldApi: this,\n        })\n      }, formDebounceMs)\n    } else {\n      this.form.options.listeners?.onChange?.({\n        formApi: this.form,\n        fieldApi: this,\n      })\n    }\n\n    const fieldDebounceMs = this.options.listeners?.onChangeDebounceMs\n    if (fieldDebounceMs && fieldDebounceMs > 0) {\n      if (this.timeoutIds.listeners.change) {\n        clearTimeout(this.timeoutIds.listeners.change)\n      }\n\n      this.timeoutIds.listeners.change = setTimeout(() => {\n        this.options.listeners?.onChange?.({\n          value: this.state.value,\n          fieldApi: this,\n        })\n      }, fieldDebounceMs)\n    } else {\n      this.options.listeners?.onChange?.({\n        value: this.state.value,\n        fieldApi: this,\n      })\n    }\n  }\n}\n\nfunction normalizeError(rawError?: ValidationError) {\n  if (rawError) {\n    return rawError\n  }\n\n  return undefined\n}\n\nfunction getErrorMapKey(cause: ValidationCause) {\n  switch (cause) {\n    case 'submit':\n      return 'onSubmit'\n    case 'blur':\n      return 'onBlur'\n    case 'mount':\n      return 'onMount'\n    case 'server':\n      return 'onServer'\n    case 'change':\n    default:\n      return 'onChange'\n  }\n}\n"],"names":["opts","_a","_b"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2765, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/use-sync-external-store%401.5.0_react%4019.1.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    function useSyncExternalStore$2(subscribe, getSnapshot) {\n      didWarnOld18Alpha ||\n        void 0 === React.startTransition ||\n        ((didWarnOld18Alpha = !0),\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"\n        ));\n      var value = getSnapshot();\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedValue = getSnapshot();\n        objectIs(value, cachedValue) ||\n          (console.error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          ),\n          (didWarnUncachedGetSnapshot = !0));\n      }\n      cachedValue = useState({\n        inst: { value: value, getSnapshot: getSnapshot }\n      });\n      var inst = cachedValue[0].inst,\n        forceUpdate = cachedValue[1];\n      useLayoutEffect(\n        function () {\n          inst.value = value;\n          inst.getSnapshot = getSnapshot;\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n        },\n        [subscribe, value, getSnapshot]\n      );\n      useEffect(\n        function () {\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          return subscribe(function () {\n            checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          });\n        },\n        [subscribe]\n      );\n      useDebugValue(value);\n      return value;\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      inst = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(inst, nextValue);\n      } catch (error) {\n        return !0;\n      }\n    }\n    function useSyncExternalStore$1(subscribe, getSnapshot) {\n      return getSnapshot();\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = require(\"react\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useState = React.useState,\n      useEffect = React.useEffect,\n      useLayoutEffect = React.useLayoutEffect,\n      useDebugValue = React.useDebugValue,\n      didWarnOld18Alpha = !1,\n      didWarnUncachedGetSnapshot = !1,\n      shim =\n        \"undefined\" === typeof window ||\n        \"undefined\" === typeof window.document ||\n        \"undefined\" === typeof window.document.createElement\n          ? useSyncExternalStore$1\n          : useSyncExternalStore$2;\n    exports.useSyncExternalStore =\n      void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC,GAGgB;AADjB;AACA,oEACE,AAAC;IACC,SAAS,GAAG,CAAC,EAAE,CAAC;QACd,OAAO,AAAC,MAAM,KAAK,CAAC,MAAM,KAAK,IAAI,MAAM,IAAI,CAAC,KAAO,MAAM,KAAK,MAAM;IACxE;IACA,SAAS,uBAAuB,SAAS,EAAE,WAAW;QACpD,qBACE,KAAK,MAAM,MAAM,eAAe,IAChC,CAAC,AAAC,oBAAoB,CAAC,GACvB,QAAQ,KAAK,CACX,iMACD;QACH,IAAI,QAAQ;QACZ,IAAI,CAAC,4BAA4B;YAC/B,IAAI,cAAc;YAClB,SAAS,OAAO,gBACd,CAAC,QAAQ,KAAK,CACZ,yEAED,6BAA6B,CAAC,CAAE;QACrC;QACA,cAAc,SAAS;YACrB,MAAM;gBAAE,OAAO;gBAAO,aAAa;YAAY;QACjD;QACA,IAAI,OAAO,WAAW,CAAC,EAAE,CAAC,IAAI,EAC5B,cAAc,WAAW,CAAC,EAAE;QAC9B;sDACE;gBACE,KAAK,KAAK,GAAG;gBACb,KAAK,WAAW,GAAG;gBACnB,uBAAuB,SAAS,YAAY;oBAAE,MAAM;gBAAK;YAC3D;qDACA;YAAC;YAAW;YAAO;SAAY;QAEjC;gDACE;gBACE,uBAAuB,SAAS,YAAY;oBAAE,MAAM;gBAAK;gBACzD,OAAO;wDAAU;wBACf,uBAAuB,SAAS,YAAY;4BAAE,MAAM;wBAAK;oBAC3D;;YACF;+CACA;YAAC;SAAU;QAEb,cAAc;QACd,OAAO;IACT;IACA,SAAS,uBAAuB,IAAI;QAClC,IAAI,oBAAoB,KAAK,WAAW;QACxC,OAAO,KAAK,KAAK;QACjB,IAAI;YACF,IAAI,YAAY;YAChB,OAAO,CAAC,SAAS,MAAM;QACzB,EAAE,OAAO,OAAO;YACd,OAAO,CAAC;QACV;IACF;IACA,SAAS,uBAAuB,SAAS,EAAE,WAAW;QACpD,OAAO;IACT;IACA,gBAAgB,OAAO,kCACrB,eACE,OAAO,+BAA+B,2BAA2B,IACnE,+BAA+B,2BAA2B,CAAC;IAC7D,IAAI,kMACF,WAAW,eAAe,OAAO,OAAO,EAAE,GAAG,OAAO,EAAE,GAAG,IACzD,WAAW,MAAM,QAAQ,EACzB,YAAY,MAAM,SAAS,EAC3B,kBAAkB,MAAM,eAAe,EACvC,gBAAgB,MAAM,aAAa,EACnC,oBAAoB,CAAC,GACrB,6BAA6B,CAAC,GAC9B,OACE,gBAAgB,OAAO,UACvB,gBAAgB,OAAO,OAAO,QAAQ,IACtC,gBAAgB,OAAO,OAAO,QAAQ,CAAC,aAAa,GAChD,yBACA;IACR,QAAQ,oBAAoB,GAC1B,KAAK,MAAM,MAAM,oBAAoB,GAAG,MAAM,oBAAoB,GAAG;IACvE,gBAAgB,OAAO,kCACrB,eACE,OAAO,+BAA+B,0BAA0B,IAClE,+BAA+B,0BAA0B,CAAC;AAC9D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2848, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/use-sync-external-store%401.5.0_react%4019.1.0/node_modules/use-sync-external-store/shim/index.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n"],"names":[],"mappings":"AAEI;AAFJ;AAEA,uCAA2C;;AAE3C,OAAO;IACL,OAAO,OAAO;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2860, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/use-sync-external-store%401.5.0_react%4019.1.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = require(\"react\"),\n      shim = require(\"use-sync-external-store/shim\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useSyncExternalStore = shim.useSyncExternalStore,\n      useRef = React.useRef,\n      useEffect = React.useEffect,\n      useMemo = React.useMemo,\n      useDebugValue = React.useDebugValue;\n    exports.useSyncExternalStoreWithSelector = function (\n      subscribe,\n      getSnapshot,\n      getServerSnapshot,\n      selector,\n      isEqual\n    ) {\n      var instRef = useRef(null);\n      if (null === instRef.current) {\n        var inst = { hasValue: !1, value: null };\n        instRef.current = inst;\n      } else inst = instRef.current;\n      instRef = useMemo(\n        function () {\n          function memoizedSelector(nextSnapshot) {\n            if (!hasMemo) {\n              hasMemo = !0;\n              memoizedSnapshot = nextSnapshot;\n              nextSnapshot = selector(nextSnapshot);\n              if (void 0 !== isEqual && inst.hasValue) {\n                var currentSelection = inst.value;\n                if (isEqual(currentSelection, nextSnapshot))\n                  return (memoizedSelection = currentSelection);\n              }\n              return (memoizedSelection = nextSnapshot);\n            }\n            currentSelection = memoizedSelection;\n            if (objectIs(memoizedSnapshot, nextSnapshot))\n              return currentSelection;\n            var nextSelection = selector(nextSnapshot);\n            if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n              return (memoizedSnapshot = nextSnapshot), currentSelection;\n            memoizedSnapshot = nextSnapshot;\n            return (memoizedSelection = nextSelection);\n          }\n          var hasMemo = !1,\n            memoizedSnapshot,\n            memoizedSelection,\n            maybeGetServerSnapshot =\n              void 0 === getServerSnapshot ? null : getServerSnapshot;\n          return [\n            function () {\n              return memoizedSelector(getSnapshot());\n            },\n            null === maybeGetServerSnapshot\n              ? void 0\n              : function () {\n                  return memoizedSelector(maybeGetServerSnapshot());\n                }\n          ];\n        },\n        [getSnapshot, getServerSnapshot, selector, isEqual]\n      );\n      var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n      useEffect(\n        function () {\n          inst.hasValue = !0;\n          inst.value = value;\n        },\n        [value]\n      );\n      useDebugValue(value);\n      return value;\n    };\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC,GAGgB;AADjB;AACA,oEACE,AAAC;IACC,SAAS,GAAG,CAAC,EAAE,CAAC;QACd,OAAO,AAAC,MAAM,KAAK,CAAC,MAAM,KAAK,IAAI,MAAM,IAAI,CAAC,KAAO,MAAM,KAAK,MAAM;IACxE;IACA,gBAAgB,OAAO,kCACrB,eACE,OAAO,+BAA+B,2BAA2B,IACnE,+BAA+B,2BAA2B,CAAC;IAC7D,IAAI,kMACF,wLACA,WAAW,eAAe,OAAO,OAAO,EAAE,GAAG,OAAO,EAAE,GAAG,IACzD,uBAAuB,KAAK,oBAAoB,EAChD,SAAS,MAAM,MAAM,EACrB,YAAY,MAAM,SAAS,EAC3B,UAAU,MAAM,OAAO,EACvB,gBAAgB,MAAM,aAAa;IACrC,QAAQ,gCAAgC,GAAG,SACzC,SAAS,EACT,WAAW,EACX,iBAAiB,EACjB,QAAQ,EACR,OAAO;QAEP,IAAI,UAAU,OAAO;QACrB,IAAI,SAAS,QAAQ,OAAO,EAAE;YAC5B,IAAI,OAAO;gBAAE,UAAU,CAAC;gBAAG,OAAO;YAAK;YACvC,QAAQ,OAAO,GAAG;QACpB,OAAO,OAAO,QAAQ,OAAO;QAC7B,UAAU,QACR;YACE,SAAS,iBAAiB,YAAY;gBACpC,IAAI,CAAC,SAAS;oBACZ,UAAU,CAAC;oBACX,mBAAmB;oBACnB,eAAe,SAAS;oBACxB,IAAI,KAAK,MAAM,WAAW,KAAK,QAAQ,EAAE;wBACvC,IAAI,mBAAmB,KAAK,KAAK;wBACjC,IAAI,QAAQ,kBAAkB,eAC5B,OAAQ,oBAAoB;oBAChC;oBACA,OAAQ,oBAAoB;gBAC9B;gBACA,mBAAmB;gBACnB,IAAI,SAAS,kBAAkB,eAC7B,OAAO;gBACT,IAAI,gBAAgB,SAAS;gBAC7B,IAAI,KAAK,MAAM,WAAW,QAAQ,kBAAkB,gBAClD,OAAO,AAAC,mBAAmB,cAAe;gBAC5C,mBAAmB;gBACnB,OAAQ,oBAAoB;YAC9B;YACA,IAAI,UAAU,CAAC,GACb,kBACA,mBACA,yBACE,KAAK,MAAM,oBAAoB,OAAO;YAC1C,OAAO;gBACL;oBACE,OAAO,iBAAiB;gBAC1B;gBACA,SAAS,yBACL,KAAK,IACL;oBACE,OAAO,iBAAiB;gBAC1B;aACL;QACH,GACA;YAAC;YAAa;YAAmB;YAAU;SAAQ;QAErD,IAAI,QAAQ,qBAAqB,WAAW,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE;QAClE,UACE;YACE,KAAK,QAAQ,GAAG,CAAC;YACjB,KAAK,KAAK,GAAG;QACf,GACA;YAAC;SAAM;QAET,cAAc;QACd,OAAO;IACT;IACA,gBAAgB,OAAO,kCACrB,eACE,OAAO,+BAA+B,0BAA0B,IAClE,+BAA+B,0BAA0B,CAAC;AAC9D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2936, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/use-sync-external-store%401.5.0_react%4019.1.0/node_modules/use-sync-external-store/shim/with-selector.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n"],"names":[],"mappings":"AAEI;AAFJ;AAEA,uCAA2C;;AAE3C,OAAO;IACL,OAAO,OAAO;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2949, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Breact-store%400.7.1_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/%40tanstack/react-store/src/index.ts"],"sourcesContent":["import { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js'\nimport type { Derived, Store } from '@tanstack/store'\n\nexport * from '@tanstack/store'\n\n/**\n * @private\n */\nexport type NoInfer<T> = [T][T extends any ? 0 : never]\n\nexport function useStore<TState, TSelected = NoInfer<TState>>(\n  store: Store<TState, any>,\n  selector?: (state: NoInfer<TState>) => TSelected,\n): TSelected\nexport function useStore<TState, TSelected = NoInfer<TState>>(\n  store: Derived<TState, any>,\n  selector?: (state: NoInfer<TState>) => TSelected,\n): TSelected\nexport function useStore<TState, TSelected = NoInfer<TState>>(\n  store: Store<TState, any> | Derived<TState, any>,\n  selector: (state: NoInfer<TState>) => TSelected = (d) => d as any,\n): TSelected {\n  const slice = useSyncExternalStoreWithSelector(\n    store.subscribe,\n    () => store.state,\n    () => store.state,\n    selector,\n    shallow,\n  )\n\n  return slice\n}\n\nexport function shallow<T>(objA: T, objB: T) {\n  if (Object.is(objA, objB)) {\n    return true\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false\n  }\n\n  if (objA instanceof Map && objB instanceof Map) {\n    if (objA.size !== objB.size) return false\n    for (const [k, v] of objA) {\n      if (!objB.has(k) || !Object.is(v, objB.get(k))) return false\n    }\n    return true\n  }\n\n  if (objA instanceof Set && objB instanceof Set) {\n    if (objA.size !== objB.size) return false\n    for (const v of objA) {\n      if (!objB.has(v)) return false\n    }\n    return true\n  }\n\n  const keysA = Object.keys(objA)\n  if (keysA.length !== Object.keys(objB).length) {\n    return false\n  }\n\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !Object.prototype.hasOwnProperty.call(objB, keysA[i] as string) ||\n      !Object.is(objA[keysA[i] as keyof T], objB[keysA[i] as keyof T])\n    ) {\n      return false\n    }\n  }\n  return true\n}\n"],"names":[],"mappings":";;;;;;;AAkBO,SAAS,SACd,KAAA,EACA,WAAkD,CAAC,IAAM,CAAA,EAC9C;IACX,MAAM,+RAAQ,mCAAA,EACZ,MAAM,SAAA;4DACN,IAAM,MAAM,KAAA;;4DACZ,IAAM,MAAM,KAAA;2DACZ,UACA;IAGK,OAAA;AACT;AAEgB,SAAA,QAAW,IAAA,EAAS,IAAA,EAAS;IAC3C,IAAI,OAAO,EAAA,CAAG,MAAM,IAAI,GAAG;QAClB,OAAA;IAAA;IAIP,IAAA,OAAO,SAAS,YAChB,SAAS,QACT,OAAO,SAAS,YAChB,SAAS,MACT;QACO,OAAA;IAAA;IAGL,IAAA,gBAAgB,OAAO,gBAAgB,KAAK;QAC9C,IAAI,KAAK,IAAA,KAAS,KAAK,IAAA,CAAa,CAAA,OAAA;QACpC,KAAA,MAAW,CAAC,GAAG,CAAC,CAAA,IAAK,KAAM;YACzB,IAAI,CAAC,KAAK,GAAA,CAAI,CAAC,KAAK,CAAC,OAAO,EAAA,CAAG,GAAG,KAAK,GAAA,CAAI,CAAC,CAAC,EAAU,CAAA,OAAA;QAAA;QAElD,OAAA;IAAA;IAGL,IAAA,gBAAgB,OAAO,gBAAgB,KAAK;QAC9C,IAAI,KAAK,IAAA,KAAS,KAAK,IAAA,CAAa,CAAA,OAAA;QACpC,KAAA,MAAW,KAAK,KAAM;YACpB,IAAI,CAAC,KAAK,GAAA,CAAI,CAAC,EAAU,CAAA,OAAA;QAAA;QAEpB,OAAA;IAAA;IAGH,MAAA,QAAQ,OAAO,IAAA,CAAK,IAAI;IAC9B,IAAI,MAAM,MAAA,KAAW,OAAO,IAAA,CAAK,IAAI,EAAE,MAAA,EAAQ;QACtC,OAAA;IAAA;IAGT,IAAA,IAAS,IAAI,GAAG,IAAI,MAAM,MAAA,EAAQ,IAAK;QAEnC,IAAA,CAAC,OAAO,SAAA,CAAU,cAAA,CAAe,IAAA,CAAK,MAAM,KAAA,CAAM,CAAC,CAAW,KAC9D,CAAC,OAAO,EAAA,CAAG,IAAA,CAAK,KAAA,CAAM,CAAC,CAAY,CAAA,EAAG,IAAA,CAAK,KAAA,CAAM,CAAC,CAAY,CAAC,GAC/D;YACO,OAAA;QAAA;IACT;IAEK,OAAA;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3004, "column": 0}, "map": {"version":3,"file":"useIsomorphicLayoutEffect.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Breact-form%401.12.0_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/%40tanstack/react-form/src/useIsomorphicLayoutEffect.ts"],"sourcesContent":["import { useEffect, useLayoutEffect } from 'react'\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\n"],"names":[],"mappings":";;;;;AAEO,MAAM,4BACX,OAAO,WAAW,2SAAc,kBAAA,gSAAkB,YAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3018, "column": 0}, "map": {"version":3,"file":"useField.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Breact-form%401.12.0_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/%40tanstack/react-form/src/useField.tsx"],"sourcesContent":["import React, { useMemo, useState } from 'react'\nimport { useStore } from '@tanstack/react-store'\nimport { FieldApi, functionalUpdate } from '@tanstack/form-core'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect'\nimport type {\n  DeepKeys,\n  DeepValue,\n  FieldAsyncValidateOrFn,\n  FieldValidateOrFn,\n  FormAsyncValidateOrFn,\n  FormValidateOrFn,\n} from '@tanstack/form-core'\nimport type { FunctionComponent, ReactNode } from 'react'\nimport type { UseFieldOptions, UseFieldOptionsBound } from './types'\n\ninterface ReactFieldApi<\n  TParentData,\n  TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChangeAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnBlurAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnServer extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TPatentSubmitMeta,\n> {\n  /**\n   * A pre-bound and type-safe sub-field component using this field as a root.\n   */\n  Field: FieldComponent<\n    TParentData,\n    TFormOnMount,\n    TFormOnChange,\n    TFormOnChangeAsync,\n    TFormOnBlur,\n    TFormOnBlurAsync,\n    TFormOnSubmit,\n    TFormOnSubmitAsync,\n    TFormOnServer,\n    TPatentSubmitMeta\n  >\n}\n\n/**\n * A type representing a hook for using a field in a form with the given form data type.\n *\n * A function that takes an optional object with a `name` property and field options, and returns a `FieldApi` instance for the specified field.\n */\nexport type UseField<\n  TParentData,\n  TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChangeAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnBlurAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnServer extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TPatentSubmitMeta,\n> = <\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n>(\n  opts: UseFieldOptionsBound<\n    TParentData,\n    TName,\n    TData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync\n  >,\n) => FieldApi<\n  TParentData,\n  TName,\n  TData,\n  TOnMount,\n  TOnChange,\n  TOnChangeAsync,\n  TOnBlur,\n  TOnBlurAsync,\n  TOnSubmit,\n  TOnSubmitAsync,\n  TFormOnMount,\n  TFormOnChange,\n  TFormOnChangeAsync,\n  TFormOnBlur,\n  TFormOnBlurAsync,\n  TFormOnSubmit,\n  TFormOnSubmitAsync,\n  TFormOnServer,\n  TPatentSubmitMeta\n>\n\n/**\n * A hook for managing a field in a form.\n * @param opts An object with field options.\n *\n * @returns The `FieldApi` instance for the specified field.\n */\nexport function useField<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChangeAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnBlurAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnServer extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TPatentSubmitMeta,\n>(\n  opts: UseFieldOptions<\n    TParentData,\n    TName,\n    TData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TFormOnMount,\n    TFormOnChange,\n    TFormOnChangeAsync,\n    TFormOnBlur,\n    TFormOnBlurAsync,\n    TFormOnSubmit,\n    TFormOnSubmitAsync,\n    TFormOnServer,\n    TPatentSubmitMeta\n  >,\n) {\n  const [fieldApi] = useState(() => {\n    const api = new FieldApi({\n      ...opts,\n      form: opts.form,\n      name: opts.name,\n    })\n\n    const extendedApi: typeof api &\n      ReactFieldApi<\n        TParentData,\n        TFormOnMount,\n        TFormOnChange,\n        TFormOnChangeAsync,\n        TFormOnBlur,\n        TFormOnBlurAsync,\n        TFormOnSubmit,\n        TFormOnSubmitAsync,\n        TFormOnServer,\n        TPatentSubmitMeta\n      > = api as never\n\n    extendedApi.Field = Field as never\n\n    return extendedApi\n  })\n\n  useIsomorphicLayoutEffect(fieldApi.mount, [fieldApi])\n\n  /**\n   * fieldApi.update should not have any side effects. Think of it like a `useRef`\n   * that we need to keep updated every render with the most up-to-date information.\n   */\n  useIsomorphicLayoutEffect(() => {\n    fieldApi.update(opts)\n  })\n\n  useStore(\n    fieldApi.store,\n    opts.mode === 'array'\n      ? (state) => {\n          return [\n            state.meta,\n            Object.keys((state.value as unknown) ?? []).length,\n          ]\n        }\n      : undefined,\n  )\n\n  return fieldApi\n}\n\n/**\n * @param children A render function that takes a field API instance and returns a React element.\n */\ninterface FieldComponentProps<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChangeAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnBlurAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnServer extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TPatentSubmitMeta,\n  ExtendedApi = {},\n> extends UseFieldOptions<\n    TParentData,\n    TName,\n    TData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TFormOnMount,\n    TFormOnChange,\n    TFormOnChangeAsync,\n    TFormOnBlur,\n    TFormOnBlurAsync,\n    TFormOnSubmit,\n    TFormOnSubmitAsync,\n    TFormOnServer,\n    TPatentSubmitMeta\n  > {\n  children: (\n    fieldApi: FieldApi<\n      TParentData,\n      TName,\n      TData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TFormOnMount,\n      TFormOnChange,\n      TFormOnChangeAsync,\n      TFormOnBlur,\n      TFormOnBlurAsync,\n      TFormOnSubmit,\n      TFormOnSubmitAsync,\n      TFormOnServer,\n      TPatentSubmitMeta\n    > &\n      ExtendedApi,\n  ) => ReactNode\n}\n\ninterface FieldComponentBoundProps<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChangeAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnBlurAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnServer extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TPatentSubmitMeta,\n  ExtendedApi = {},\n> extends UseFieldOptionsBound<\n    TParentData,\n    TName,\n    TData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync\n  > {\n  children: (\n    fieldApi: FieldApi<\n      TParentData,\n      TName,\n      TData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TFormOnMount,\n      TFormOnChange,\n      TFormOnChangeAsync,\n      TFormOnBlur,\n      TFormOnBlurAsync,\n      TFormOnSubmit,\n      TFormOnSubmitAsync,\n      TFormOnServer,\n      TPatentSubmitMeta\n    > &\n      ExtendedApi,\n  ) => ReactNode\n}\n\n/**\n * A type alias representing a field component for a specific form data type.\n */\nexport type FieldComponent<\n  in out TParentData,\n  in out TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  in out TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  in out TFormOnChangeAsync extends\n    | undefined\n    | FormAsyncValidateOrFn<TParentData>,\n  in out TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  in out TFormOnBlurAsync extends\n    | undefined\n    | FormAsyncValidateOrFn<TParentData>,\n  in out TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  in out TFormOnSubmitAsync extends\n    | undefined\n    | FormAsyncValidateOrFn<TParentData>,\n  in out TFormOnServer extends undefined | FormAsyncValidateOrFn<TParentData>,\n  in out TPatentSubmitMeta,\n  in out ExtendedApi = {},\n> = <\n  const TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n>({\n  children,\n  ...fieldOptions\n}: FieldComponentBoundProps<\n  TParentData,\n  TName,\n  TData,\n  TOnMount,\n  TOnChange,\n  TOnChangeAsync,\n  TOnBlur,\n  TOnBlurAsync,\n  TOnSubmit,\n  TOnSubmitAsync,\n  TFormOnMount,\n  TFormOnChange,\n  TFormOnChangeAsync,\n  TFormOnBlur,\n  TFormOnBlurAsync,\n  TFormOnSubmit,\n  TFormOnSubmitAsync,\n  TFormOnServer,\n  TPatentSubmitMeta,\n  ExtendedApi\n>) => ReactNode\n\n/**\n * A function component that takes field options and a render function as children and returns a React component.\n *\n * The `Field` component uses the `useField` hook internally to manage the field instance.\n */\nexport const Field = (<\n  TParentData,\n  TName extends DeepKeys<TParentData>,\n  TData extends DeepValue<TParentData, TName>,\n  TOnMount extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChange extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnChangeAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnBlur extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnBlurAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TOnSubmit extends undefined | FieldValidateOrFn<TParentData, TName, TData>,\n  TOnSubmitAsync extends\n    | undefined\n    | FieldAsyncValidateOrFn<TParentData, TName, TData>,\n  TFormOnMount extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChange extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnChangeAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnBlur extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnBlurAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnSubmit extends undefined | FormValidateOrFn<TParentData>,\n  TFormOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TFormOnServer extends undefined | FormAsyncValidateOrFn<TParentData>,\n  TPatentSubmitMeta,\n>({\n  children,\n  ...fieldOptions\n}: FieldComponentProps<\n  TParentData,\n  TName,\n  TData,\n  TOnMount,\n  TOnChange,\n  TOnChangeAsync,\n  TOnBlur,\n  TOnBlurAsync,\n  TOnSubmit,\n  TOnSubmitAsync,\n  TFormOnMount,\n  TFormOnChange,\n  TFormOnChangeAsync,\n  TFormOnBlur,\n  TFormOnBlurAsync,\n  TFormOnSubmit,\n  TFormOnSubmitAsync,\n  TFormOnServer,\n  TPatentSubmitMeta\n>): ReactNode => {\n  const fieldApi = useField(fieldOptions as any)\n\n  const jsxToDisplay = useMemo(\n    () => functionalUpdate(children, fieldApi as any),\n    /**\n     * The reason this exists is to fix an issue with the React Compiler.\n     * Namely, functionalUpdate is memoized where it checks for `fieldApi`, which is a static type.\n     * This means that when `state.value` changes, it does not trigger a re-render. The useMemo explicitly fixes this problem\n     */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [children, fieldApi, fieldApi.state.value, fieldApi.state.meta],\n  )\n  return (<>{jsxToDisplay}</>) as never\n}) satisfies FunctionComponent<\n  FieldComponentProps<\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any\n  >\n>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAqHO,SAAS,SA2Bd,IAAA,EAqBA;IACA,MAAM,CAAC,QAAQ,CAAA,oSAAI,WAAA;6BAAS,MAAM;YAC1B,MAAA,MAAM,qPAAI,WAAA,CAAS;gBACvB,GAAG,IAAA;gBACH,MAAM,KAAK,IAAA;gBACX,MAAM,KAAK,IAAA;YAAA,CACZ;YAED,MAAM,cAYA;YAEN,YAAY,KAAA,GAAQ;YAEb,OAAA;QAAA,CACR;;IAED,CAAA,GAAA,gVAAA,CAAA,4BAAA,EAA0B,SAAS,KAAA,EAAO;QAAC,QAAQ;KAAC;IAMpD,CAAA,GAAA,gVAAA,CAAA,4BAAA;8CAA0B,MAAM;YAC9B,SAAS,MAAA,CAAO,IAAI;QAAA,CACrB;;IAED,CAAA,GAAA,6UAAA,CAAA,WAAA,EACE,SAAS,KAAA,EACT,KAAK,IAAA,KAAS;6BACV,CAAC,UAAU;YACF,OAAA;gBACL,MAAM,IAAA;gBACN,OAAO,IAAA,CAAM,MAAM,KAAA,IAAqB,CAAE,CAAA,EAAE,MAAA;aAC9C;QAAA;8BAEF,KAAA;IAGC,OAAA;AACT;AAoNO,MAAM,QAAS,CA0BpB,EACA,QAAA,EACA,GAAG,cACL,KAoBiB;IACT,MAAA,WAAW,SAAS,YAAmB;IAE7C,MAAM,gTAAe,UAAA;uCACnB,sPAAM,mBAAA,EAAiB,UAAU,QAAe;sCAAA;;;;KAAA,GAAA,uDAAA;IAOhD;QAAC;QAAU;QAAU,SAAS,KAAA,CAAM,KAAA;QAAO,SAAS,KAAA,CAAM,IAAI;KAAA;IAEhE,OAAA,aAAA,GAAA,CAAA,GAAA,qSAAA,CAAA,MAAA,EAAA,qSAAA,CAAA,WAAA,EAAA;QAAW,UAAa;IAAA,CAAA;AAC1B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3091, "column": 0}, "map": {"version":3,"file":"useForm.js","sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/%40tanstack%2Breact-form%401.12.0_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/%40tanstack/react-form/src/useForm.tsx"],"sourcesContent":["import { FormApi, functionalUpdate } from '@tanstack/form-core'\nimport { useStore } from '@tanstack/react-store'\nimport React, { useState } from 'react'\nimport { Field } from './useField'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect'\nimport type {\n  AnyFormApi,\n  AnyFormState,\n  FormAsyncValidateOrFn,\n  FormOptions,\n  FormState,\n  FormValidateOrFn,\n} from '@tanstack/form-core'\nimport type { PropsWithChildren, ReactNode } from 'react'\nimport type { FieldComponent } from './useField'\nimport type { NoInfer } from '@tanstack/react-store'\n\n/**\n * Fields that are added onto the `FormAPI` from `@tanstack/form-core` and returned from `useForm`\n */\nexport interface ReactFormApi<\n  in out TFormData,\n  in out TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  in out TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TOnServer extends undefined | FormAsyncValidateOrFn<TFormData>,\n  in out TSubmitMeta,\n> {\n  /**\n   * A React component to render form fields. With this, you can render and manage individual form fields.\n   */\n  Field: FieldComponent<\n    TFormData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TOnServer,\n    TSubmitMeta\n  >\n  /**\n   * A `Subscribe` function that allows you to listen and react to changes in the form's state. It's especially useful when you need to execute side effects or render specific components in response to state updates.\n   */\n  Subscribe: <\n    TSelected = NoInfer<\n      FormState<\n        TFormData,\n        TOnMount,\n        TOnChange,\n        TOnChangeAsync,\n        TOnBlur,\n        TOnBlurAsync,\n        TOnSubmit,\n        TOnSubmitAsync,\n        TOnServer\n      >\n    >,\n  >(props: {\n    selector?: (\n      state: NoInfer<\n        FormState<\n          TFormData,\n          TOnMount,\n          TOnChange,\n          TOnChangeAsync,\n          TOnBlur,\n          TOnBlurAsync,\n          TOnSubmit,\n          TOnSubmitAsync,\n          TOnServer\n        >\n      >,\n    ) => TSelected\n    children: ((state: NoInfer<TSelected>) => ReactNode) | ReactNode\n  }) => ReactNode\n}\n\n/**\n * An extended version of the `FormApi` class that includes React-specific functionalities from `ReactFormApi`\n */\nexport type ReactFormExtendedApi<\n  TFormData,\n  TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnServer extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TSubmitMeta,\n> = FormApi<\n  TFormData,\n  TOnMount,\n  TOnChange,\n  TOnChangeAsync,\n  TOnBlur,\n  TOnBlurAsync,\n  TOnSubmit,\n  TOnSubmitAsync,\n  TOnServer,\n  TSubmitMeta\n> &\n  ReactFormApi<\n    TFormData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TOnServer,\n    TSubmitMeta\n  >\n\nfunction LocalSubscribe({\n  form,\n  selector,\n  children,\n}: PropsWithChildren<{\n  form: AnyFormApi\n  selector: (state: AnyFormState) => AnyFormState\n}>) {\n  const data = useStore(form.store, selector)\n\n  return functionalUpdate(children, data)\n}\n\n/**\n * A custom React Hook that returns an extended instance of the `FormApi` class.\n *\n * This API encapsulates all the necessary functionalities related to the form. It allows you to manage form state, handle submissions, and interact with form fields\n */\nexport function useForm<\n  TFormData,\n  TOnMount extends undefined | FormValidateOrFn<TFormData>,\n  TOnChange extends undefined | FormValidateOrFn<TFormData>,\n  TOnChangeAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnBlur extends undefined | FormValidateOrFn<TFormData>,\n  TOnBlurAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnSubmit extends undefined | FormValidateOrFn<TFormData>,\n  TOnSubmitAsync extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TOnServer extends undefined | FormAsyncValidateOrFn<TFormData>,\n  TSubmitMeta,\n>(\n  opts?: FormOptions<\n    TFormData,\n    TOnMount,\n    TOnChange,\n    TOnChangeAsync,\n    TOnBlur,\n    TOnBlurAsync,\n    TOnSubmit,\n    TOnSubmitAsync,\n    TOnServer,\n    TSubmitMeta\n  >,\n) {\n  const [formApi] = useState(() => {\n    const api = new FormApi<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer,\n      TSubmitMeta\n    >(opts)\n\n    const extendedApi: ReactFormExtendedApi<\n      TFormData,\n      TOnMount,\n      TOnChange,\n      TOnChangeAsync,\n      TOnBlur,\n      TOnBlurAsync,\n      TOnSubmit,\n      TOnSubmitAsync,\n      TOnServer,\n      TSubmitMeta\n    > = api as never\n    extendedApi.Field = function APIField(props) {\n      return <Field {...props} form={api} />\n    }\n    extendedApi.Subscribe = (props: any) => {\n      return (\n        <LocalSubscribe\n          form={api}\n          selector={props.selector}\n          children={props.children}\n        />\n      )\n    }\n\n    return extendedApi\n  })\n\n  useIsomorphicLayoutEffect(formApi.mount, [])\n\n  useStore(formApi.store, (state) => state.isSubmitting)\n\n  /**\n   * formApi.update should not have any side effects. Think of it like a `useRef`\n   * that we need to keep updated every render with the most up-to-date information.\n   */\n  useIsomorphicLayoutEffect(() => {\n    formApi.update(opts)\n  })\n\n  return formApi\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AA2HA,SAAS,eAAe,EACtB,IAAA,EACA,QAAA,EACA,QAAA,EACF,EAGI;IACF,MAAM,yVAAO,WAAA,EAAS,KAAK,KAAA,EAAO,QAAQ;IAEnC,yPAAA,mBAAA,EAAiB,UAAU,IAAI;AACxC;AAOO,SAAS,QAYd,IAAA,EAYA;IACA,MAAM,CAAC,OAAO,CAAA,IAAI,2SAAA;4BAAS,MAAM;YACzB,MAAA,MAAM,oPAAI,UAAA,CAWd,IAAI;YAEN,MAAM,cAWF;YACQ,YAAA,KAAA,GAAQ,SAAS,SAAS,KAAA,EAAO;gBAC3C,OAAQ,aAAA,GAAA,CAAA,GAAA,qSAAA,CAAA,MAAA,kUAAA,QAAA,EAAA;oBAAO,GAAG,KAAA;oBAAO,MAAM;gBAAA,CAAK;YACtC;YACY,YAAA,SAAA;oCAAY,CAAC,UAAe;oBAEpC,OAAA,aAAA,GAAA,CAAA,GAAA,qSAAA,CAAA,MAAA,EAAC,gBAAA;wBACC,MAAM;wBACN,UAAU,MAAM,QAAA;wBAChB,UAAU,MAAM,QAAA;oBAAA;gBAGtB;;YAEO,OAAA;QAAA,CACR;;IAEyB,CAAA,GAAA,gVAAA,CAAA,4BAAA,EAAA,QAAQ,KAAA,EAAO,EAAE;IAE3C,CAAA,GAAA,6UAAA,CAAA,WAAA,EAAS,QAAQ,KAAA;4BAAO,CAAC,QAAU,MAAM,YAAY;;IAMrD,CAAA,GAAA,gVAAA,CAAA,4BAAA;6CAA0B,MAAM;YAC9B,QAAQ,MAAA,CAAO,IAAI;QAAA,CACpB;;IAEM,OAAA;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3153, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/node_modules/.pnpm/sonner%402.0.3_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/sonner/dist/index.mjs"],"sourcesContent":["'use client';\nfunction __insertCSS(code) {\n  if (!code || typeof document == 'undefined') return\n  let head = document.head || document.getElementsByTagName('head')[0]\n  let style = document.createElement('style')\n  style.type = 'text/css'\n  head.appendChild(style)\n  ;style.styleSheet ? (style.styleSheet.cssText = code) : style.appendChild(document.createTextNode(code))\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst getAsset = (type)=>{\n    switch(type){\n        case 'success':\n            return SuccessIcon;\n        case 'info':\n            return InfoIcon;\n        case 'warning':\n            return WarningIcon;\n        case 'error':\n            return ErrorIcon;\n        default:\n            return null;\n    }\n};\nconst bars = Array(12).fill(0);\nconst Loader = ({ visible, className })=>{\n    return /*#__PURE__*/ React.createElement(\"div\", {\n        className: [\n            'sonner-loading-wrapper',\n            className\n        ].filter(Boolean).join(' '),\n        \"data-visible\": visible\n    }, /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"sonner-spinner\"\n    }, bars.map((_, i)=>/*#__PURE__*/ React.createElement(\"div\", {\n            className: \"sonner-loading-bar\",\n            key: `spinner-bar-${i}`\n        }))));\n};\nconst SuccessIcon = /*#__PURE__*/ React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    height: \"20\",\n    width: \"20\"\n}, /*#__PURE__*/ React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\",\n    clipRule: \"evenodd\"\n}));\nconst WarningIcon = /*#__PURE__*/ React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    height: \"20\",\n    width: \"20\"\n}, /*#__PURE__*/ React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z\",\n    clipRule: \"evenodd\"\n}));\nconst InfoIcon = /*#__PURE__*/ React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    height: \"20\",\n    width: \"20\"\n}, /*#__PURE__*/ React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z\",\n    clipRule: \"evenodd\"\n}));\nconst ErrorIcon = /*#__PURE__*/ React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    height: \"20\",\n    width: \"20\"\n}, /*#__PURE__*/ React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z\",\n    clipRule: \"evenodd\"\n}));\nconst CloseIcon = /*#__PURE__*/ React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"1.5\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n}, /*#__PURE__*/ React.createElement(\"line\", {\n    x1: \"18\",\n    y1: \"6\",\n    x2: \"6\",\n    y2: \"18\"\n}), /*#__PURE__*/ React.createElement(\"line\", {\n    x1: \"6\",\n    y1: \"6\",\n    x2: \"18\",\n    y2: \"18\"\n}));\n\nconst useIsDocumentHidden = ()=>{\n    const [isDocumentHidden, setIsDocumentHidden] = React.useState(document.hidden);\n    React.useEffect(()=>{\n        const callback = ()=>{\n            setIsDocumentHidden(document.hidden);\n        };\n        document.addEventListener('visibilitychange', callback);\n        return ()=>window.removeEventListener('visibilitychange', callback);\n    }, []);\n    return isDocumentHidden;\n};\n\nlet toastsCounter = 1;\nclass Observer {\n    constructor(){\n        // We use arrow functions to maintain the correct `this` reference\n        this.subscribe = (subscriber)=>{\n            this.subscribers.push(subscriber);\n            return ()=>{\n                const index = this.subscribers.indexOf(subscriber);\n                this.subscribers.splice(index, 1);\n            };\n        };\n        this.publish = (data)=>{\n            this.subscribers.forEach((subscriber)=>subscriber(data));\n        };\n        this.addToast = (data)=>{\n            this.publish(data);\n            this.toasts = [\n                ...this.toasts,\n                data\n            ];\n        };\n        this.create = (data)=>{\n            var _data_id;\n            const { message, ...rest } = data;\n            const id = typeof (data == null ? void 0 : data.id) === 'number' || ((_data_id = data.id) == null ? void 0 : _data_id.length) > 0 ? data.id : toastsCounter++;\n            const alreadyExists = this.toasts.find((toast)=>{\n                return toast.id === id;\n            });\n            const dismissible = data.dismissible === undefined ? true : data.dismissible;\n            if (this.dismissedToasts.has(id)) {\n                this.dismissedToasts.delete(id);\n            }\n            if (alreadyExists) {\n                this.toasts = this.toasts.map((toast)=>{\n                    if (toast.id === id) {\n                        this.publish({\n                            ...toast,\n                            ...data,\n                            id,\n                            title: message\n                        });\n                        return {\n                            ...toast,\n                            ...data,\n                            id,\n                            dismissible,\n                            title: message\n                        };\n                    }\n                    return toast;\n                });\n            } else {\n                this.addToast({\n                    title: message,\n                    ...rest,\n                    dismissible,\n                    id\n                });\n            }\n            return id;\n        };\n        this.dismiss = (id)=>{\n            if (id) {\n                this.dismissedToasts.add(id);\n                requestAnimationFrame(()=>this.subscribers.forEach((subscriber)=>subscriber({\n                            id,\n                            dismiss: true\n                        })));\n            } else {\n                this.toasts.forEach((toast)=>{\n                    this.subscribers.forEach((subscriber)=>subscriber({\n                            id: toast.id,\n                            dismiss: true\n                        }));\n                });\n            }\n            return id;\n        };\n        this.message = (message, data)=>{\n            return this.create({\n                ...data,\n                message\n            });\n        };\n        this.error = (message, data)=>{\n            return this.create({\n                ...data,\n                message,\n                type: 'error'\n            });\n        };\n        this.success = (message, data)=>{\n            return this.create({\n                ...data,\n                type: 'success',\n                message\n            });\n        };\n        this.info = (message, data)=>{\n            return this.create({\n                ...data,\n                type: 'info',\n                message\n            });\n        };\n        this.warning = (message, data)=>{\n            return this.create({\n                ...data,\n                type: 'warning',\n                message\n            });\n        };\n        this.loading = (message, data)=>{\n            return this.create({\n                ...data,\n                type: 'loading',\n                message\n            });\n        };\n        this.promise = (promise, data)=>{\n            if (!data) {\n                // Nothing to show\n                return;\n            }\n            let id = undefined;\n            if (data.loading !== undefined) {\n                id = this.create({\n                    ...data,\n                    promise,\n                    type: 'loading',\n                    message: data.loading,\n                    description: typeof data.description !== 'function' ? data.description : undefined\n                });\n            }\n            const p = Promise.resolve(promise instanceof Function ? promise() : promise);\n            let shouldDismiss = id !== undefined;\n            let result;\n            const originalPromise = p.then(async (response)=>{\n                result = [\n                    'resolve',\n                    response\n                ];\n                const isReactElementResponse = React.isValidElement(response);\n                if (isReactElementResponse) {\n                    shouldDismiss = false;\n                    this.create({\n                        id,\n                        type: 'default',\n                        message: response\n                    });\n                } else if (isHttpResponse(response) && !response.ok) {\n                    shouldDismiss = false;\n                    const promiseData = typeof data.error === 'function' ? await data.error(`HTTP error! status: ${response.status}`) : data.error;\n                    const description = typeof data.description === 'function' ? await data.description(`HTTP error! status: ${response.status}`) : data.description;\n                    const isExtendedResult = typeof promiseData === 'object' && !React.isValidElement(promiseData);\n                    const toastSettings = isExtendedResult ? promiseData : {\n                        message: promiseData\n                    };\n                    this.create({\n                        id,\n                        type: 'error',\n                        description,\n                        ...toastSettings\n                    });\n                } else if (response instanceof Error) {\n                    shouldDismiss = false;\n                    const promiseData = typeof data.error === 'function' ? await data.error(response) : data.error;\n                    const description = typeof data.description === 'function' ? await data.description(response) : data.description;\n                    const isExtendedResult = typeof promiseData === 'object' && !React.isValidElement(promiseData);\n                    const toastSettings = isExtendedResult ? promiseData : {\n                        message: promiseData\n                    };\n                    this.create({\n                        id,\n                        type: 'error',\n                        description,\n                        ...toastSettings\n                    });\n                } else if (data.success !== undefined) {\n                    shouldDismiss = false;\n                    const promiseData = typeof data.success === 'function' ? await data.success(response) : data.success;\n                    const description = typeof data.description === 'function' ? await data.description(response) : data.description;\n                    const isExtendedResult = typeof promiseData === 'object' && !React.isValidElement(promiseData);\n                    const toastSettings = isExtendedResult ? promiseData : {\n                        message: promiseData\n                    };\n                    this.create({\n                        id,\n                        type: 'success',\n                        description,\n                        ...toastSettings\n                    });\n                }\n            }).catch(async (error)=>{\n                result = [\n                    'reject',\n                    error\n                ];\n                if (data.error !== undefined) {\n                    shouldDismiss = false;\n                    const promiseData = typeof data.error === 'function' ? await data.error(error) : data.error;\n                    const description = typeof data.description === 'function' ? await data.description(error) : data.description;\n                    const isExtendedResult = typeof promiseData === 'object' && !React.isValidElement(promiseData);\n                    const toastSettings = isExtendedResult ? promiseData : {\n                        message: promiseData\n                    };\n                    this.create({\n                        id,\n                        type: 'error',\n                        description,\n                        ...toastSettings\n                    });\n                }\n            }).finally(()=>{\n                if (shouldDismiss) {\n                    // Toast is still in load state (and will be indefinitely — dismiss it)\n                    this.dismiss(id);\n                    id = undefined;\n                }\n                data.finally == null ? void 0 : data.finally.call(data);\n            });\n            const unwrap = ()=>new Promise((resolve, reject)=>originalPromise.then(()=>result[0] === 'reject' ? reject(result[1]) : resolve(result[1])).catch(reject));\n            if (typeof id !== 'string' && typeof id !== 'number') {\n                // cannot Object.assign on undefined\n                return {\n                    unwrap\n                };\n            } else {\n                return Object.assign(id, {\n                    unwrap\n                });\n            }\n        };\n        this.custom = (jsx, data)=>{\n            const id = (data == null ? void 0 : data.id) || toastsCounter++;\n            this.create({\n                jsx: jsx(id),\n                id,\n                ...data\n            });\n            return id;\n        };\n        this.getActiveToasts = ()=>{\n            return this.toasts.filter((toast)=>!this.dismissedToasts.has(toast.id));\n        };\n        this.subscribers = [];\n        this.toasts = [];\n        this.dismissedToasts = new Set();\n    }\n}\nconst ToastState = new Observer();\n// bind this to the toast function\nconst toastFunction = (message, data)=>{\n    const id = (data == null ? void 0 : data.id) || toastsCounter++;\n    ToastState.addToast({\n        title: message,\n        ...data,\n        id\n    });\n    return id;\n};\nconst isHttpResponse = (data)=>{\n    return data && typeof data === 'object' && 'ok' in data && typeof data.ok === 'boolean' && 'status' in data && typeof data.status === 'number';\n};\nconst basicToast = toastFunction;\nconst getHistory = ()=>ToastState.toasts;\nconst getToasts = ()=>ToastState.getActiveToasts();\n// We use `Object.assign` to maintain the correct types as we would lose them otherwise\nconst toast = Object.assign(basicToast, {\n    success: ToastState.success,\n    info: ToastState.info,\n    warning: ToastState.warning,\n    error: ToastState.error,\n    custom: ToastState.custom,\n    message: ToastState.message,\n    promise: ToastState.promise,\n    dismiss: ToastState.dismiss,\n    loading: ToastState.loading\n}, {\n    getHistory,\n    getToasts\n});\n\n__insertCSS(\"[data-sonner-toaster][dir=ltr],html[dir=ltr]{--toast-icon-margin-start:-3px;--toast-icon-margin-end:4px;--toast-svg-margin-start:-1px;--toast-svg-margin-end:0px;--toast-button-margin-start:auto;--toast-button-margin-end:0;--toast-close-button-start:0;--toast-close-button-end:unset;--toast-close-button-transform:translate(-35%, -35%)}[data-sonner-toaster][dir=rtl],html[dir=rtl]{--toast-icon-margin-start:4px;--toast-icon-margin-end:-3px;--toast-svg-margin-start:0px;--toast-svg-margin-end:-1px;--toast-button-margin-start:0;--toast-button-margin-end:auto;--toast-close-button-start:unset;--toast-close-button-end:0;--toast-close-button-transform:translate(35%, -35%)}[data-sonner-toaster]{position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1:hsl(0, 0%, 99%);--gray2:hsl(0, 0%, 97.3%);--gray3:hsl(0, 0%, 95.1%);--gray4:hsl(0, 0%, 93%);--gray5:hsl(0, 0%, 90.9%);--gray6:hsl(0, 0%, 88.7%);--gray7:hsl(0, 0%, 85.8%);--gray8:hsl(0, 0%, 78%);--gray9:hsl(0, 0%, 56.1%);--gray10:hsl(0, 0%, 52.3%);--gray11:hsl(0, 0%, 43.5%);--gray12:hsl(0, 0%, 9%);--border-radius:8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:0;z-index:999999999;transition:transform .4s ease}[data-sonner-toaster][data-lifted=true]{transform:translateY(-8px)}@media (hover:none) and (pointer:coarse){[data-sonner-toaster][data-lifted=true]{transform:none}}[data-sonner-toaster][data-x-position=right]{right:var(--offset-right)}[data-sonner-toaster][data-x-position=left]{left:var(--offset-left)}[data-sonner-toaster][data-x-position=center]{left:50%;transform:translateX(-50%)}[data-sonner-toaster][data-y-position=top]{top:var(--offset-top)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--offset-bottom)}[data-sonner-toast]{--y:translateY(100%);--lift-amount:calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:0;overflow-wrap:anywhere}[data-sonner-toast][data-styled=true]{padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px rgba(0,0,0,.1);width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}[data-sonner-toast]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-y-position=top]{top:0;--y:translateY(-100%);--lift:1;--lift-amount:calc(1 * var(--gap))}[data-sonner-toast][data-y-position=bottom]{bottom:0;--y:translateY(100%);--lift:-1;--lift-amount:calc(var(--lift) * var(--gap))}[data-sonner-toast][data-styled=true] [data-description]{font-weight:400;line-height:1.4;color:#3f3f3f}[data-rich-colors=true][data-sonner-toast][data-styled=true] [data-description]{color:inherit}[data-sonner-toaster][data-sonner-theme=dark] [data-description]{color:#e8e8e8}[data-sonner-toast][data-styled=true] [data-title]{font-weight:500;line-height:1.5;color:inherit}[data-sonner-toast][data-styled=true] [data-icon]{display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}[data-sonner-toast][data-promise=true] [data-icon]>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}[data-sonner-toast][data-styled=true] [data-icon]>*{flex-shrink:0}[data-sonner-toast][data-styled=true] [data-icon] svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}[data-sonner-toast][data-styled=true] [data-content]{display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;font-weight:500;cursor:pointer;outline:0;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}[data-sonner-toast][data-styled=true] [data-button]:focus-visible{box-shadow:0 0 0 2px rgba(0,0,0,.4)}[data-sonner-toast][data-styled=true] [data-button]:first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}[data-sonner-toast][data-styled=true] [data-cancel]{color:var(--normal-text);background:rgba(0,0,0,.08)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-styled=true] [data-cancel]{background:rgba(255,255,255,.3)}[data-sonner-toast][data-styled=true] [data-close-button]{position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;color:var(--gray12);background:var(--normal-bg);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast][data-styled=true] [data-close-button]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-styled=true] [data-disabled=true]{cursor:not-allowed}[data-sonner-toast][data-styled=true]:hover [data-close-button]:hover{background:var(--gray2);border-color:var(--gray5)}[data-sonner-toast][data-swiping=true]::before{content:'';position:absolute;left:-100%;right:-100%;height:100%;z-index:-1}[data-sonner-toast][data-y-position=top][data-swiping=true]::before{bottom:50%;transform:scaleY(3) translateY(50%)}[data-sonner-toast][data-y-position=bottom][data-swiping=true]::before{top:50%;transform:scaleY(3) translateY(-50%)}[data-sonner-toast][data-swiping=false][data-removed=true]::before{content:'';position:absolute;inset:0;transform:scaleY(2)}[data-sonner-toast][data-expanded=true]::after{content:'';position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}[data-sonner-toast][data-mounted=true]{--y:translateY(0);opacity:1}[data-sonner-toast][data-expanded=false][data-front=false]{--scale:var(--toasts-before) * 0.05 + 1;--y:translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}[data-sonner-toast]>*{transition:opacity .4s}[data-sonner-toast][data-x-position=right]{right:0}[data-sonner-toast][data-x-position=left]{left:0}[data-sonner-toast][data-expanded=false][data-front=false][data-styled=true]>*{opacity:0}[data-sonner-toast][data-visible=false]{opacity:0;pointer-events:none}[data-sonner-toast][data-mounted=true][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}[data-sonner-toast][data-removed=true][data-front=true][data-swipe-out=false]{--y:translateY(calc(var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=false]{--y:translateY(40%);opacity:0;transition:transform .5s,opacity .2s}[data-sonner-toast][data-removed=true][data-front=false]::before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount-y,0)) translateX(var(--swipe-amount-x,0));transition:none}[data-sonner-toast][data-swiped=true]{user-select:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=left]{animation-name:swipe-out-left}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=right]{animation-name:swipe-out-right}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=up]{animation-name:swipe-out-up}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=down]{animation-name:swipe-out-down}@keyframes swipe-out-left{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) - 100%));opacity:0}}@keyframes swipe-out-right{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) + 100%));opacity:0}}@keyframes swipe-out-up{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) - 100%));opacity:0}}@keyframes swipe-out-down{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) + 100%));opacity:0}}@media (max-width:600px){[data-sonner-toaster]{position:fixed;right:var(--mobile-offset-right);left:var(--mobile-offset-left);width:100%}[data-sonner-toaster][dir=rtl]{left:calc(var(--mobile-offset-left) * -1)}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset-left) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset-left)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--mobile-offset-bottom)}[data-sonner-toaster][data-y-position=top]{top:var(--mobile-offset-top)}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset-left);right:var(--mobile-offset-right);transform:none}}[data-sonner-toaster][data-sonner-theme=light]{--normal-bg:#fff;--normal-border:var(--gray4);--normal-text:var(--gray12);--success-bg:hsl(143, 85%, 96%);--success-border:hsl(145, 92%, 87%);--success-text:hsl(140, 100%, 27%);--info-bg:hsl(208, 100%, 97%);--info-border:hsl(221, 91%, 93%);--info-text:hsl(210, 92%, 45%);--warning-bg:hsl(49, 100%, 97%);--warning-border:hsl(49, 91%, 84%);--warning-text:hsl(31, 92%, 45%);--error-bg:hsl(359, 100%, 97%);--error-border:hsl(359, 100%, 94%);--error-text:hsl(360, 100%, 45%)}[data-sonner-toaster][data-sonner-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg:#000;--normal-border:hsl(0, 0%, 20%);--normal-text:var(--gray1)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg:#fff;--normal-border:var(--gray3);--normal-text:var(--gray12)}[data-sonner-toaster][data-sonner-theme=dark]{--normal-bg:#000;--normal-bg-hover:hsl(0, 0%, 12%);--normal-border:hsl(0, 0%, 20%);--normal-border-hover:hsl(0, 0%, 25%);--normal-text:var(--gray1);--success-bg:hsl(150, 100%, 6%);--success-border:hsl(147, 100%, 12%);--success-text:hsl(150, 86%, 65%);--info-bg:hsl(215, 100%, 6%);--info-border:hsl(223, 43%, 17%);--info-text:hsl(216, 87%, 65%);--warning-bg:hsl(64, 100%, 6%);--warning-border:hsl(60, 100%, 9%);--warning-text:hsl(46, 87%, 65%);--error-bg:hsl(358, 76%, 10%);--error-border:hsl(357, 89%, 16%);--error-text:hsl(358, 100%, 81%)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]{background:var(--normal-bg);border-color:var(--normal-border);color:var(--normal-text)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]:hover{background:var(--normal-bg-hover);border-color:var(--normal-border-hover)}[data-rich-colors=true][data-sonner-toast][data-type=success]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=info]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=error]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}[data-rich-colors=true][data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size:16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:first-child{animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}100%{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}100%{opacity:.15}}@media (prefers-reduced-motion){.sonner-loading-bar,[data-sonner-toast],[data-sonner-toast]>*{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}\");\n\nfunction isAction(action) {\n    return action.label !== undefined;\n}\n\n// Visible toasts amount\nconst VISIBLE_TOASTS_AMOUNT = 3;\n// Viewport padding\nconst VIEWPORT_OFFSET = '24px';\n// Mobile viewport padding\nconst MOBILE_VIEWPORT_OFFSET = '16px';\n// Default lifetime of a toasts (in ms)\nconst TOAST_LIFETIME = 4000;\n// Default toast width\nconst TOAST_WIDTH = 356;\n// Default gap between toasts\nconst GAP = 14;\n// Threshold to dismiss a toast\nconst SWIPE_THRESHOLD = 45;\n// Equal to exit animation duration\nconst TIME_BEFORE_UNMOUNT = 200;\nfunction cn(...classes) {\n    return classes.filter(Boolean).join(' ');\n}\nfunction getDefaultSwipeDirections(position) {\n    const [y, x] = position.split('-');\n    const directions = [];\n    if (y) {\n        directions.push(y);\n    }\n    if (x) {\n        directions.push(x);\n    }\n    return directions;\n}\nconst Toast = (props)=>{\n    var _toast_classNames, _toast_classNames1, _toast_classNames2, _toast_classNames3, _toast_classNames4, _toast_classNames5, _toast_classNames6, _toast_classNames7, _toast_classNames8;\n    const { invert: ToasterInvert, toast, unstyled, interacting, setHeights, visibleToasts, heights, index, toasts, expanded, removeToast, defaultRichColors, closeButton: closeButtonFromToaster, style, cancelButtonStyle, actionButtonStyle, className = '', descriptionClassName = '', duration: durationFromToaster, position, gap, expandByDefault, classNames, icons, closeButtonAriaLabel = 'Close toast' } = props;\n    const [swipeDirection, setSwipeDirection] = React.useState(null);\n    const [swipeOutDirection, setSwipeOutDirection] = React.useState(null);\n    const [mounted, setMounted] = React.useState(false);\n    const [removed, setRemoved] = React.useState(false);\n    const [swiping, setSwiping] = React.useState(false);\n    const [swipeOut, setSwipeOut] = React.useState(false);\n    const [isSwiped, setIsSwiped] = React.useState(false);\n    const [offsetBeforeRemove, setOffsetBeforeRemove] = React.useState(0);\n    const [initialHeight, setInitialHeight] = React.useState(0);\n    const remainingTime = React.useRef(toast.duration || durationFromToaster || TOAST_LIFETIME);\n    const dragStartTime = React.useRef(null);\n    const toastRef = React.useRef(null);\n    const isFront = index === 0;\n    const isVisible = index + 1 <= visibleToasts;\n    const toastType = toast.type;\n    const dismissible = toast.dismissible !== false;\n    const toastClassname = toast.className || '';\n    const toastDescriptionClassname = toast.descriptionClassName || '';\n    // Height index is used to calculate the offset as it gets updated before the toast array, which means we can calculate the new layout faster.\n    const heightIndex = React.useMemo(()=>heights.findIndex((height)=>height.toastId === toast.id) || 0, [\n        heights,\n        toast.id\n    ]);\n    const closeButton = React.useMemo(()=>{\n        var _toast_closeButton;\n        return (_toast_closeButton = toast.closeButton) != null ? _toast_closeButton : closeButtonFromToaster;\n    }, [\n        toast.closeButton,\n        closeButtonFromToaster\n    ]);\n    const duration = React.useMemo(()=>toast.duration || durationFromToaster || TOAST_LIFETIME, [\n        toast.duration,\n        durationFromToaster\n    ]);\n    const closeTimerStartTimeRef = React.useRef(0);\n    const offset = React.useRef(0);\n    const lastCloseTimerStartTimeRef = React.useRef(0);\n    const pointerStartRef = React.useRef(null);\n    const [y, x] = position.split('-');\n    const toastsHeightBefore = React.useMemo(()=>{\n        return heights.reduce((prev, curr, reducerIndex)=>{\n            // Calculate offset up until current toast\n            if (reducerIndex >= heightIndex) {\n                return prev;\n            }\n            return prev + curr.height;\n        }, 0);\n    }, [\n        heights,\n        heightIndex\n    ]);\n    const isDocumentHidden = useIsDocumentHidden();\n    const invert = toast.invert || ToasterInvert;\n    const disabled = toastType === 'loading';\n    offset.current = React.useMemo(()=>heightIndex * gap + toastsHeightBefore, [\n        heightIndex,\n        toastsHeightBefore\n    ]);\n    React.useEffect(()=>{\n        remainingTime.current = duration;\n    }, [\n        duration\n    ]);\n    React.useEffect(()=>{\n        // Trigger enter animation without using CSS animation\n        setMounted(true);\n    }, []);\n    React.useEffect(()=>{\n        const toastNode = toastRef.current;\n        if (toastNode) {\n            const height = toastNode.getBoundingClientRect().height;\n            // Add toast height to heights array after the toast is mounted\n            setInitialHeight(height);\n            setHeights((h)=>[\n                    {\n                        toastId: toast.id,\n                        height,\n                        position: toast.position\n                    },\n                    ...h\n                ]);\n            return ()=>setHeights((h)=>h.filter((height)=>height.toastId !== toast.id));\n        }\n    }, [\n        setHeights,\n        toast.id\n    ]);\n    React.useLayoutEffect(()=>{\n        if (!mounted) return;\n        const toastNode = toastRef.current;\n        const originalHeight = toastNode.style.height;\n        toastNode.style.height = 'auto';\n        const newHeight = toastNode.getBoundingClientRect().height;\n        toastNode.style.height = originalHeight;\n        setInitialHeight(newHeight);\n        setHeights((heights)=>{\n            const alreadyExists = heights.find((height)=>height.toastId === toast.id);\n            if (!alreadyExists) {\n                return [\n                    {\n                        toastId: toast.id,\n                        height: newHeight,\n                        position: toast.position\n                    },\n                    ...heights\n                ];\n            } else {\n                return heights.map((height)=>height.toastId === toast.id ? {\n                        ...height,\n                        height: newHeight\n                    } : height);\n            }\n        });\n    }, [\n        mounted,\n        toast.title,\n        toast.description,\n        setHeights,\n        toast.id\n    ]);\n    const deleteToast = React.useCallback(()=>{\n        // Save the offset for the exit swipe animation\n        setRemoved(true);\n        setOffsetBeforeRemove(offset.current);\n        setHeights((h)=>h.filter((height)=>height.toastId !== toast.id));\n        setTimeout(()=>{\n            removeToast(toast);\n        }, TIME_BEFORE_UNMOUNT);\n    }, [\n        toast,\n        removeToast,\n        setHeights,\n        offset\n    ]);\n    React.useEffect(()=>{\n        if (toast.promise && toastType === 'loading' || toast.duration === Infinity || toast.type === 'loading') return;\n        let timeoutId;\n        // Pause the timer on each hover\n        const pauseTimer = ()=>{\n            if (lastCloseTimerStartTimeRef.current < closeTimerStartTimeRef.current) {\n                // Get the elapsed time since the timer started\n                const elapsedTime = new Date().getTime() - closeTimerStartTimeRef.current;\n                remainingTime.current = remainingTime.current - elapsedTime;\n            }\n            lastCloseTimerStartTimeRef.current = new Date().getTime();\n        };\n        const startTimer = ()=>{\n            // setTimeout(, Infinity) behaves as if the delay is 0.\n            // As a result, the toast would be closed immediately, giving the appearance that it was never rendered.\n            // See: https://github.com/denysdovhan/wtfjs?tab=readme-ov-file#an-infinite-timeout\n            if (remainingTime.current === Infinity) return;\n            closeTimerStartTimeRef.current = new Date().getTime();\n            // Let the toast know it has started\n            timeoutId = setTimeout(()=>{\n                toast.onAutoClose == null ? void 0 : toast.onAutoClose.call(toast, toast);\n                deleteToast();\n            }, remainingTime.current);\n        };\n        if (expanded || interacting || isDocumentHidden) {\n            pauseTimer();\n        } else {\n            startTimer();\n        }\n        return ()=>clearTimeout(timeoutId);\n    }, [\n        expanded,\n        interacting,\n        toast,\n        toastType,\n        isDocumentHidden,\n        deleteToast\n    ]);\n    React.useEffect(()=>{\n        if (toast.delete) {\n            deleteToast();\n        }\n    }, [\n        deleteToast,\n        toast.delete\n    ]);\n    function getLoadingIcon() {\n        var _toast_classNames;\n        if (icons == null ? void 0 : icons.loading) {\n            var _toast_classNames1;\n            return /*#__PURE__*/ React.createElement(\"div\", {\n                className: cn(classNames == null ? void 0 : classNames.loader, toast == null ? void 0 : (_toast_classNames1 = toast.classNames) == null ? void 0 : _toast_classNames1.loader, 'sonner-loader'),\n                \"data-visible\": toastType === 'loading'\n            }, icons.loading);\n        }\n        return /*#__PURE__*/ React.createElement(Loader, {\n            className: cn(classNames == null ? void 0 : classNames.loader, toast == null ? void 0 : (_toast_classNames = toast.classNames) == null ? void 0 : _toast_classNames.loader),\n            visible: toastType === 'loading'\n        });\n    }\n    const icon = toast.icon || (icons == null ? void 0 : icons[toastType]) || getAsset(toastType);\n    var _toast_richColors, _icons_close;\n    return /*#__PURE__*/ React.createElement(\"li\", {\n        tabIndex: 0,\n        ref: toastRef,\n        className: cn(className, toastClassname, classNames == null ? void 0 : classNames.toast, toast == null ? void 0 : (_toast_classNames = toast.classNames) == null ? void 0 : _toast_classNames.toast, classNames == null ? void 0 : classNames.default, classNames == null ? void 0 : classNames[toastType], toast == null ? void 0 : (_toast_classNames1 = toast.classNames) == null ? void 0 : _toast_classNames1[toastType]),\n        \"data-sonner-toast\": \"\",\n        \"data-rich-colors\": (_toast_richColors = toast.richColors) != null ? _toast_richColors : defaultRichColors,\n        \"data-styled\": !Boolean(toast.jsx || toast.unstyled || unstyled),\n        \"data-mounted\": mounted,\n        \"data-promise\": Boolean(toast.promise),\n        \"data-swiped\": isSwiped,\n        \"data-removed\": removed,\n        \"data-visible\": isVisible,\n        \"data-y-position\": y,\n        \"data-x-position\": x,\n        \"data-index\": index,\n        \"data-front\": isFront,\n        \"data-swiping\": swiping,\n        \"data-dismissible\": dismissible,\n        \"data-type\": toastType,\n        \"data-invert\": invert,\n        \"data-swipe-out\": swipeOut,\n        \"data-swipe-direction\": swipeOutDirection,\n        \"data-expanded\": Boolean(expanded || expandByDefault && mounted),\n        style: {\n            '--index': index,\n            '--toasts-before': index,\n            '--z-index': toasts.length - index,\n            '--offset': `${removed ? offsetBeforeRemove : offset.current}px`,\n            '--initial-height': expandByDefault ? 'auto' : `${initialHeight}px`,\n            ...style,\n            ...toast.style\n        },\n        onDragEnd: ()=>{\n            setSwiping(false);\n            setSwipeDirection(null);\n            pointerStartRef.current = null;\n        },\n        onPointerDown: (event)=>{\n            if (disabled || !dismissible) return;\n            dragStartTime.current = new Date();\n            setOffsetBeforeRemove(offset.current);\n            // Ensure we maintain correct pointer capture even when going outside of the toast (e.g. when swiping)\n            event.target.setPointerCapture(event.pointerId);\n            if (event.target.tagName === 'BUTTON') return;\n            setSwiping(true);\n            pointerStartRef.current = {\n                x: event.clientX,\n                y: event.clientY\n            };\n        },\n        onPointerUp: ()=>{\n            var _toastRef_current, _toastRef_current1, _dragStartTime_current;\n            if (swipeOut || !dismissible) return;\n            pointerStartRef.current = null;\n            const swipeAmountX = Number(((_toastRef_current = toastRef.current) == null ? void 0 : _toastRef_current.style.getPropertyValue('--swipe-amount-x').replace('px', '')) || 0);\n            const swipeAmountY = Number(((_toastRef_current1 = toastRef.current) == null ? void 0 : _toastRef_current1.style.getPropertyValue('--swipe-amount-y').replace('px', '')) || 0);\n            const timeTaken = new Date().getTime() - ((_dragStartTime_current = dragStartTime.current) == null ? void 0 : _dragStartTime_current.getTime());\n            const swipeAmount = swipeDirection === 'x' ? swipeAmountX : swipeAmountY;\n            const velocity = Math.abs(swipeAmount) / timeTaken;\n            if (Math.abs(swipeAmount) >= SWIPE_THRESHOLD || velocity > 0.11) {\n                setOffsetBeforeRemove(offset.current);\n                toast.onDismiss == null ? void 0 : toast.onDismiss.call(toast, toast);\n                if (swipeDirection === 'x') {\n                    setSwipeOutDirection(swipeAmountX > 0 ? 'right' : 'left');\n                } else {\n                    setSwipeOutDirection(swipeAmountY > 0 ? 'down' : 'up');\n                }\n                deleteToast();\n                setSwipeOut(true);\n                return;\n            } else {\n                var _toastRef_current2, _toastRef_current3;\n                (_toastRef_current2 = toastRef.current) == null ? void 0 : _toastRef_current2.style.setProperty('--swipe-amount-x', `0px`);\n                (_toastRef_current3 = toastRef.current) == null ? void 0 : _toastRef_current3.style.setProperty('--swipe-amount-y', `0px`);\n            }\n            setIsSwiped(false);\n            setSwiping(false);\n            setSwipeDirection(null);\n        },\n        onPointerMove: (event)=>{\n            var _window_getSelection, // Apply transform using both x and y values\n            _toastRef_current, _toastRef_current1;\n            if (!pointerStartRef.current || !dismissible) return;\n            const isHighlighted = ((_window_getSelection = window.getSelection()) == null ? void 0 : _window_getSelection.toString().length) > 0;\n            if (isHighlighted) return;\n            const yDelta = event.clientY - pointerStartRef.current.y;\n            const xDelta = event.clientX - pointerStartRef.current.x;\n            var _props_swipeDirections;\n            const swipeDirections = (_props_swipeDirections = props.swipeDirections) != null ? _props_swipeDirections : getDefaultSwipeDirections(position);\n            // Determine swipe direction if not already locked\n            if (!swipeDirection && (Math.abs(xDelta) > 1 || Math.abs(yDelta) > 1)) {\n                setSwipeDirection(Math.abs(xDelta) > Math.abs(yDelta) ? 'x' : 'y');\n            }\n            let swipeAmount = {\n                x: 0,\n                y: 0\n            };\n            const getDampening = (delta)=>{\n                const factor = Math.abs(delta) / 20;\n                return 1 / (1.5 + factor);\n            };\n            // Only apply swipe in the locked direction\n            if (swipeDirection === 'y') {\n                // Handle vertical swipes\n                if (swipeDirections.includes('top') || swipeDirections.includes('bottom')) {\n                    if (swipeDirections.includes('top') && yDelta < 0 || swipeDirections.includes('bottom') && yDelta > 0) {\n                        swipeAmount.y = yDelta;\n                    } else {\n                        // Smoothly transition to dampened movement\n                        const dampenedDelta = yDelta * getDampening(yDelta);\n                        // Ensure we don't jump when transitioning to dampened movement\n                        swipeAmount.y = Math.abs(dampenedDelta) < Math.abs(yDelta) ? dampenedDelta : yDelta;\n                    }\n                }\n            } else if (swipeDirection === 'x') {\n                // Handle horizontal swipes\n                if (swipeDirections.includes('left') || swipeDirections.includes('right')) {\n                    if (swipeDirections.includes('left') && xDelta < 0 || swipeDirections.includes('right') && xDelta > 0) {\n                        swipeAmount.x = xDelta;\n                    } else {\n                        // Smoothly transition to dampened movement\n                        const dampenedDelta = xDelta * getDampening(xDelta);\n                        // Ensure we don't jump when transitioning to dampened movement\n                        swipeAmount.x = Math.abs(dampenedDelta) < Math.abs(xDelta) ? dampenedDelta : xDelta;\n                    }\n                }\n            }\n            if (Math.abs(swipeAmount.x) > 0 || Math.abs(swipeAmount.y) > 0) {\n                setIsSwiped(true);\n            }\n            (_toastRef_current = toastRef.current) == null ? void 0 : _toastRef_current.style.setProperty('--swipe-amount-x', `${swipeAmount.x}px`);\n            (_toastRef_current1 = toastRef.current) == null ? void 0 : _toastRef_current1.style.setProperty('--swipe-amount-y', `${swipeAmount.y}px`);\n        }\n    }, closeButton && !toast.jsx && toastType !== 'loading' ? /*#__PURE__*/ React.createElement(\"button\", {\n        \"aria-label\": closeButtonAriaLabel,\n        \"data-disabled\": disabled,\n        \"data-close-button\": true,\n        onClick: disabled || !dismissible ? ()=>{} : ()=>{\n            deleteToast();\n            toast.onDismiss == null ? void 0 : toast.onDismiss.call(toast, toast);\n        },\n        className: cn(classNames == null ? void 0 : classNames.closeButton, toast == null ? void 0 : (_toast_classNames2 = toast.classNames) == null ? void 0 : _toast_classNames2.closeButton)\n    }, (_icons_close = icons == null ? void 0 : icons.close) != null ? _icons_close : CloseIcon) : null, (toastType || toast.icon || toast.promise) && toast.icon !== null && ((icons == null ? void 0 : icons[toastType]) !== null || toast.icon) ? /*#__PURE__*/ React.createElement(\"div\", {\n        \"data-icon\": \"\",\n        className: cn(classNames == null ? void 0 : classNames.icon, toast == null ? void 0 : (_toast_classNames3 = toast.classNames) == null ? void 0 : _toast_classNames3.icon)\n    }, toast.promise || toast.type === 'loading' && !toast.icon ? toast.icon || getLoadingIcon() : null, toast.type !== 'loading' ? icon : null) : null, /*#__PURE__*/ React.createElement(\"div\", {\n        \"data-content\": \"\",\n        className: cn(classNames == null ? void 0 : classNames.content, toast == null ? void 0 : (_toast_classNames4 = toast.classNames) == null ? void 0 : _toast_classNames4.content)\n    }, /*#__PURE__*/ React.createElement(\"div\", {\n        \"data-title\": \"\",\n        className: cn(classNames == null ? void 0 : classNames.title, toast == null ? void 0 : (_toast_classNames5 = toast.classNames) == null ? void 0 : _toast_classNames5.title)\n    }, toast.jsx ? toast.jsx : typeof toast.title === 'function' ? toast.title() : toast.title), toast.description ? /*#__PURE__*/ React.createElement(\"div\", {\n        \"data-description\": \"\",\n        className: cn(descriptionClassName, toastDescriptionClassname, classNames == null ? void 0 : classNames.description, toast == null ? void 0 : (_toast_classNames6 = toast.classNames) == null ? void 0 : _toast_classNames6.description)\n    }, typeof toast.description === 'function' ? toast.description() : toast.description) : null), /*#__PURE__*/ React.isValidElement(toast.cancel) ? toast.cancel : toast.cancel && isAction(toast.cancel) ? /*#__PURE__*/ React.createElement(\"button\", {\n        \"data-button\": true,\n        \"data-cancel\": true,\n        style: toast.cancelButtonStyle || cancelButtonStyle,\n        onClick: (event)=>{\n            // We need to check twice because typescript\n            if (!isAction(toast.cancel)) return;\n            if (!dismissible) return;\n            toast.cancel.onClick == null ? void 0 : toast.cancel.onClick.call(toast.cancel, event);\n            deleteToast();\n        },\n        className: cn(classNames == null ? void 0 : classNames.cancelButton, toast == null ? void 0 : (_toast_classNames7 = toast.classNames) == null ? void 0 : _toast_classNames7.cancelButton)\n    }, toast.cancel.label) : null, /*#__PURE__*/ React.isValidElement(toast.action) ? toast.action : toast.action && isAction(toast.action) ? /*#__PURE__*/ React.createElement(\"button\", {\n        \"data-button\": true,\n        \"data-action\": true,\n        style: toast.actionButtonStyle || actionButtonStyle,\n        onClick: (event)=>{\n            // We need to check twice because typescript\n            if (!isAction(toast.action)) return;\n            toast.action.onClick == null ? void 0 : toast.action.onClick.call(toast.action, event);\n            if (event.defaultPrevented) return;\n            deleteToast();\n        },\n        className: cn(classNames == null ? void 0 : classNames.actionButton, toast == null ? void 0 : (_toast_classNames8 = toast.classNames) == null ? void 0 : _toast_classNames8.actionButton)\n    }, toast.action.label) : null);\n};\nfunction getDocumentDirection() {\n    if (typeof window === 'undefined') return 'ltr';\n    if (typeof document === 'undefined') return 'ltr'; // For Fresh purpose\n    const dirAttribute = document.documentElement.getAttribute('dir');\n    if (dirAttribute === 'auto' || !dirAttribute) {\n        return window.getComputedStyle(document.documentElement).direction;\n    }\n    return dirAttribute;\n}\nfunction assignOffset(defaultOffset, mobileOffset) {\n    const styles = {};\n    [\n        defaultOffset,\n        mobileOffset\n    ].forEach((offset, index)=>{\n        const isMobile = index === 1;\n        const prefix = isMobile ? '--mobile-offset' : '--offset';\n        const defaultValue = isMobile ? MOBILE_VIEWPORT_OFFSET : VIEWPORT_OFFSET;\n        function assignAll(offset) {\n            [\n                'top',\n                'right',\n                'bottom',\n                'left'\n            ].forEach((key)=>{\n                styles[`${prefix}-${key}`] = typeof offset === 'number' ? `${offset}px` : offset;\n            });\n        }\n        if (typeof offset === 'number' || typeof offset === 'string') {\n            assignAll(offset);\n        } else if (typeof offset === 'object') {\n            [\n                'top',\n                'right',\n                'bottom',\n                'left'\n            ].forEach((key)=>{\n                if (offset[key] === undefined) {\n                    styles[`${prefix}-${key}`] = defaultValue;\n                } else {\n                    styles[`${prefix}-${key}`] = typeof offset[key] === 'number' ? `${offset[key]}px` : offset[key];\n                }\n            });\n        } else {\n            assignAll(defaultValue);\n        }\n    });\n    return styles;\n}\nfunction useSonner() {\n    const [activeToasts, setActiveToasts] = React.useState([]);\n    React.useEffect(()=>{\n        return ToastState.subscribe((toast)=>{\n            if (toast.dismiss) {\n                setTimeout(()=>{\n                    ReactDOM.flushSync(()=>{\n                        setActiveToasts((toasts)=>toasts.filter((t)=>t.id !== toast.id));\n                    });\n                });\n                return;\n            }\n            // Prevent batching, temp solution.\n            setTimeout(()=>{\n                ReactDOM.flushSync(()=>{\n                    setActiveToasts((toasts)=>{\n                        const indexOfExistingToast = toasts.findIndex((t)=>t.id === toast.id);\n                        // Update the toast if it already exists\n                        if (indexOfExistingToast !== -1) {\n                            return [\n                                ...toasts.slice(0, indexOfExistingToast),\n                                {\n                                    ...toasts[indexOfExistingToast],\n                                    ...toast\n                                },\n                                ...toasts.slice(indexOfExistingToast + 1)\n                            ];\n                        }\n                        return [\n                            toast,\n                            ...toasts\n                        ];\n                    });\n                });\n            });\n        });\n    }, []);\n    return {\n        toasts: activeToasts\n    };\n}\nconst Toaster = /*#__PURE__*/ React.forwardRef(function Toaster(props, ref) {\n    const { invert, position = 'bottom-right', hotkey = [\n        'altKey',\n        'KeyT'\n    ], expand, closeButton, className, offset, mobileOffset, theme = 'light', richColors, duration, style, visibleToasts = VISIBLE_TOASTS_AMOUNT, toastOptions, dir = getDocumentDirection(), gap = GAP, icons, containerAriaLabel = 'Notifications' } = props;\n    const [toasts, setToasts] = React.useState([]);\n    const possiblePositions = React.useMemo(()=>{\n        return Array.from(new Set([\n            position\n        ].concat(toasts.filter((toast)=>toast.position).map((toast)=>toast.position))));\n    }, [\n        toasts,\n        position\n    ]);\n    const [heights, setHeights] = React.useState([]);\n    const [expanded, setExpanded] = React.useState(false);\n    const [interacting, setInteracting] = React.useState(false);\n    const [actualTheme, setActualTheme] = React.useState(theme !== 'system' ? theme : typeof window !== 'undefined' ? window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light' : 'light');\n    const listRef = React.useRef(null);\n    const hotkeyLabel = hotkey.join('+').replace(/Key/g, '').replace(/Digit/g, '');\n    const lastFocusedElementRef = React.useRef(null);\n    const isFocusWithinRef = React.useRef(false);\n    const removeToast = React.useCallback((toastToRemove)=>{\n        setToasts((toasts)=>{\n            var _toasts_find;\n            if (!((_toasts_find = toasts.find((toast)=>toast.id === toastToRemove.id)) == null ? void 0 : _toasts_find.delete)) {\n                ToastState.dismiss(toastToRemove.id);\n            }\n            return toasts.filter(({ id })=>id !== toastToRemove.id);\n        });\n    }, []);\n    React.useEffect(()=>{\n        return ToastState.subscribe((toast)=>{\n            if (toast.dismiss) {\n                // Prevent batching of other state updates\n                requestAnimationFrame(()=>{\n                    setToasts((toasts)=>toasts.map((t)=>t.id === toast.id ? {\n                                ...t,\n                                delete: true\n                            } : t));\n                });\n                return;\n            }\n            // Prevent batching, temp solution.\n            setTimeout(()=>{\n                ReactDOM.flushSync(()=>{\n                    setToasts((toasts)=>{\n                        const indexOfExistingToast = toasts.findIndex((t)=>t.id === toast.id);\n                        // Update the toast if it already exists\n                        if (indexOfExistingToast !== -1) {\n                            return [\n                                ...toasts.slice(0, indexOfExistingToast),\n                                {\n                                    ...toasts[indexOfExistingToast],\n                                    ...toast\n                                },\n                                ...toasts.slice(indexOfExistingToast + 1)\n                            ];\n                        }\n                        return [\n                            toast,\n                            ...toasts\n                        ];\n                    });\n                });\n            });\n        });\n    }, [\n        toasts\n    ]);\n    React.useEffect(()=>{\n        if (theme !== 'system') {\n            setActualTheme(theme);\n            return;\n        }\n        if (theme === 'system') {\n            // check if current preference is dark\n            if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n                // it's currently dark\n                setActualTheme('dark');\n            } else {\n                // it's not dark\n                setActualTheme('light');\n            }\n        }\n        if (typeof window === 'undefined') return;\n        const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n        try {\n            // Chrome & Firefox\n            darkMediaQuery.addEventListener('change', ({ matches })=>{\n                if (matches) {\n                    setActualTheme('dark');\n                } else {\n                    setActualTheme('light');\n                }\n            });\n        } catch (error) {\n            // Safari < 14\n            darkMediaQuery.addListener(({ matches })=>{\n                try {\n                    if (matches) {\n                        setActualTheme('dark');\n                    } else {\n                        setActualTheme('light');\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            });\n        }\n    }, [\n        theme\n    ]);\n    React.useEffect(()=>{\n        // Ensure expanded is always false when no toasts are present / only one left\n        if (toasts.length <= 1) {\n            setExpanded(false);\n        }\n    }, [\n        toasts\n    ]);\n    React.useEffect(()=>{\n        const handleKeyDown = (event)=>{\n            var _listRef_current;\n            const isHotkeyPressed = hotkey.every((key)=>event[key] || event.code === key);\n            if (isHotkeyPressed) {\n                var _listRef_current1;\n                setExpanded(true);\n                (_listRef_current1 = listRef.current) == null ? void 0 : _listRef_current1.focus();\n            }\n            if (event.code === 'Escape' && (document.activeElement === listRef.current || ((_listRef_current = listRef.current) == null ? void 0 : _listRef_current.contains(document.activeElement)))) {\n                setExpanded(false);\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return ()=>document.removeEventListener('keydown', handleKeyDown);\n    }, [\n        hotkey\n    ]);\n    React.useEffect(()=>{\n        if (listRef.current) {\n            return ()=>{\n                if (lastFocusedElementRef.current) {\n                    lastFocusedElementRef.current.focus({\n                        preventScroll: true\n                    });\n                    lastFocusedElementRef.current = null;\n                    isFocusWithinRef.current = false;\n                }\n            };\n        }\n    }, [\n        listRef.current\n    ]);\n    return(// Remove item from normal navigation flow, only available via hotkey\n    /*#__PURE__*/ React.createElement(\"section\", {\n        ref: ref,\n        \"aria-label\": `${containerAriaLabel} ${hotkeyLabel}`,\n        tabIndex: -1,\n        \"aria-live\": \"polite\",\n        \"aria-relevant\": \"additions text\",\n        \"aria-atomic\": \"false\",\n        suppressHydrationWarning: true\n    }, possiblePositions.map((position, index)=>{\n        var _heights_;\n        const [y, x] = position.split('-');\n        if (!toasts.length) return null;\n        return /*#__PURE__*/ React.createElement(\"ol\", {\n            key: position,\n            dir: dir === 'auto' ? getDocumentDirection() : dir,\n            tabIndex: -1,\n            ref: listRef,\n            className: className,\n            \"data-sonner-toaster\": true,\n            \"data-sonner-theme\": actualTheme,\n            \"data-y-position\": y,\n            \"data-lifted\": expanded && toasts.length > 1 && !expand,\n            \"data-x-position\": x,\n            style: {\n                '--front-toast-height': `${((_heights_ = heights[0]) == null ? void 0 : _heights_.height) || 0}px`,\n                '--width': `${TOAST_WIDTH}px`,\n                '--gap': `${gap}px`,\n                ...style,\n                ...assignOffset(offset, mobileOffset)\n            },\n            onBlur: (event)=>{\n                if (isFocusWithinRef.current && !event.currentTarget.contains(event.relatedTarget)) {\n                    isFocusWithinRef.current = false;\n                    if (lastFocusedElementRef.current) {\n                        lastFocusedElementRef.current.focus({\n                            preventScroll: true\n                        });\n                        lastFocusedElementRef.current = null;\n                    }\n                }\n            },\n            onFocus: (event)=>{\n                const isNotDismissible = event.target instanceof HTMLElement && event.target.dataset.dismissible === 'false';\n                if (isNotDismissible) return;\n                if (!isFocusWithinRef.current) {\n                    isFocusWithinRef.current = true;\n                    lastFocusedElementRef.current = event.relatedTarget;\n                }\n            },\n            onMouseEnter: ()=>setExpanded(true),\n            onMouseMove: ()=>setExpanded(true),\n            onMouseLeave: ()=>{\n                // Avoid setting expanded to false when interacting with a toast, e.g. swiping\n                if (!interacting) {\n                    setExpanded(false);\n                }\n            },\n            onDragEnd: ()=>setExpanded(false),\n            onPointerDown: (event)=>{\n                const isNotDismissible = event.target instanceof HTMLElement && event.target.dataset.dismissible === 'false';\n                if (isNotDismissible) return;\n                setInteracting(true);\n            },\n            onPointerUp: ()=>setInteracting(false)\n        }, toasts.filter((toast)=>!toast.position && index === 0 || toast.position === position).map((toast, index)=>{\n            var _toastOptions_duration, _toastOptions_closeButton;\n            return /*#__PURE__*/ React.createElement(Toast, {\n                key: toast.id,\n                icons: icons,\n                index: index,\n                toast: toast,\n                defaultRichColors: richColors,\n                duration: (_toastOptions_duration = toastOptions == null ? void 0 : toastOptions.duration) != null ? _toastOptions_duration : duration,\n                className: toastOptions == null ? void 0 : toastOptions.className,\n                descriptionClassName: toastOptions == null ? void 0 : toastOptions.descriptionClassName,\n                invert: invert,\n                visibleToasts: visibleToasts,\n                closeButton: (_toastOptions_closeButton = toastOptions == null ? void 0 : toastOptions.closeButton) != null ? _toastOptions_closeButton : closeButton,\n                interacting: interacting,\n                position: position,\n                style: toastOptions == null ? void 0 : toastOptions.style,\n                unstyled: toastOptions == null ? void 0 : toastOptions.unstyled,\n                classNames: toastOptions == null ? void 0 : toastOptions.classNames,\n                cancelButtonStyle: toastOptions == null ? void 0 : toastOptions.cancelButtonStyle,\n                actionButtonStyle: toastOptions == null ? void 0 : toastOptions.actionButtonStyle,\n                closeButtonAriaLabel: toastOptions == null ? void 0 : toastOptions.closeButtonAriaLabel,\n                removeToast: removeToast,\n                toasts: toasts.filter((t)=>t.position == toast.position),\n                heights: heights.filter((h)=>h.position == toast.position),\n                setHeights: setHeights,\n                expandByDefault: expand,\n                gap: gap,\n                expanded: expanded,\n                swipeDirections: props.swipeDirections\n            });\n        }));\n    })));\n});\n\nexport { Toaster, toast, useSonner };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}