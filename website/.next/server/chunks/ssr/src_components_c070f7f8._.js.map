{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6WAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6WAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/src/components/tables/data-table.tsx"],"sourcesContent":["'use client';\n\nimport {\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  Row,\n  useReactTable,\n} from '@tanstack/react-table';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\n\nexport interface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n  onClick,\n}: DataTableProps<TData, TValue> & {\n  onClick?(rows: Row<TData>): void;\n}) {\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <div className='rounded-md border'>\n      <Table>\n        <TableHeader>\n          {table.getHeaderGroups().map(headerGroup => (\n            <TableRow key={headerGroup.id}>\n              {headerGroup.headers.map(header => {\n                return (\n                  <TableHead key={header.id}>\n                    {header.isPlaceholder\n                      ? null\n                      : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext(),\n                        )}\n                  </TableHead>\n                );\n              })}\n            </TableRow>\n          ))}\n        </TableHeader>\n        <TableBody>\n          {table.getRowModel().rows?.length ? (\n            table.getRowModel().rows.map(row => (\n              <TableRow\n                className={onClick !== undefined ? 'cursor-pointer' : ''}\n                key={row.id}\n                data-state={row.getIsSelected() && 'selected'}\n                onClick={() => {\n                  if (onClick !== undefined) onClick(row);\n                }}\n              >\n                {row.getVisibleCells().map(cell => (\n                  <TableCell key={cell.id}>\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell colSpan={columns.length} className='h-24 text-center'>\n                No results.\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAQA;AAVA;;;;AAwBO,SAAS,UAAyB,EACvC,OAAO,EACP,IAAI,EACJ,OAAO,EAGR;IACC,MAAM,QAAQ,CAAA,GAAA,6UAAA,CAAA,gBAAa,AAAD,EAAE;QAC1B;QACA;QACA,iBAAiB,CAAA,GAAA,8OAAA,CAAA,kBAAe,AAAD;IACjC;IAEA,qBACE,6WAAC;QAAI,WAAU;kBACb,cAAA,6WAAC,iIAAA,CAAA,QAAK;;8BACJ,6WAAC,iIAAA,CAAA,cAAW;8BACT,MAAM,eAAe,GAAG,GAAG,CAAC,CAAA,4BAC3B,6WAAC,iIAAA,CAAA,WAAQ;sCACN,YAAY,OAAO,CAAC,GAAG,CAAC,CAAA;gCACvB,qBACE,6WAAC,iIAAA,CAAA,YAAS;8CACP,OAAO,aAAa,GACjB,OACA,CAAA,GAAA,6UAAA,CAAA,aAAU,AAAD,EACP,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,EAC9B,OAAO,UAAU;mCALT,OAAO,EAAE;;;;;4BAS7B;2BAZa,YAAY,EAAE;;;;;;;;;;8BAgBjC,6WAAC,iIAAA,CAAA,YAAS;8BACP,MAAM,WAAW,GAAG,IAAI,EAAE,SACzB,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAA,oBAC3B,6WAAC,iIAAA,CAAA,WAAQ;4BACP,WAAW,YAAY,YAAY,mBAAmB;4BAEtD,cAAY,IAAI,aAAa,MAAM;4BACnC,SAAS;gCACP,IAAI,YAAY,WAAW,QAAQ;4BACrC;sCAEC,IAAI,eAAe,GAAG,GAAG,CAAC,CAAA,qBACzB,6WAAC,iIAAA,CAAA,YAAS;8CACP,CAAA,GAAA,6UAAA,CAAA,aAAU,AAAD,EAAE,KAAK,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,UAAU;mCADzC,KAAK,EAAE;;;;;2BAPpB,IAAI,EAAE;;;;kDAcf,6WAAC,iIAAA,CAAA,WAAQ;kCACP,cAAA,6WAAC,iIAAA,CAAA,YAAS;4BAAC,SAAS,QAAQ,MAAM;4BAAE,WAAU;sCAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS/E","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///Users/edelweiss/Projects/go/src/github.com/edelwei88/bytebuild-go/website/src/components/tables/user-compiles.tsx"],"sourcesContent":["'use client';\n\nimport { Compile } from '@/types/api/compile';\nimport { ColumnDef } from '@tanstack/react-table';\n\nexport const userCompilesColumns: ColumnDef<Compile>[] = [\n  {\n    accessorKey: 'id',\n    header: 'ID',\n  },\n  {\n    accessorKey: 'compiler.docker_image_name',\n    header: 'Компилятор',\n  },\n  {\n    accessorKey: 'source_code',\n    header: 'Исходный код',\n    cell: ({ cell }) => (\n      <div className='text-wrap'>{cell.renderValue() as string}</div>\n    ),\n  },\n  {\n    accessorKey: 'args',\n    header: 'Аргументы',\n  },\n  {\n    accessorKey: 'exit_code',\n    header: 'Код возврата',\n  },\n  {\n    accessorKey: 'stdout',\n    header: 'Стандартный вывод',\n    cell: ({ cell }) => (\n      <div className='text-wrap'>{cell.renderValue() as string}</div>\n    ),\n  },\n  {\n    accessorKey: 'stderr',\n    header: 'Стандартный вывод ошибки',\n    cell: ({ cell }) => (\n      <div className='text-wrap'>{cell.renderValue() as string}</div>\n    ),\n  },\n  {\n    accessorKey: 'compile_time',\n    header: 'Время компиляции',\n    cell: ({ cell }) => {\n      const dateTime = new Date((cell.getValue() as number) * 1000);\n      const time = dateTime.toLocaleTimeString('ru-RU');\n      const date = dateTime.toLocaleDateString('ru-RU');\n\n      return <div className='text-wrap'>{`${time} ${date}`}</div>;\n    },\n  },\n];\n"],"names":[],"mappings":";;;;AAAA;;AAKO,MAAM,sBAA4C;IACvD;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;QACR,MAAM,CAAC,EAAE,IAAI,EAAE,iBACb,6WAAC;gBAAI,WAAU;0BAAa,KAAK,WAAW;;;;;;IAEhD;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;QACR,MAAM,CAAC,EAAE,IAAI,EAAE,iBACb,6WAAC;gBAAI,WAAU;0BAAa,KAAK,WAAW;;;;;;IAEhD;IACA;QACE,aAAa;QACb,QAAQ;QACR,MAAM,CAAC,EAAE,IAAI,EAAE,iBACb,6WAAC;gBAAI,WAAU;0BAAa,KAAK,WAAW;;;;;;IAEhD;IACA;QACE,aAAa;QACb,QAAQ;QACR,MAAM,CAAC,EAAE,IAAI,EAAE;YACb,MAAM,WAAW,IAAI,KAAK,AAAC,KAAK,QAAQ,KAAgB;YACxD,MAAM,OAAO,SAAS,kBAAkB,CAAC;YACzC,MAAM,OAAO,SAAS,kBAAkB,CAAC;YAEzC,qBAAO,6WAAC;gBAAI,WAAU;0BAAa,GAAG,KAAK,CAAC,EAAE,MAAM;;;;;;QACtD;IACF;CACD","debugId":null}}]
}